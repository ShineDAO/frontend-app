{"version":3,"sources":["webpack:///./src/components/landing/UpcomingProjects/defi-options-dao-logo-new.png","webpack:///./src/components/templates/utils.js","webpack:///./src/components/common/Text/index.js","webpack:///./src/components/common/Avatar/styles.js","webpack:///./src/components/common/Avatar/index.js"],"names":["module","exports","addToWatchlist","metamaskDetails","a","console","log","window","web3","currentProvider","sendAsync","method","params","address","symbol","decimals","image","id","Math","round","random","err","addedBoolean","getCurrentMigrations","setCurrentMigration","abi","Migrations","migrationsInstance","eth","Contract","methods","last_completed_migration","call","currentMigration","getUserAddressProject","setUserAddress","setProjectBalance","tokenAbi","tokenContractAddress","ethereum","selectedAddress","userAddress","getProjectBalance","getUserAddress","setShineBalance","getShineBalance","getWeiRaised","setWeiRaised","saleAbi","saleContractAddress","simpleCrowdsaleInstance","weiRaised","getSeedSaleShnBalance","setSeedSaleShnBalance","abiToken","tokenInst","balanceOf","seedSaleShnBalance","shnAvailable","utils","fromWei","toString","getEthRaised","setEthRaised","ethRaised","getEthBalance","setBalance","getBalance","balance","shineBalance","shineBalanceFromWei","projectBalance","projectBalanceFromWei","getVestingPeriod","setVestingPeriod","vestingPeriod","getVestedBalances","setVestedBalances","vestedBalances","vestedBalancesFromWei","getRelativeCap","setRelativeCap","relativeCap","getContributions","setContributions","contributions","toPlainString","getIsSaleOpenForAll","setIsSaleOpenForAll","isSaleOpenForAll","getTier","getMaximumContribution","multiplier","timeConverter","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","withdrawTokens","gas","setTransactionBeingProcessed","setMetamaskErrorCode","setIsTokenWithdrawn","setShineBought","undefined","estimateGas","from","estimatedGas","send","message","search","enableAccessForTier1AndTier2","allowAllTierAccess","receipt","code","buyShineTokens","ethAmountToSpend","setEthAmountToSpend","setShineBoughtAmount","buyTokens","value","toWei","amountBoughtInWei","events","TokensPurchased","returnValues","amount","amountBoughtInTKNs","searchCapExceeded","loadWeb3","setWalletStatus","Web3","enable","alert","handleChangeOfEthAmountToSpend","handleChangeOfShnReference","shnReference","setShnReference","handleChangeOfNewRelativeCap","newRelativeCap","setNewRelativeCap","setShineTokenAddress","num","toLocaleString","useGrouping","estimateReceivedShn","rate","weiAmountToSpend","estimatedReceivedShn","Number","parseFloat","Text","styled","div","color","fontWeight","fontSize","margin","Image","img","Wrapper","width","height","Avatar","imageUrl","alt","src"],"mappings":"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","file":"c89474ba0b7020c6bab39a8d82a97dbe00162154-1bbe3844df5dabd1c22b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/defi-options-dao-logo-new-f722d6accb90b80ac00f2c7d1a9024a1.png\";","import Web3 from \"web3\";\nimport Migrations from \"../../../static/abi/Migrations.json\";\n//var migrationsContractAddress = \"0x194af59b7788e22CF6D0ce269876e143ca98db59\";\nvar migrationsContractAddress = \"0xfC84D046C5ac723722033d8DF9985d70d85D2B18\"; //ganache\n\n\nexport async function addToWatchlist(metamaskDetails) {\n    console.log(\"details \", metamaskDetails)\n    window.web3.currentProvider.sendAsync({\n        method: 'metamask_watchAsset',\n        params: {\n            \"type\": \"ERC20\", // Initially only supports ERC20, but eventually more!\n            \"options\": {\n                \"address\": metamaskDetails.address, // The address that the token is at.\n                \"symbol\": metamaskDetails.symbol, // A ticker symbol or shorthand, up to 5 chars.\n                \"decimals\": metamaskDetails.decimals, // The number of decimals in the token\n                \"image\": metamaskDetails.image, // A string url of the token logo\n            },\n        },\n        id: Math.round(Math.random() * 100000),\n    }, (err, addedBoolean) => {\n\n    })\n}\nexport async function getCurrentMigrations(setCurrentMigration) {\n    let abiArray = Migrations;\n    let abi = abiArray.abi;\n    let migrationsInstance = new window.web3.eth.Contract(abi, migrationsContractAddress);\n    let currentMigration = await migrationsInstance.methods.last_completed_migration().call();\n    setCurrentMigration(currentMigration)\n    console.log(\"current migrations is \", currentMigration);\n}\n\nexport async function getUserAddressProject(setUserAddress, setProjectBalance, tokenAbi, tokenContractAddress) {\n    let userAddress = await window.ethereum.selectedAddress;\n    setUserAddress(userAddress);\n    await getProjectBalance(setProjectBalance, userAddress, tokenAbi, tokenContractAddress);\n}\n\nexport async function getUserAddress(setUserAddress, setShineBalance, tokenAbi, tokenContractAddress) {\n    let userAddress = await window.ethereum.selectedAddress;\n    console.log(\"user address \", userAddress)\n    setUserAddress(userAddress);\n    await getShineBalance(setShineBalance, userAddress, tokenAbi, tokenContractAddress);\n}\n\nexport async function getWeiRaised(setWeiRaised, saleAbi, saleContractAddress) {\n    console.log(\"abi 1\", saleAbi)\n    let abi = saleAbi\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n    let weiRaised = await simpleCrowdsaleInstance.methods.weiRaised().call();\n\n    setWeiRaised(weiRaised);\n    console.log(\"Wei raised so far\", weiRaised);\n}\n\nexport async function getSeedSaleShnBalance(setSeedSaleShnBalance, tokenAbi, saleContractAddress, tokenContractAddress) {\n    var abiToken = tokenAbi\n    var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n    var seedSaleShnBalance = await tokenInst.methods.balanceOf(saleContractAddress).call();\n    let shnAvailable = window.web3.utils.fromWei(seedSaleShnBalance.toString(), \"ether\");\n\n    setSeedSaleShnBalance(shnAvailable);\n}\n\nexport async function getEthRaised(setEthRaised, saleAbi, saleContractAddress) {\n    let abi = saleAbi\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n    let weiRaised = await simpleCrowdsaleInstance.methods.weiRaised().call();\n    let ethRaised = window.web3.utils.fromWei(weiRaised.toString(), \"ether\");\n    setEthRaised(ethRaised);\n    console.log(\"Eth raised so far\", ethRaised);\n}\n\nexport async function getEthBalance(setBalance) {\n    window.web3.eth.getBalance(window.ethereum.selectedAddress, (err, balance) => {\n        //console.log(window.web3.utils.fromWei(balance, \"ether\") + \" ETH\");\n        setBalance(window.web3.utils.fromWei(balance.toString(), \"ether\"));\n    });\n}\nexport async function getShineBalance(setShineBalance, userAddress, tokenAbi, tokenContractAddress) {\n    var abiToken = tokenAbi;\n    var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n\n    var shineBalance = await tokenInst.methods.balanceOf(userAddress).call();\n\n\n    var shineBalanceFromWei = window.web3.utils.fromWei(shineBalance, \"ether\");\n    setShineBalance(shineBalanceFromWei);\n}\n\nexport async function getProjectBalance(setProjectBalance, userAddress, tokenAbi, tokenContractAddress) {\n    console.log(\"adress \", userAddress)\n    var abiToken = tokenAbi;\n    var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n\n    var projectBalance = await tokenInst.methods.balanceOf(userAddress).call();\n\n    var projectBalanceFromWei = window.web3.utils.fromWei(projectBalance, \"ether\");\n    setProjectBalance(projectBalanceFromWei);\n}\n\nexport async function getVestingPeriod(saleAbi, saleContractAddress, setUserAddress, setVestingPeriod) {\n    let userAddress = await window.ethereum.selectedAddress;\n    setUserAddress(userAddress);\n\n    var abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    var vestingPeriod = await simpleCrowdsaleInstance.methods.vestingPeriod(userAddress).call();\n\n    setVestingPeriod(vestingPeriod)\n}\nexport async function getVestedBalances(saleAbi, saleContractAddress, setUserAddress, setVestedBalances) {\n    let userAddress = await window.ethereum.selectedAddress;\n    setUserAddress(userAddress);\n\n    var abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    var vestedBalances = await simpleCrowdsaleInstance.methods.vestedBalances(userAddress).call();\n\n\n    var vestedBalancesFromWei = window.web3.utils.fromWei(vestedBalances, \"ether\");\n    setVestedBalances(vestedBalancesFromWei)\n}\n\nexport async function getRelativeCap(saleAbi, saleContractAddress, setUserAddress, setRelativeCap) {\n    let userAddress = await window.ethereum.selectedAddress;\n    setUserAddress(userAddress);\n\n    var abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    var relativeCap = await simpleCrowdsaleInstance.methods.relativeCap().call();\n\n    setRelativeCap(relativeCap)\n}\n\nexport async function getContributions(saleAbi, saleContractAddress, setUserAddress, setContributions) {\n    let userAddress = await window.ethereum.selectedAddress;\n    setUserAddress(userAddress);\n\n    var abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    var contributions = await simpleCrowdsaleInstance.methods.contributions(userAddress).call();\n\n    setContributions(window.web3.utils.fromWei(toPlainString(contributions), \"ether\"))\n}\n\nexport async function getIsSaleOpenForAll(saleAbi, saleContractAddress, setIsSaleOpenForAll) {\n\n    var abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    var isSaleOpenForAll = await simpleCrowdsaleInstance.methods.isSaleOpenForAll().call();\n\n    setIsSaleOpenForAll(isSaleOpenForAll)\n}\n\n\nexport function getTier(shineBalance) {\n    if (shineBalance < 15000) {\n        return \"No Tier\"\n    } else if (shineBalance >= 15000 && shineBalance < 50000) {\n        return \"Tier 1\"\n    } else if (shineBalance >= 50000 && shineBalance < 200000) {\n        return \"Tier 2\"\n    } else if (shineBalance >= 200000 && shineBalance < 400000) {\n        return \"Tier 3\"\n    } else if (shineBalance >= 400000) {\n        return \"Tier 4\"\n    }\n}\n\nexport function getMaximumContribution(relativeCap, shineBalance) {\n    console.log(\"rc, bal\", relativeCap, shineBalance)\n    let multiplier;\n    if (shineBalance < 1500) {\n        multiplier = 0\n    }\n    else if (shineBalance >= 15000 && shineBalance < 50000) {\n        multiplier = 1\n    } else if (shineBalance >= 50000 && shineBalance < 200000) {\n        multiplier = 2\n    } else if (shineBalance >= 200000 && shineBalance < 400000) {\n        multiplier = 4\n    } else if (shineBalance >= 400000) {\n        multiplier = 8\n    }\n    let maximumContribution = window.web3.utils.fromWei(toPlainString(relativeCap * multiplier), \"ether\");\n    return maximumContribution\n}\n\n//console.log(kFormatter(1200)); // 1.2k\n//console.log(kFormatter(-1200)); // -1.2k\n//console.log(kFormatter(900)); // 900\n//console.log(kFormatter(-900)); // -900\nexport function kFormatter(num) {\n    return Math.abs(num) > 999 ? Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'k' : Math.sign(num) * Math.abs(num)\n}\n\n\nexport function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    return time;\n}\n\nexport async function withdrawTokens(saleAbi, saleContractAddress, userAddress, gas, setTransactionBeingProcessed, setMetamaskErrorCode, setIsTokenWithdrawn, setShineBought) {\n    let abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    setTransactionBeingProcessed(true);\n    setMetamaskErrorCode(undefined)\n\n    try {\n\n        let estimatedGas = await simpleCrowdsaleInstance.methods.withdrawTokens(userAddress).estimateGas({\n            from: userAddress,\n            gas: gas,\n        })\n\n        const receipt = await simpleCrowdsaleInstance.methods.withdrawTokens(userAddress).send({\n            from: userAddress,\n            gas: estimatedGas,\n        });\n        setIsTokenWithdrawn(true)\n\n    } catch (e) {\n        console.log(\"err \", e);\n        setIsTokenWithdrawn(false);\n        setShineBought(false)\n        if (e.message.search(\"Vesting: the time required for vesting is not expired yet\") >= 0) {\n            setMetamaskErrorCode(\"The time required for vesting is not expired yet\");\n        }\n    }\n    setTransactionBeingProcessed(false);\n}\nexport async function enableAccessForTier1AndTier2(userAddress, gas, saleAbi, saleContractAddress) {\n    let abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    try {\n        let estimatedGas = await simpleCrowdsaleInstance.methods.allowAllTierAccess(true).estimateGas({\n            from: userAddress,\n            gas: gas,\n        })\n\n        const receipt = await simpleCrowdsaleInstance.methods.allowAllTierAccess(true).send({\n            from: userAddress,\n            gas: estimatedGas,\n        });\n        console.log(\"receipt\", receipt);\n    }\n    catch (e) {\n        console.log(\"err \", e);\n        console.log(\"Transaction rejected\", e.code);\n    }\n}\n\nexport async function buyShineTokens(\n    ethAmountToSpend,\n    setEthAmountToSpend,\n    setShineBought,\n    setShineBoughtAmount,\n    setTransactionBeingProcessed,\n    setMetamaskErrorCode,\n    userAddress,\n    saleAbi,\n    saleContractAddress,\n    gas\n) {\n    if (ethAmountToSpend !== \"\") { //disable button if no amount is entered\n        let abi = saleAbi;\n        let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n\n\n        setTransactionBeingProcessed(true);\n        setMetamaskErrorCode(undefined)\n\n        try {\n\n            let estimatedGas = await simpleCrowdsaleInstance.methods.buyTokens(userAddress).estimateGas({\n                from: userAddress,\n                value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n                gas: gas,\n            })\n            //let estimatedGas = 100000;\n\n            console.log(\"estimated gas \", estimatedGas)\n\n            console.log(\"eth amount to spend\", ethAmountToSpend);\n            const receipt = await simpleCrowdsaleInstance.methods.buyTokens(userAddress).send({\n                from: userAddress,\n                value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n                gas: estimatedGas,\n            });\n            console.log(\"receipt\", receipt);\n            var amountBoughtInWei = receipt.events.TokensPurchased.returnValues.amount;\n            var amountBoughtInTKNs = window.web3.utils.fromWei(amountBoughtInWei, \"ether\");\n\n            setShineBought(true);\n            setShineBoughtAmount(amountBoughtInTKNs);\n            setEthAmountToSpend(\"\");\n        } catch (e) {\n            setShineBought(false);\n            console.log(\"err \", e);\n            console.log(\"User rejected transaction\", e.code);\n\n\n            if (e.message.search(\"insufficient funds for transfer\") >= 0) {\n                setMetamaskErrorCode(\"The amount that you are trying to buy, exceeds the amount that you have available in your wallet\");\n            }\n            else if (e.message.search(\"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\") >= 0) {\n                setMetamaskErrorCode(\"Your total amount exceeds maximum participation\");\n            } else if (e.code === 4001) {\n                setMetamaskErrorCode(e.message); //MetaMask Tx Signature: User denied transaction signature.\n            }\n            else if (e.message.search(\"Reference to the Shine Token contract has not been set\") >= 0) {\n                setMetamaskErrorCode(\"Reference to the Shine Token contract has not been set\");\n            } else if (e.message.search(\"Relative cap exceeded\") >= 0) {\n                setMetamaskErrorCode(\"Relative cap exceeded\");\n            } else if (e.message.search(\"Currently you are below Tier 1 level, but you need to be at least Tier3 in order to participate in the seed sale\") >= 0) {\n                setMetamaskErrorCode(\"Currently you are below Tier 1 level, but you need to be at least Tier3 in order to have a priority access. For Tier 1 and Tier 2, sale opens at 3:30 pm UTC.\")\n            } else if (e.message.search(\"You are Tier 1, but you need to be Tier3 in order to participate in the seed sale\") >= 0) {\n                setMetamaskErrorCode(\"You are Tier 1, but you need to be Tier3 in order to participate in the seed sale or you can wait until 3:30 pm UTC its opened for Tier 1 and Tier 2\")\n            } else if (e.message.search(\"You are Tier 2, but You need to be Tier3 in order to participate in the seed sale\") >= 0) {\n                setMetamaskErrorCode(\"You are Tier 2, but You need to be Tier3 in order to participate in the seed sale or you can wait until 3:30 pm UTC its opened for Tier 1 and Tier 2\")\n            } else if (e.message.search(\"The amount that is being bought is too small to split it partially for vesting\") >= 0) {\n                setMetamaskErrorCode(\"The amount that is being bought is too small to split it partially for vesting\")\n            }\n            else if (e.message.search(\"weiAmount is 0\") >= 0) {\n                setMetamaskErrorCode(\"0 is not a valid amount, please enter another ETH amount in the input field\")\n            }\n            else {\n                setMetamaskErrorCode(\"Something went wrong, It could be that there are not enough project tokens left for sale anymore\"); //\"There are not enough project tokens left for sale anymore\"\n            }\n\n            let searchCapExceeded = e.message.search(\"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\")\n            console.log(\"search \", searchCapExceeded) //149\n            // console.log(\"metamask code\", metamaskErrorCode)\n        }\n        setTransactionBeingProcessed(false);\n    }\n\n}\n\nexport async function loadWeb3(setWalletStatus, setBalance) {\n    if (window.ethereum) {\n        console.log(\"load 1\", window.web3)\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n\n        await getEthBalance(setBalance);\n        setWalletStatus(true);\n        console.log(\"load 1\", window.web3)\n    } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        setWalletStatus(true);\n        console.log(\"load 2\")\n    } else {\n        setWalletStatus(false);\n        window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n        console.log(\"load 3\")\n    }\n}\n\nexport function handleChangeOfEthAmountToSpend(amount, setEthAmountToSpend) {\n    setEthAmountToSpend(amount);\n}\n\nexport function handleChangeOfShnReference(shnReference, setShnReference) {\n    setShnReference(shnReference);\n}\nexport function handleChangeOfNewRelativeCap(newRelativeCap,setNewRelativeCap){\n    setNewRelativeCap(newRelativeCap)\n\n}\nexport async function setNewRelativeCap(userAddress,newRelativeCap,gas,saleAbi,saleContractAddress){\n    let abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    try {\n        let estimatedGas = await simpleCrowdsaleInstance.methods.setRelativeCap(newRelativeCap).estimateGas({\n            from: userAddress,\n            gas: gas,\n        })\n\n        const receipt = await simpleCrowdsaleInstance.methods.setRelativeCap(newRelativeCap).send({\n            from: userAddress,\n            gas: estimatedGas,\n        });\n        console.log(\"receipt\", receipt);\n    }\n    catch (e) {\n        console.log(\"err \", e);\n        console.log(\"Transaction rejected\", e.code);\n    }\n}\n\nexport async function setShineTokenAddress(userAddress,shnReference, gas, saleAbi, saleContractAddress) {\n    let abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    try {\n        let estimatedGas = await simpleCrowdsaleInstance.methods.setShineTokenAddress(shnReference).estimateGas({\n            from: userAddress,\n            gas: gas,\n        })\n\n        const receipt = await simpleCrowdsaleInstance.methods.setShineTokenAddress(shnReference).send({\n            from: userAddress,\n            gas: estimatedGas,\n        });\n        console.log(\"receipt\", receipt);\n    }\n    catch (e) {\n        console.log(\"err \", e);\n        console.log(\"Transaction rejected\", e.code);\n    }\n\n}\nexport function toPlainString(num) {\n    console.log(\"plain straing\", num.toLocaleString(\"fullwide\", { useGrouping: false }))\n    return num.toLocaleString(\"fullwide\", { useGrouping: false });\n}\n\nexport function estimateReceivedShn(ethAmountToSpend, rate) {\n    console.log(\"eth to spend\", ethAmountToSpend);\n    const weiAmountToSpend = window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\");\n    console.log(\"wei\", toPlainString(weiAmountToSpend * rate));\n\n    console.log(\"www\", weiAmountToSpend * rate);\n\n    //const estimatedShnInWei = weiAmountToSpend * rate\n    const estimatedReceivedShn = window.web3.utils.fromWei(toPlainString(weiAmountToSpend * rate), \"ether\");\n    return Number.parseFloat(estimatedReceivedShn);\n}\n\n","import styled from 'styled-components';\n\nexport const Text = styled.div`\n  color: ${({ color }) => color || 'black'};\n  font-weight: ${({ fontWeight }) => fontWeight || 400};\n  font-size: ${({ fontSize }) => fontSize || '16px'};\n  margin: ${({ margin }) => margin || '0'};\n`;\n","import styled from 'styled-components';\n\n/* components */\nconst Image = styled.img`\n  display: block;\n  border-radius: 50%;\n  width: 100%;\n  height: auto;\n`;\n\nconst Wrapper = styled.div`\n  box-sizing: border-box;\n  border-radius: 50%;\n  border: 2px solid #ddd;\n  padding: 2px;\n  width: ${({ width }) => width || '60px'};\n  height: ${({ height }) => height || '60px'};\n  background-color: white;\n`;\n\nexport default {\n  Image,\n  Wrapper,\n};\n","import React from 'react';\nimport Style from './styles';\n\nexport const Avatar = ({ imageUrl, alt, width, height }) => (\n  <Style.Wrapper width={width} height={height}>\n    <Style.Image src={imageUrl} alt={alt} />\n  </Style.Wrapper>\n);\n"],"sourceRoot":""}