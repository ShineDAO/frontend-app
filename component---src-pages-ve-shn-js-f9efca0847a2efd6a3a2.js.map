{"version":3,"sources":["webpack:///./src/pages/veSHN.js"],"names":["location","theme","useContext","ThemeContext","WalletContext","isWalletEnabled","chainId","setWalletStatus","refetchData","setChainId","currentAccount","setCurrentAccount","setRefetchData","loadingIndicator","setLoadingIndicator","console","log","useState","rewardAddressesDropdown","setRewardAddressesDropdown","tokenSymbolsForDropdown","setTokenSymbolsForDropdown","position","bottom","width","height","title","description","mobileWidth","background","style","display","alignItems","flexDirection","paddingBottom","textAlign","marginTop","fontWeight","marginLeft","marginRight","target","href"],"mappings":"4FAAA,gIAUe,sBAAkB,EAAfA,SAAgB,IACxBC,EAAUC,qBAAWC,KAArBF,MACR,EAAyKC,qBAAWE,KAA5KC,EAAR,EAAQA,gBAAkCC,GAA1C,EAAyBC,gBAAzB,EAA0CD,SAAwDE,GAAlG,EAAmDC,WAAnD,EAA+DC,eAA/D,EAA+EC,kBAA/E,EAAkGH,aAAaI,EAA/G,EAA+GA,eAAgBC,EAA/H,EAA+HA,iBAAkBC,EAAjJ,EAAiJA,oBACjJC,QAAQC,IAAI,8BAA+BX,GAC3CU,QAAQC,IAAI,sBAAuBV,GACnC,MAA8DW,qBAAvDC,EAAP,KAAgCC,EAAhC,KACA,EAA8DF,qBAAvDG,EAAP,KAAgCC,EAAhC,KACA,OACE,kBAAC,IAAD,CAAQC,SAAS,WAAWC,OAAO,MAAMC,MAAM,OAAOC,OAAO,QAC3D,kBAAC,IAAD,CAAKC,MAAM,QAAQC,YAAY,kBAC/B,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAWC,YAAY,OAAOJ,MAAM,MAAMK,WAAW,GAAGC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,cAAe,SAAUC,cAAe,UAClI,QAAX5B,GAAgC,WAAXA,EACpB,6BACE,6BADF,KACa,6BACX,kBAAC,IAAD,CAAiBL,MAAOA,IACxB,kBAAC,IAAD,CAAiBI,gBAAiBA,EAAiBC,QAASA,EAASE,YAAaA,EAAaI,eAAgBA,EAAgBC,iBAAkBA,EAAkBC,oBAAqBA,IACxL,kBAAC,IAAD,CAAiBb,MAAOA,IACxB,kBAAC,IAAD,CAAkBoB,2BAA4BA,EAA4BF,2BAA4BA,EAA4Bd,gBAAiBA,EAAiBC,QAASA,EAASE,YAAaA,EAAaI,eAAgBA,EAAgBC,iBAAkBA,EAAkBC,oBAAqBA,IACzS,kBAAC,IAAD,CAAiBI,wBAAyBA,EAAyBE,wBAAyBA,EAAyBf,gBAAiBA,EAAiBC,QAASA,EAASE,YAAaA,EAAaI,eAAgBA,EAAgBC,iBAAkBA,EAAkBC,oBAAqBA,KAG9R,yBAAKgB,MAAO,CAAEK,UAAW,WACvB,6BACA,kBAAC,IAAD,CAAML,MAAO,CAACM,UAAW,IAAMC,WAAW,OAA1C,qBACA,6BACA,uBAAGP,MAAO,CAAEQ,WAAY,GAAIC,YAAa,KAAzC,qIACqI,IACnI,uBAAGC,OAAO,QAAQC,KAAK,0EAAvB,gBAFF","file":"component---src-pages-ve-shn-js-f9efca0847a2efd6a3a2.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text, MobileDiv } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport { VeShnContainer } from \"../components/common/subpages/veShnContainer\";\nimport { StakingContainer } from \"components/common/subpages/stakingContainer\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { ControllerPanel } from \"components/common/subpages/controllerPanel\";\n\nexport default ({ location }) => {\n  const { theme } = useContext(ThemeContext);\n  const { isWalletEnabled, setWalletStatus, chainId, setChainId, currentAccount, setCurrentAccount, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator } = useContext(WalletContext);\n  console.log(\"isWalletEnabled Container1 \", isWalletEnabled);\n  console.log(\"chainId Container 1\", chainId);\n  const [rewardAddressesDropdown, setRewardAddressesDropdown] = useState();\n  const [tokenSymbolsForDropdown, setTokenSymbolsForDropdown] = useState();\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\" height=\"60px\">\n      <SEO title=\"veSHN\" description=\"veSHN staking\" />\n      <Header />\n\n      <MobileDiv mobileWidth=\"100%\" width=\"90%\" background=\"\" style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\", paddingBottom: \"200px\" }}>\n        {chainId == \"0x89\" || chainId == \"0x13881\" || (process.env.NODE_ENV == \"development\" && chainId == \"0x539\") ? (\n          <div>\n            <br></br>  <br></br>\n            <HorizontalRuler theme={theme}></HorizontalRuler>\n            <VeShnContainer  isWalletEnabled={isWalletEnabled} chainId={chainId} refetchData={refetchData} setRefetchData={setRefetchData} loadingIndicator={loadingIndicator} setLoadingIndicator={setLoadingIndicator}></VeShnContainer>\n            <HorizontalRuler theme={theme}></HorizontalRuler>\n            <StakingContainer setTokenSymbolsForDropdown={setTokenSymbolsForDropdown} setRewardAddressesDropdown={setRewardAddressesDropdown} isWalletEnabled={isWalletEnabled} chainId={chainId} refetchData={refetchData} setRefetchData={setRefetchData} loadingIndicator={loadingIndicator} setLoadingIndicator={setLoadingIndicator}></StakingContainer>\n            <ControllerPanel rewardAddressesDropdown={rewardAddressesDropdown} tokenSymbolsForDropdown={tokenSymbolsForDropdown} isWalletEnabled={isWalletEnabled} chainId={chainId} refetchData={refetchData} setRefetchData={setRefetchData} loadingIndicator={loadingIndicator} setLoadingIndicator={setLoadingIndicator}></ControllerPanel>\n          </div>\n        ) : (\n          <div style={{ textAlign: \"center\" }}>\n            <br></br>\n            <Text style={{marginTop: 80 }} fontWeight=\"600\">Chain unsupported</Text>\n            <br></br>\n            <p style={{ marginLeft: 80, marginRight: 80,}}>\n              veSHN is only available on Polygon (Matic) Network. If you have SHN on the Ethereum Mainnet, please bridge them by following these{\" \"}\n              <a target=\"_self\" href=\"https://shinedao.medium.com/shine-bridge-to-matic-is-live-df10f2b1d620\">\n                instructions\n              </a>\n              .\n            </p>\n          </div>\n        )}\n      </MobileDiv>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}