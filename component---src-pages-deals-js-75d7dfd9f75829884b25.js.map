{"version":3,"sources":["webpack:///./src/pages/seed-sale.js","webpack:///./src/components/common/subpages/seed/SkeletonCard.js","webpack:///./src/components/common/Table/index.js","webpack:///./src/components/common/subpages/seed/Pagination.js","webpack:///./src/components/common/subpages/seed/SeedCard.js","webpack:///./src/components/common/subpages/seed/seedContainer.js","webpack:///./src/hooks/useQueryParam","webpack:///./src/pages/deals.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["SkeletonCard","className","TableD","styled","td","visibility","TableR","tr","TableLabel","div","selected","Pagination","props","currentPage","totalPages","handlePageChange","hideNextButton","salesLoading","title","onClick","style","margin","SeedCard","indexHistory","setStartIndex","setEndIndex","setSeedSalesData","setActiveContract","setChainQueryParam","setCardVisible","setDealsVisible","refetchData","isWalletEnabled1111","setRefetchData","getEligibilityStatus","loadingIndicator","setLoadingIndicator","seedSaleData","name","seedAddress","rate","offeredTokenSymbol","offeredTokenName","offeredTokenDecimals","offeredTokenTotalSupply","acceptedTokenSymbol","acceptedTokenDecimals","acceptedTokenBalance","weiRaised","startTime","dealVisibility","endTime","acceptedTokenAddress","accessMechanism","distributionMechanism","offeredTokenAddress","percentageVested","cliffDuration","vestingDuration","cliffPeriod","vestingPeriod","vestedBalance","capPerAddressEnabled","capPerAddress","accessNFT","accessToken","accessNTT","totalOffered","tier1","tier2","tier3","tier4","tier1Cap","tier2Cap","tier3Cap","tier4Cap","accessTokenSymbol","accessTokenDecimals","capForNTT","capForNFT","nftBalance","nttBalance","kycEnabled","hasValidNtt","accessTokenBalance","theme","useContext","ThemeContext","WalletContext","isWalletEnabled","chainId","setWalletStatus","currentAccount","setChainId","nativeBalance","setCurrentAccount","nativeTokenName","setNativeBalance","console","log","length","startIndex","endIndex","useState","dealOwner","setDealOwner","approveLoading","setApproveLoading","shineBalance","currentStatus","tokenContractAddress","setTokenContractAddress","projectBalance","setProjectBalance","seedSaleShnBalance","setSeedSaleShnBalance","metamaskErrorCode","setMetamaskErrorCode","relativeCap","contributions","isShineBought","setShineBought","isTokenWithdrawn","setIsTokenWithdrawn","shineBoughtAmount","setShineBoughtAmount","isTransactionBeingProcessed","setTransactionBeingProcessed","amountToSpend","setAmountToSpend","currentEthPrice","setCurrentEthPrice","saleContractAddress","setSaleContractAddress","setRateInUsd","vestedSoFar","setVestedSoFar","secondsSinceEpoch","setSecondsSinceEpoch","approvalStatus","setApprovalStatus","useEffect","a","getDealOwner","Seed","abi","utils","ERC20","getNativeTokenPrice","getRateInUsd","Math","round","Date","now","rewardPerSecond","getLocked","timer","setTimeout","clearTimeout","checkApprovalStatus","axios","get","getCoingeckoName","then","response","data","current_price","catch","error","project","image","frontendDetails","totalRaise","incubationStage","totalSupply","chain","roundAllocation","technicalDetails","seed","date","metamaskDetails","sybmol","network","caps","amount","saleAbi","approveContract","toNumber","recoverErc20Tokens","display","flexDirection","paddingTop","alignItems","cursor","justifyContent","background","border","fontSize","fontWeight","color","split","target","href","paddingBottom","fromWeiWithDecimals","fromFixed","ZERO_ADDRESS","Number","toLocaleString","undefined","maximumFractionDigits","calculatedTier","getCustomTier","flexWrap","paddingRight","getAccessStatus","toFixed","getDistributionInfo","toLowerCase","handleWithdrawUnsoldTokens","parseFloat","getNetworkName","width","ProgressBar","animated","striped","variant","label","htmlFor","autoComplete","type","id","value","onChange","e","minimumFractionDigits","replace","loading","size","handleApprove","handleSwapButton","marginTop","SeedContainer","seedsPerPage","setIndexHistory","activeContract","chainQueryParam","setCurrentPage","setTotalPages","wrongChainError","setWrongChainError","offeredTokenBalance","setOfferedTokenBalance","setAcceptedTokenBalance","tokenASymbol","setTokenASymbol","tokenBSymbol","setTokenBSymbol","tokenADecimals","setTokenADecimals","tokenBDecimals","setTokenBDecimals","setAccessTokenDecimals","deploymentFee","setDeploymentFee","defaultTokenAFee","setDefaultTokenAFee","defaultTokenBFee","setDefaultTokenBFee","createdTag","setCreatedTag","setSalesLoading","notEnoughTokensAError","setNotEnoughTokensAError","titleError","setTitleError","successMessage","setSuccessMessage","errorMessage","setErrorMessage","cardVisible","dealsVisible","formVisible","setFormVisible","setTitle","url","setUrl","setNativeTokenUsed","isListedCustomTokenUsed","setIsListedCustomTokenUsed","selectedTokenKey","setSelectedTokenKey","maxRaise","setMaxRaise","setVisibility","setAcceptedTokenAddress","requireKyc","setOfferedTokenAddress","tokenAmount","setTokenAMount","convertedRate","setConvertedRate","seedSalesData","seedIndex","setSeedIndex","allowance","setAllowance","vestingEnabled","setAccessMechanism","setDistributionMechanism","lockDuration","setLockDuration","whitelistedAddresses","setWhitelistedAddresses","capsForWhitelistedAddresses","setcapsForWhitelistedAddresses","whitelistError","setWhitelistError","nftCap","setNftCap","nttCap","setNttCap","nftAddress","setAccessNftAddress","nttAddress","setAccessNttAddress","accessTokenAddress","setAccessTokenAddress","accessTokenAmountTier1","setAccessTokenAmountTier1","accessTokenAmountTier2","setAccessTokenAmountTier2","accessTokenAmountTier3","setAccessTokenAmountTier3","accessTokenAmountTier4","setAccessTokenAmountTier4","setTier1Cap","setTier2Cap","setTier3Cap","setTier4Cap","setStartTime","parseInt","toString","setEndTime","setCliffDuration","setVestingDuration","setPercentageVested","acceptedTokenAddressArg","deployNewSeed","SeedFactory","getAddress","toWeiWithDecimals","createdContract","paddingLeft","marginBottom","handleOfferedTokenAddress","getAttribute","offeredTokenKey","getTokenAddressFromDealsConfig","getIndex","loadCurrentPageData","getDeploymentFeeFromAbi","getTokenAFee","getTokenBFee","getSeedSales","chainNameToIdMapper","loadSeedSales","getErc20Balance","getAllowance","getErc20Symbol","getErc20Decimals","loadData","loadDataForAcceptedTokenAddress","loadDataForAccessTokenAddress","getTokenRatio","calculateConvertedRate","borderRadius","boder","for","toLocaleLowerCase","data-token","borderRight","marginRight","textAlign","event","checked","float","marginLeft","min","max","count","getTransactionCount","includes","chainIdToNameMapper","checkTiersValidity","checkTierCapsValidity","isErrorInAccessMechanism","isErrorInDistributionMechanism","handleNewSeedDeploy","maxWidth","map","index","key","padding","clickable","height","handleSeedClick","timeConverter","Array","from","item","page","goingForward","handleParam","options","location","historyMethod","nullDeletes","params","URLSearchParams","search","delete","set","pathname","history","path","useQueryParam","param","setParam","newValue","override","obj","TypeError","position","bottom","description","mobileWidth","process","isChainSupported"],"mappings":"+FAAA,wDAIe,4BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,S,gvhCCeWA,G,UApBM,WACnB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BAEjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,gCAEjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,mC,YCdVC,EAASC,IAAOC,GAAV,gEAAGD,CAAH,8GAMH,qBAAGE,YAA+B,aAGrCC,EAASH,IAAOI,GAAV,gEAAGJ,CAAH,kBAINK,EAAaL,IAAOM,IAAV,oEAAGN,CAAH,uCAEP,qBAAGO,SAA2B,QAAU,W,yDC+CzCC,G,UA7DI,SAAAC,GACjB,IAAQC,EAA2ED,EAA3EC,YAAaC,EAA8DF,EAA9DE,WAAYC,EAAkDH,EAAlDG,iBAAkBC,EAAgCJ,EAAhCI,eAAgBC,EAAgBL,EAAhBK,aAkDnE,OACE,yBAAKhB,UAAU,yBACXgB,IArCgB,IAAhBJ,EACK,KAIP,4BAAQK,MAAM,gBAAgBC,QAAS,kBAAMJ,EAAiBF,EAAc,KAC1E,uBAAGZ,UAAU,kBAgCbgB,GAAgB,0BAAMG,MAAO,CAACC,OAAO,KAArB,QAAgCR,EAAhC,OAChBI,IAAiBD,IA3BjBH,IAAgBC,EACX,KAIP,4BAAQI,MAAM,YAAYC,QAAS,kBAAMJ,EAAiBF,EAAc,KACtE,uBAAGZ,UAAU,mBAsBd,K,qGCHA,SAASqB,EAAT,GAgEH,IA/DFC,EA+DC,EA/DDA,aACAC,EA8DC,EA9DDA,cACAC,EA6DC,EA7DDA,YACAC,EA4DC,EA5DDA,iBACAC,EA2DC,EA3DDA,kBACAC,EA0DC,EA1DDA,mBACAC,EAyDC,EAzDDA,eACAC,EAwDC,EAxDDA,gBAEAC,GAsDC,EAvDDC,oBAuDC,EAtDDD,aACAE,EAqDC,EArDDA,eAGAC,GAkDC,EApDDC,iBAoDC,EAnDDC,oBAmDC,EAlDDF,sBAkDC,IAjDDG,aACEC,EAgDD,EAhDCA,KACAC,EA+CD,EA/CCA,YACAC,EA8CD,EA9CCA,KAEAC,GA4CD,EA7CCC,iBA6CD,EA5CCD,oBACAE,EA2CD,EA3CCA,qBACAC,EA0CD,EA1CCA,wBACAC,EAyCD,EAzCCA,oBACAC,EAwCD,EAxCCA,sBACAC,EAuCD,EAvCCA,qBACAC,EAsCD,EAtCCA,UAEAC,GAoCD,EArCCC,eAqCD,EApCCD,WACAE,EAmCD,EAnCCA,QACAC,EAkCD,EAlCCA,qBACAC,EAiCD,EAjCCA,gBACAC,EAgCD,EAhCCA,sBACAC,EA+BD,EA/BCA,oBACAC,EA8BD,EA9BCA,iBACAC,EA6BD,EA7BCA,cACAC,EA4BD,EA5BCA,gBACAC,EA2BD,EA3BCA,YACAC,EA0BD,EA1BCA,cACAC,EAyBD,EAzBCA,cACAC,EAwBD,EAxBCA,qBACAC,EAuBD,EAvBCA,cACAC,EAsBD,EAtBCA,UAEAC,GAoBD,EArBCC,UAqBD,EApBCD,aACAE,GAmBD,EAnBCA,aACAC,GAkBD,EAlBCA,MACAC,GAiBD,EAjBCA,MACAC,GAgBD,EAhBCA,MACAC,GAeD,EAfCA,MACAC,GAcD,EAdCA,SACAC,GAaD,EAbCA,SACAC,GAYD,EAZCA,SACAC,GAWD,EAXCA,SACAC,GAUD,EAVCA,kBACAC,GASD,EATCA,oBACAC,GAQD,EARCA,UACAC,GAOD,EAPCA,UACAC,GAMD,EANCA,WACAC,GAKD,EALCA,WACAC,GAID,EAJCA,WACAC,GAGD,EAHCA,YACAC,GAED,EAFCA,mBAGMC,GAAUC,qBAAWC,KAArBF,MACR,GAAuJC,qBAAWE,KAA1JC,GAAR,GAAQA,gBAAkCC,IAA1C,GAAyBC,gBAAzB,GAA0CD,SAAqBE,IAA/D,GAAmDC,WAAnD,GAA+DD,gBAAmCE,IAAlG,GAA+EC,kBAA/E,GAAkGD,eAAiCE,IAAnI,GAAiHC,iBAAjH,GAAmID,iBAIjIE,QAAQC,IAAI,yBAA0BH,IAExCE,QAAQC,IAAI,gBAAiB5E,GACzBA,EAAa6E,OAAS,IACxB5E,EAAcD,EAAaA,EAAa6E,OAAS,GAAGC,YACpD5E,EAAYF,EAAaA,EAAa6E,OAAS,GAAGE,WAGpD,OAAkCC,qBAA3BC,GAAP,MAAkBC,GAAlB,MACA,GAA4CF,oBAAS,GAA9CG,GAAP,MAAuBC,GAAvB,MACA,GAAwCJ,mBAAS,OAA1CK,GAAP,MACA,IADA,MAC0CL,mBAAS,SAA5CM,GAAP,MACA,IADA,MACwDN,mBAAS,+CAA1DO,GAAP,MAA6BC,GAA7B,MAEA,GAAgDR,qBAChD,IADA,YAC4CA,sBAArCS,GAAP,MAAuBC,GAAvB,MAGA,GAAoDV,qBAA7CW,GAAP,MAA2BC,GAA3B,MACA,GAAkDZ,qBAA3Ca,GAAP,MAA0BC,GAA1B,MACA,GAAwCd,qBACxC,IADA,YACsCA,sBAA/Be,GAAP,MACA,IADA,MAC4Cf,sBAC5C,IADA,YAC0CA,sBAAnCgB,GAAP,MACA,IADA,MACgDhB,sBAEhD,IAFA,YAEwCA,oBAAS,IAA1CiB,GAAP,MAAsBC,GAAtB,MACA,GAAgDlB,oBAAS,GAAlDmB,GAAP,MAAyBC,GAAzB,MACA,GAAkDpB,oBAAS,GAApDqB,GAAP,MAA0BC,GAA1B,MACA,GAAoEtB,oBAAS,GAAtEuB,GAAP,MAAoCC,GAApC,MACA,GAA0CxB,mBAAS,GAA5CyB,GAAP,MAAsBC,GAAtB,MACA,GAAwC1B,mBAAS,IACjD,IADA,YAC8CA,sBAAvC2B,GAAP,MAAwBC,GAAxB,MACA,GAAkC5B,qBAClC,IADA,YACsDA,mBAAS,+CAAxD6B,GAAP,MAA4BC,GAA5B,MAEA,GAAkC9B,qBAAhB+B,IAAlB,aAEA,GAAsC/B,qBAA/BgC,GAAP,MAAoBC,GAApB,MACA,GAAkDjC,qBAA3CkC,GAAP,MAA0BC,GAA1B,MAEA,GAA4CnC,oBAAS,GAA9CoC,GAAP,MAAuBC,GAAvB,MACA1C,QAAQC,IAAI,eAAgBpE,GAE5B8G,qBAAU,WAGR,GAFA3C,QAAQC,IAAI,mBAAoBpE,GAET,GAAnB0D,SAA0C,IAARnD,EAAqB,6CACzD,sBAAAwG,EAAA,kEACErC,GADF,SACqBsC,YAAaC,EAAKC,IAAK1G,GAD5C,yCAEEwE,GAAwBxD,GACxB8E,GAAuB9F,GAEvB2G,IAAwBjC,GAAmBrB,GAAgBuD,EAAMF,IAAK1F,GACtE2F,IAA4B/B,GAAuBgC,EAAMF,IAAK1G,EAAagB,GAN7E,KAOE2C,QAPF,UAOmCkD,YAAoB,QAPvD,gCAOUjD,IAPV,UAOc,cAPd,WAQEmC,GARF,KAQee,IARf,KAQ4BH,IAAgB1G,GAR5C,UAQyD4G,YAAoB1D,IAR7E,4DASEgD,GAAqBY,KAAKC,MAAMC,KAAKC,MAAQ,MAEzCH,KAAKC,MAAMC,KAAKC,MAAQ,MAAS9F,EACnC6E,GAAe,GACNc,KAAKC,MAAMC,KAAKC,MAAQ,MAAS7F,EAC1C4E,GAAekB,iBAAmBJ,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ9F,IAElE6E,GAAe3E,GAhBnB,6CADyD,uBAAC,WAAD,wBAoBzD8F,MAED,CAAClE,GAAiBnD,EAAMP,IAE3B8G,qBAAU,WAER,GAAmB,GAAf9G,EAAqB,CACvB,IAAM6H,EAAQC,YAAW,WACvB5H,GAAe,KACd,KACH,OAAO,kBAAM6H,aAAaF,OAE3B,CAAC7H,IAEJ8G,qBAAU,WACRkB,YAAoBnE,GAAgBuD,EAAMF,IAAK7F,EAAsBb,EAAayF,GAAeY,MAChG,CAACZ,GAAe1F,IAEnBuG,qBAAU,WACRmB,IACGC,IADH,sEAC6EC,YAAiBxE,KAC3FyE,MAAK,SAASC,GAEbjC,GAAmBiC,EAASC,KAAK,GAAGC,kBAErCC,OAAM,SAASC,GAEdtE,QAAQC,IAAIqE,MAEbL,MAAK,iBAGP,CAACnC,GAAetC,KA0CnB,IAAM+E,GAAU,CACdvJ,MAAO,UACPwJ,MAAO,OACPC,gBAAiB,CAAEC,WAAY,OAAQC,gBAAiB,OAAQC,YAAa,OAAQC,MAAO,QAASvI,KAAM,QAASwI,gBAAiB,QACrIC,iBAAkB,CAChBC,KAAM,CACJ1I,KAAM,OACN2I,KAAM,gCACNC,gBAAiB,CAAEC,OAAQ,UAC3BC,QAAS,SACTC,KAAM,CAAEnH,MAAO,CAAEoH,OAAQ,KAAOnH,MAAO,CAAEmH,OAAQ,KAAOlH,MAAO,CAAEkH,OAAQ,KAAOjH,MAAO,CAAEiH,OAAQ,SAIjGC,GAAUzC,EAAKC,IAjKpB,8CA0UD,sBAAAH,EAAA,6DACEnC,IAAkB,GADpB,SAEQ+E,YAAgB9F,GAAgBuD,EAAMF,IAAK7F,EAAsBb,EAAa2G,KAAwBlB,GAAelF,GAAwB8F,IAFrJ,OAGEjC,IAAkB,GAHpB,4CA1UC,oEAwVD,sBAAAmC,EAAA,6DACE5C,QAAQC,IAAI,oBAAqBe,GAAoBA,GAAmByE,WAAYzC,IAAchC,IAAqB,GAAIgC,KAAwBA,IAAchC,IAAqB,GAAIvE,IAD5L,SAEQiJ,aAAmBhG,GAAgBoD,EAAKC,IAAK1G,EAAagB,EAAqB2F,KAAwBA,IAAchC,IAAqB,GAAIvE,IAFtJ,4CAxVC,sBA6VD,OACE,yBAAKvB,MAAO,CAAEyK,QAAS,OAAQC,cAAe,SAAUC,WAAY,GAAIC,WAAY,WAClF,yBAAK7K,QAAS,kBAdhBO,IACAC,EAAkB,MAClBC,EAAmB,MACnBC,GAAe,QACfC,GAAgB,IAU6BV,MAAO,CAAE6K,OAAQ,YAC1D,0CAEF,yBAAK7K,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KACnE,kBAAC,IAAD,CAAWI,WAAW,QAAQC,OAAO,mBACnC,6BAAMlK,EAAqBmB,EAAiBS,EAAsBC,EAAeiB,GAAYE,GAAYD,GAAYE,GAAaC,GAAoBhB,KAEtJ,kBAAC,IAAD,KACE,kBAAC,IAAD,MACG,EACD,kBAAC,IAAD,CAAkB/C,OAAO,eAAegL,SAAS,OAAOC,WAAY,IAAKC,MAAM,SAC5EjK,EAAKkK,MAAM,OAAO,MAKxBlK,EAAKkK,MAAM,OAAOpG,OAAS,GAC1B,uBAAGqG,OAAO,SAASrL,MAAO,CAAEmL,MAAO,WAAaG,KAAI,GAAKpK,EAAKkK,MAAM,OAAOlK,EAAKkK,MAAM,OAAOpG,OAAS,IACnG9D,EAAKkK,MAAM,OAAOlK,EAAKkK,MAAM,OAAOpG,OAAS,IAGlD,6BAEA,kBAAC,IAAD,CAAMmG,MAAM,QAAQnL,MAAO,CAAEC,OAAQ,WACnC,4BAAI,IAGN,kBAAC,IAAD,CAAmB8K,WAAW,SAC5B,yBAAK/K,MAAO,CAAEuL,cAAe,KAC3B,kBAAC,IAAD,CAAMJ,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,aAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CO,YAAoBzI,GAAcxB,GADrC,IAC6DF,EAD7D,YAC0FmK,YAAoBzI,GAAcxB,GAAwBkK,YAAUrK,GAD9J,IACsKY,GAAwB0J,IAAejK,EAAsBmD,KAIrO,yBAAK5E,MAAO,CAAEuL,cAAe,KAC3B,kBAAC,IAAD,CAAMJ,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,mBAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CnD,KAAoBjG,GADvB,OACuCiG,KAAoB/F,KAI7D,yBAAK/B,MAAO,CAAEuL,cAAe,KAC3B,kBAAC,IAAD,CAAMJ,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,QAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,WACWU,OAAOF,YAAUrK,IAAOwK,oBAAeC,EAAW,CAAEC,sBAAuBH,OAAOF,YAAUrK,IAAS,EAAI,EAAI,IADxH,IAC+HC,EAD/H,UAC0JW,GAAwB0J,IAAejK,EAAsBmD,KAGzN,yBAAK5E,MAAO,CAAEuL,cAAe,KAC3B,kBAAC,IAAD,CAAMJ,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,oBAnPZ,SAAyBhJ,EAAiBU,EAAelB,EAAqBkC,EAAWD,EAAWM,EAAoBhB,EAAOC,EAAOC,EAAOC,GAC3I,GAAuB,QAAnBlB,EACF,OACE,kBAAC,IAAD,CAAMkJ,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,kBAIG,GAAuB,aAAnBhJ,EACT,OACE,kBAAC,IAAD,CAAMkJ,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,cACcO,YAAoB7I,EAAepB,GADjD,IACyEE,EADzE,gBAIG,GAAuB,YAAnBQ,EACT,OACE,6BACE,kBAAC,IAAD,CAAMkJ,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,cACcO,YAAoB7H,EAAWpC,GAD7C,IACqEE,EADrE,gBAGA,kBAAC,IAAD,CAAM0J,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,QACQrI,IAIP,GAAuB,YAAnBX,EACT,OACE,kBAAC,IAAD,CAAMkJ,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,aACaO,YAAoB9H,EAAWnC,GAD5C,IACoEE,EADpE,gBAIG,GAAuB,oBAAnBQ,EAAuC,CAChD,IAAI8J,EAAiBC,YACnBR,YAAoBxH,EAAoBP,IACxC+H,YAAoBxI,EAAOS,IAC3B+H,YAAoBvI,EAAOQ,IAC3B+H,YAAoBtI,EAAOO,IAC3B+H,YAAoBrI,EAAOM,KAE7B,OACE,6BACE,kBAAC,IAAD,CAAM0H,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,0BAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,iBACiBpI,GAEjB,kBAAC,IAAD,CAAMsI,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,iBACiBO,YAAoBxH,EAAoBP,IADzD,IACgFD,GADhF,KACqGuI,EADrG,KAGA,yBAAK/L,MAAO,CAAEyK,QAAS,OAAQE,WAAY,GAAIY,cAAe,GAAIU,SAAU,OAAQnB,eAAgB,kBAClG,yBAAK9K,MAAO,CAAEuL,cAAe,GAAIW,aAAc,KAC7C,kBAAC,IAAD,CAAMf,MAAyB,UAAlBY,EAA6B,UAAY,MAAOb,WAAY,IAAKD,SAAS,QAAvF,UAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSO,YAAoBxI,EAAOS,IADpC,IAC2DD,IAE3D,kBAAC,IAAD,CAAM2H,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CO,YAAoBpI,GAAU1B,GADjC,IAC0DD,IAG5D,yBAAKzB,MAAO,CAAEuL,cAAe,GAAIW,aAAc,KAC7C,kBAAC,IAAD,CAAMf,MAAyB,UAAlBY,EAA6B,UAAY,MAAOb,WAAY,IAAKD,SAAS,QAAvF,UAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSO,YAAoBvI,EAAOQ,IADpC,IAC2DD,IAE3D,kBAAC,IAAD,CAAM2H,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CO,YAAoBnI,GAAU3B,GADjC,IAC0DD,IAG5D,yBAAKzB,MAAO,CAAEuL,cAAe,GAAIW,aAAc,KAC7C,kBAAC,IAAD,CAAMf,MAAyB,UAAlBY,EAA6B,UAAY,MAAOb,WAAY,IAAKD,SAAS,QAAvF,UAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSO,YAAoBtI,EAAOO,IADpC,IAC2DD,IAE3D,kBAAC,IAAD,CAAM2H,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CO,YAAoBlI,GAAU5B,GADjC,IAC0DD,IAG5D,yBAAKzB,MAAO,CAAEuL,cAAe,GAAIW,aAAc,KAC7C,kBAAC,IAAD,CAAMf,MAAyB,UAAlBY,EAA6B,UAAY,MAAOb,WAAY,IAAKD,SAAS,QAAvF,UAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSO,YAAoBrI,EAAOM,IADpC,IAC2DD,IAE3D,kBAAC,IAAD,CAAM2H,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CO,YAAoBjI,GAAU7B,GADjC,IAC0DD,KAGvD,KAIX,MAAO,SAuIE0K,CAAgBlK,EAAiBU,EAAelB,EAAqBkC,GAAWD,GAAWM,GAAoBhB,GAAOC,GAAOC,GAAOC,KAEvI,6BAjTV,SAA6BjB,EAAuBE,EAAkBC,EAAeC,GACnF,MAA6B,QAAzBJ,EAEA,6BACE,kBAAC,IAAD,CAAMiJ,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAC3C,IADH,0BAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7C,IAAM7I,EADT,+DACuFuJ,QAAQrJ,EAAkB,OAAO8J,QAAQ,IADhI,UAK8B,kBAAzBlK,EAEP,6BACE,kBAAC,IAAD,CAAMiJ,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAC3C,IADH,0BAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7C,IAAM7I,EADT,4EACoGE,EAAkB,OAAO8J,QAAQ,GADrI,iCACuK/J,EAAgB,OAAO+J,QAAQ,GADtM,UAOF,6BACE,kBAAC,IAAD,CAAMjB,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAC3C,IADH,0BAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,uCAiRQoB,CAAoBnK,EAAuBE,EAAkBC,EAAeC,IAEjF+B,KAAmB,EAMpB,6BACA,6BACCgD,IAAqBjC,IAAaiC,GAAoBtF,GAAWyC,GAAe8H,eAAiBlH,GAAUkH,eAAiB,kBAAC,IAAD,CAAQvM,QAAS,kBAtavJ,2CAsa6JwM,KAAvB,2BAC7H,kBAAC,IAAD,CAAMpB,MAAM,MAAMD,WAAY,KAC3BnJ,GAAWsF,GAAoBtF,GAAW,gBAE7C,6BACA,+BAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWmJ,WAAY,IAAKD,SAAS,OAAOE,MAAM,SAChD,+BAAK9J,IACJ,EAKD,kBAAC,IAAD,uBACiB,0BAAMrB,MAAO,CAAEmL,MAAO,YAAczF,GAApC,MAGjB,8CACgB,IACd,0BAAM1F,MAAO,CAAEmL,MAAO,YACnB,IACArD,IAA0BtG,EAAyBD,GAAsBqK,iBAF5E,IAE+FvK,IAGjG,6BAEA,8CACgB,IACd,0BAAMrB,MAAO,CAAEmL,MAAO,YACnB,IACAQ,OAAOa,WAAW5G,IAAgBgG,oBAAeC,EAAW,CAAEC,sBAAuB,IAFxF,IAE+FzK,IAGjG,6BACA,8BAIA,kBAAC,IAAD,CAAW6J,WAAY,IAAKD,SAAS,OAAOE,MAAM,SAChD,2BAAI1J,EAAJ,MACC,EAKAO,IAAyB8F,KACxB,kBAAC,IAAD,KACG,IADH,kBAEiB,0BAAM9H,MAAO,CAAEmL,MAAO,YAAcnJ,EAApC,OAKtBA,GAAwB8F,IACvB,oCACG,IACD,8CACgB,IACd,0BAAM9H,MAAO,CAAEmL,MAAO,YACnBQ,OAAOa,WAAWhB,YAAoB7J,EAAsBD,IAAwBkK,oBAAeC,EAAW,CAAEC,sBAAuB,IAD1I,IACiJrK,KAKrJ,8BACGgL,YAAenI,IADlB,YACqC,IACnC,0BAAMtE,MAAO,CAAEmL,MAAO,YACnBQ,OAAOa,WAAW9H,IAAekH,oBAAeC,EAAW,CAAEC,sBAAuB,IADvF,IAC8FlH,MAKjG,GAKA,GAQA,EAQD,6BACCP,IACC,kBAAC,IAAD,CAASJ,MAAOA,IACd,yBAAKjE,MAAO,CAAE0M,MAAO,SACnB,kBAAC,IAAD,CAAMvB,MAAM,UAAUD,WAAY,MAC/B,EACD,8BACC,EAMD,8BACC,EAOD,6BACCpG,QAAQC,IAAI,eAAgBoC,IAE7B,6BACCvF,GACC,6BACE,6BACA,iDAAyBA,EAAY6J,YAAUrK,GAAS2B,GAAgB,KAAKqJ,QAAQ,GAArF,MACA,kBAACO,EAAA,EAAD,CAAaC,UAAQ,EAACC,SAAO,EAACC,QAAQ,UAAUzE,IAAOzG,EAAY6J,YAAUrK,GAAS2B,GAAgB,IAAKgK,OAAanL,EAAY6J,YAAUrK,GAAS2B,GAAgB,KAAKqJ,QAAQ,GAApE,OAIlH,yDAC2BT,OAAOa,WAAW1G,IAAoB8F,oBAAeC,EAAW,CAAEC,sBAAuBH,OAAOa,WAAW1G,IAAsB,EAAI,EAAI,IADpK,IAC2KzE,IAI5K,GAKA,GA0BH,kBAAC,IAAD,CAAM8J,MAAM,UAAUD,WAAY,KAC/BlF,IAAqB,kBAAC,IAAD,KAAaA,GAAb,KAErB3B,KAAoBqC,IACnB,6BACE,6BACE,6BACC1E,GAAwB8F,IAAqB,2BAAOkF,QAAQ,cAAf,SAAmCpI,GAAnC,YAAsE,2BAAOoI,QAAQ,cAAf,SAAmCvL,EAAnC,YACpH,6BACA,kBAAC,IAAD,CAAUwL,aAAa,MAAMC,KAAK,SAASC,GAAG,aAAaC,MAAOxG,GAAeyG,SAAU,SAAAC,GAAC,OAAIxF,KAAqCwF,EAAEjC,OAAO+B,MAAOvG,OACpJ/B,QAAQC,IAAI,QAAS+B,GAAiBF,GAAe+E,OAAOa,WAAW1F,GAAkBF,IAAegF,kBACvF,GAAjBhF,IACC,8BACG5E,GAAwB8F,KACvB,8BACG,IACD,oCAAU6D,OAAOa,WAAW1F,GAAkBF,IAAegF,iBAA7D,QAFF,IAE4F,6BAAO,KAGrG,8BACGhF,GAAgB4E,YAAoBzI,GAAcxB,GAAwBkK,YAAUrK,IAAS,0BAAMpB,MAAO,CAAEmL,MAAO,QAAtB,0DAC9F,6BAFF,gCAGgCrD,IAA6BlB,GAAe6E,YAAUrK,IAAOwK,iBAH7F,IAGgHvK,EAHhH,IAGoI,uBAAGrB,MAAO,CAAEmL,MAAO,SAAnB,iBAEnI,GAGL,6BAtBF,IAsBS,6BAEPrG,QAAQC,IAAI,SAAUS,GAAcW,IACnCD,IAAeV,IAAgBoB,GAAgBkB,IAA6B5B,GAAaV,IAAgBW,IAAiD,YAAhC2B,KAActC,KACvI,kBAAC,IAAD,CAAM2F,MAAM,UAAZ,6GAC6GrD,KAActC,IAD3H,4CACmL,IACjL,0BACEzF,QAAS,SAAAuN,GAAC,OACRzG,GACE8E,OAAOa,WAAW1E,IAA6B5B,GAAaV,IAAgBW,GAAgB,MACzFyF,oBAAeC,EAAW,CACzB0B,sBAAuB,EACvBzB,sBAAuB,IAExB0B,QAAQ,IAAK,MAGpBxN,MAAO,CAAE6K,OAAQ,UAAWM,MAAO,YAElCQ,OAAOa,WAAW1E,IAA6B5B,GAAaV,IAAgBW,GAAgB,MAAQyF,oBAAeC,EAAW,CAC7H0B,sBAAuB,EACvBzB,sBAAuB,IACrB,KACE,IACPlH,IAGL,6BACA,6BACA,kBAAC,IAAD,KACG2C,KACGjC,GAKA,0BAAMtF,MAAO,CAAEkM,aAAc,KAC3B,kBAAC,IAAD,CAAaf,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAC7D,kBAAC,IAAD,uBANF,kBAAC,IAAD,CAAegE,MAAOA,GAAOlE,QAAS,kBAvoBjE,2CAuoBuE4N,KAA5C,YAUJ,kBAAC,IAAD,CACE1J,MAAOA,GACPlE,QAAS,kBA5XnC,SACEiC,EACA4E,EACAC,EACAR,EACAI,EACAE,EACAV,EACAzB,EACA6F,EACArD,EACAvB,EACA/D,EACAH,GAEIS,GAAwB8F,KAC1BhD,QAAQC,IAAI,MAAO+C,KAAwBlB,EAAe,KAC1D9B,QAAQC,IAAI,WAAY6B,EAAekB,KAAwBlB,EAAe,KAE9EkB,IACEA,KAAwBlB,EAAe,IACvCC,EACAR,EACAI,EACAE,EACAV,EACAzB,EACA6F,EACArD,EACAvB,EACA5E,EACAU,IAGFuG,KACEA,KAAwBlB,EAAelF,GACvCmF,EACAR,EACAI,EACAE,EACAV,EACAzB,EACA6F,EACArD,EACAvB,EACA5E,EACAU,GA+UsBqM,CACE5L,EACA4E,GACAC,GACAR,GACAI,GACAE,GACAV,GACAzB,GACA6F,GACArD,GACAvB,GACA/D,EACAH,KAhBN,QAsBA,kBAAC,IAAD,CAAMtB,OAAO,aAAakL,MAAM,WAC7B,KACA,KAKP,6BACA,+BAGH,EACA1I,GAAiBA,EAAgB,GAChC,6BACE,kBAAC,IAAD,KACGF,GAAeC,GACd,kBAAC,IAAD,CAAMvC,OAAO,aAAakL,MAAM,WAC7B,IADH,qBAEqBrD,KAAoBvF,IAI3C,kBAAC,IAAD,CAAMtC,OAAO,aAAakL,MAAM,WAC7B,IADH,gBAEgBrD,KAAoBtF,KAGtC,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAeyB,MAAOA,GAAOlE,QAAS,kBAAM+H,KAAqBuC,GAASrD,GAAqBxC,GAAgBmC,GAA8BV,GAAsBM,GAAqBF,MAAxL,yBAGuB,IAAfc,IACN,kBAAC,IAAD,CAAMlH,OAAO,aAAakL,MAAM,WAC7B,IADH,cAEcQ,OAAOa,WAAW1E,IAA0BX,GAAa5F,IAAuBqK,oBAAeC,EAAW,CAAEC,sBAAuB,IAFjJ,IAEwJzK,EAAoB,KAG9K,kBAAC,IAAD,CAAMpB,OAAO,aAAakL,MAAM,WAC7B,IADH,mBAEmBQ,OAAOa,WAAW1E,IAA0BrF,EAAelB,IAAuBqK,oBAAeC,EAAW,CAAEC,sBAAuB,IAFxJ,IAE+JzK,EAAoB,OAKxL+E,KAAkBM,IACjB,yBAAK1G,MAAO,CAAE6N,UAAW,KACvB,4DACgClC,OAAOa,WAAWhG,IAAmBoF,iBADrE,IACwFvK,EADxF,aACqH,EAAkC,MAK1JiF,KAAqBI,IACpB,6BACE,6EAAmDrF,EAAnD,aAIHqF,IACC,6BACG,IACD,2CACA,kBAAC,IAAD,CAAayE,MAAO,SAAUsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAHjE,IAGuE,6BAHvE,IAG8E,6BAC5E,4BACE,0FAQb6E,QAAQC,IAAI,mBAAoBT,GAAS+E,GAAQQ,iBAAiBpE,IAAeyE,SAEjFpF,QAAQC,IAAI,gBAAiBS,O,oBCjzBjC,SAASsI,EAAT,GAAiJ,IAAxHC,EAAuH,EAAvHA,aAAc5N,EAAyG,EAAzGA,aAAc6N,EAA2F,EAA3FA,gBAAiBC,EAA0E,EAA1EA,eAAgB1N,EAA0D,EAA1DA,kBAAmB2N,EAAuC,EAAvCA,gBAAiB1N,EAAsB,EAAtBA,mBAC/H,EAA4K0D,qBAAWE,KAA/KI,EAAR,EAAQA,eAAmCH,GAA3C,EAAwBM,kBAAxB,EAA2CN,iBAAiBC,EAA5D,EAA4DA,QAASM,EAArE,EAAqEA,gBAAiBF,EAAtF,EAAsFA,cAAe/D,EAArG,EAAqGA,YAAaE,EAAlH,EAAkHA,eAAgBE,EAAlI,EAAkIA,iBAAkBC,EAApJ,EAAoJA,oBACpJ,EAAsCmE,mBAAS,GAAxC1F,EAAP,KAAoB0O,EAApB,KACA,EAAoChJ,qBAAjBiJ,GAAnB,WAEA,EAA8CjJ,mBAAS,IAAhDkJ,EAAP,KAAwBC,EAAxB,KACA,EAAsDnJ,qBAA/CoJ,EAAP,KAA4BC,EAA5B,KACA,EAAwDrJ,qBAAjDxD,EAAP,KAA6B8M,EAA7B,KACA,EAAwCtJ,qBAAjCuJ,GAAP,KAAqBC,GAArB,KACA,GAAwCxJ,qBAAjCyJ,GAAP,MAAqBC,GAArB,MACA,GAA4C1J,qBAArC2J,GAAP,MAAuBC,GAAvB,MACA,GAA4C5J,qBAArC6J,GAAP,MAAuBC,GAAvB,MAEA,GAAsD9J,qBAA/C1B,GAAP,MAA4ByL,GAA5B,MAEA,GAA0C/J,qBAAnCgK,GAAP,MAAsBC,GAAtB,MACA,GAAgDjK,qBAAzCkK,GAAP,MAAyBC,GAAzB,MACA,GAAgDnK,qBAAzCoK,GAAP,MAAyBC,GAAzB,MAEA,GAAoCrK,qBAA7BsK,GAAP,MAAmBC,GAAnB,MAEA,GAAwCvK,oBAAS,GAA1CtF,GAAP,MAAqB8P,GAArB,MAGA,GAA0DxK,oBAAS,GAA5DyK,GAAP,MAA8BC,GAA9B,MACA,GAAoC1K,oBAAS,GAAtC2K,GAAP,MAAmBC,GAAnB,MAEA,GAA4C5K,mBAAS,CAAC,SAA/C6K,GAAP,MAAuBC,GAAvB,MACA,GAAwC9K,qBAAjC+K,GAAP,MAAqBC,GAArB,MAEA,GAAsChL,oBAAS,GAAxCiL,GAAP,MAAoB3P,GAApB,MACA,GAAwC0E,oBAAS,GAA1CkL,GAAP,MAAqB3P,GAArB,MACA,GAAsCyE,oBAAS,GAAxCmL,GAAP,MAAoBC,GAApB,MAEA,GAA0BpL,mBAAS,IAA5BrF,GAAP,MAAc0Q,GAAd,MACA,GAAsBrL,mBAAS,IAAxBsL,GAAP,MAAYC,GAAZ,MAEA,GAA8CvL,oBAAS,GAA/BwL,IAAxB,aACA,GAA8DxL,oBAAS,GAAhEyL,GAAP,MAAgCC,GAAhC,MACA,GAAgD1L,mBAAS,UAAlD2L,GAAP,MAAyBC,GAAzB,MACA,GAAsC5L,oBAAS,GAC/C,IADA,YACgCA,sBAAzB6L,GAAP,MAAiBC,GAAjB,MACA,GAAoC9L,mBAAS,UAAtClG,GAAP,MAAmBiS,GAAnB,MAEA,GAAwD/L,qBAAjDnD,GAAP,MAA6BmP,GAA7B,MACA,GAAoChM,oBAAS,GAAtCiM,GAAP,MAEA,IAFA,MAEsDjM,sBAA/ChD,GAAP,MAA4BkP,GAA5B,MACA,GAAsClM,qBAA/BmM,GAAP,MAAoBC,GAApB,MACA,GAAwBpM,qBAAjB/D,GAAP,MACA,IADA,MAC0C+D,sBAAnCqM,GAAP,MAAsBC,GAAtB,MACA,GAA0CtM,qBAAnCuM,GAAP,MAAsBpR,GAAtB,MACA,GAAkC6E,qBAA3BwM,GAAP,MAAkBC,GAAlB,MACA,GAAkCzM,qBAA3B0M,GAAP,MAAkBC,GAAlB,MACA,GAA4C3M,oBAAS,GAA9C4M,GAAP,MAEA,IAFA,MAE8C5M,mBAAS,SAAhDlD,GAAP,MAAwB+P,GAAxB,MACA,GAA0D7M,mBAAS,WAA5DjD,GAAP,MAA8B+P,GAA9B,MACA,GAAwC9M,mBAAS,GAA1C+M,GAAP,MAAqBC,GAArB,MAEA,GAAwDhN,mBAAS,IAA1DiN,GAAP,MAA6BC,GAA7B,MACA,GAAsElN,mBAAS,IAAxEmN,GAAP,MAAoCC,GAApC,MACA,GAA4CpN,oBAAS,GAA9CqN,GAAP,MAAuBC,GAAvB,MACA,GAA4BtN,mBAAS,GAA9BuN,GAAP,MAAeC,GAAf,MACA,GAA4BxN,mBAAS,GAA9ByN,GAAP,MAAeC,GAAf,MAEA,GAA0C1N,mBAAS,IAA5C2N,GAAP,MAAmBC,GAAnB,MACA,GAA0C5N,mBAAS,IAA5C6N,GAAP,MAAmBC,GAAnB,MAEA,GAAoD9N,mBAAS,IAAtD+N,GAAP,MAA2BC,GAA3B,MACA,GAA4DhO,mBAAS,GAA9DiO,GAAP,MAA+BC,GAA/B,MACA,GAA4DlO,mBAAS,GAA9DmO,GAAP,MAA+BC,GAA/B,MACA,GAA4DpO,mBAAS,GAA9DqO,GAAP,MAA+BC,GAA/B,MACA,GAA4DtO,mBAAS,GAA9DuO,GAAP,MAA+BC,GAA/B,MACA,GAAgCxO,mBAAS,GAAlC/B,GAAP,MAAiBwQ,GAAjB,MACA,GAAgCzO,mBAAS,GAAlC9B,GAAP,MAAiBwQ,GAAjB,MACA,GAAgC1O,mBAAS,GAAlC7B,GAAP,MAAiBwQ,GAAjB,MACA,GAAgC3O,mBAAS,GAAlC5B,GAAP,MAAiBwQ,GAAjB,MAEA,GAAkC5O,mBAAS,KAApCtD,GAAP,MAAkBmS,GAAlB,MACA,GAA8B7O,mBAAS8O,SAASA,SAAS7L,KAAKC,MAAQ,IAAO,OAAa6L,aAAnFnS,GAAP,MAAgBoS,GAAhB,MAEA,GAA0ChP,mBAAS,QAA5C9C,GAAP,MAAsB+R,GAAtB,MACA,GAA8CjP,mBAAS,QAAhD7C,GAAP,MAAwB+R,GAAxB,MACA,GAAgDlP,mBAAS,KAAlD/C,GAAP,MAAyBkS,GAAzB,MAEA,GAAoCnP,mBAAS,GAAtCF,GAAP,MAAmB7E,GAAnB,MACA,GAAgC+E,mBAAS4I,GAAlC7I,GAAP,MAAiB7E,GAAjB,MAvFqJ,8CAkUrJ,WAAmC8B,EAAqBoS,GAAxD,iBAAA7M,EAAA,6DAII1F,EAD6B,IAA3BuS,QAAmE,IAA3BA,EACnB7I,IAEA6I,EAGzBzP,QAAQC,IAAI,gBAAiB3D,GAAMoQ,GAAe/F,YAAU+F,IAAgBrP,EAAqBmP,GAAatP,GAC9GiO,GAAkB,CAAC,SACnBE,KAXF,SAY8BqE,YAC1BhQ,EACArC,EACAH,EACAyS,EAAY5M,IACZD,EAAKC,IACL6M,YAAWpQ,EAAS,sBACpBqQ,aAAkBrD,GAAaxC,IAC/B0C,GACAU,GACA7P,GACAC,GACAF,GACAP,GACAE,GACAmR,GACAyB,aAAkBvB,GAAwB3P,IAC1CkR,aAAkBrB,GAAwB7P,IAC1CkR,aAAkBnB,GAAwB/P,IAC1CkR,aAAkBjB,GAAwBjQ,IAC1CkR,aAAkBvR,GAAU4L,IAC5B2F,aAAkBtR,GAAU2L,IAC5B2F,aAAkBrR,GAAU0L,IAC5B2F,aAAkBpR,GAAUyL,IAC5BlP,GAAQ,MAAQ2Q,GAChBxO,GACAmQ,GACAE,GACAxD,GACAgE,GACA6B,aAAkBjC,GAAQ1D,IAC1BoC,GACAsD,YAAWpQ,EAAS,cACpBqQ,aAAkB/B,GAAQ5D,IAC1B9M,GACAjD,GACA,CAAC,QACD+B,EACA,CAAC,QACDiP,GACAE,IApDJ,OAYMyE,EAZN,OAsDElF,GAAckF,GAtDhB,4CAlUqJ,sBA0ZrJ,SAAS9T,GAAqBmB,EAAiBS,EAAsBC,EAAeiB,EAAYE,EAAYD,EAAYE,EAAaC,EAAoBhB,GAEvJ,OADA8B,QAAQC,IAAI,YAAa9C,GACF,QAAnBA,EAEA,yBAAKjC,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,eACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAGxM,aAAnB7S,EACLS,GAAwBC,EAAgB,EAExC,yBAAK3C,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,aACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAKlO,yBAAK9U,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,aACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAI1M,YAAnB7S,EACL2B,EAAa,EAEb,yBAAK5D,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,YACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAKlO,yBAAK9U,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,YACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAI1M,YAAnB7S,EACL4B,EAAa,GAAKE,EAElB,yBAAK/D,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,YACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAKlO,yBAAK9U,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,YACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAI1M,oBAAnB7S,EACL0J,OAAOH,YAAoBxH,EAAoBP,MAAyBkI,OAAOH,YAAoBxI,EAAOS,KAE1G,yBAAKzD,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,qBACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,MAKlO,yBAAK9U,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,eAC7C,yBAAK9K,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,qBACChR,EAAaC,EAAc,yBAAK/D,MAAO,CAAE+K,WAAY,QAAS8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAlF,OAAmG,yBAAK9U,MAAO,CAAE+K,WAAY,MAAO8J,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,IAAhF,OAAiG,WAZjO,EAgJT,SAASC,GAA0B9L,GACjCnE,QAAQC,IAAI,QAASkE,EAAKoC,OAAO2J,aAAa,eAC9C,IAAIC,EAAkBhM,EAAKoC,OAAO2J,aAAa,cAC/CjE,GAAoBkE,GACG,UAAnBA,GACFxG,EAAwB,GACxBI,GAAgB,IAChBsC,GAAwB,IACxBN,IAA2B,GAC3BF,IAAmB,IACS,UAAnBsE,GACTtE,IAAmB,GACnBlC,EAAwB,GACxBI,GAAgB,IAChBsC,GAAwB,IACxBN,IAA2B,KAE3BA,IAA2B,GAC3BpC,EAAwB,GACxBI,GAAgB,IAChBsC,GAAwB+D,aAA+B5Q,EAAS2Q,IAChEtE,IAAmB,IASvB,OA/eAlJ,qBAAU,WACJ2K,GAAqBhH,MAAM,KAAKpG,OAAS,GAAKsN,GAA4BlH,MAAM,KAAKpG,OAAS,EAChGyN,IAAkB,GAElBA,IAAkB,KAEnB,CAACL,GAAsBE,KAE1B7K,qBAAU,WACR,GAAuB,GAAnBpD,GAA6C,MAAlB4J,GAA4C,MAAlBzJ,QAA8C,IAAbmN,GAA0B,6CAClH,sBAAAjK,EAAA,2FADkH,uBAAC,WAAD,wBAIlHyN,MAED,CAAC9Q,EAAiBG,EAAgByJ,IACrCxG,qBAAU,WACJ3H,GAAMkF,OAAS,GACjB+K,GAAc,0CACW,GAAhBjQ,GAAMkF,QAGf+K,IAAc,KAEf,CAACjQ,KAEJ2H,qBAAU,WACR,GAAuB,GAAnBpD,GAA6C,MAAlBG,EAAwB,6CACrD,sBAAAkD,EAAA,2FADqD,uBAAC,WAAD,wBAMrD0N,MAED,CAAC3V,IAEJgI,qBAAU,WACR,GAAuB,GAAnBpD,GAA6C,MAAlBG,EAAwB,6CACrD,sBAAAkD,EAAA,6DACE5C,QAAQC,IAAI,iBAAkBkJ,EAAgB0D,UAAkB1D,SAAuB0D,GAAW1D,GADpG,KAGEmB,GAHF,SAGyBiG,YAAwBZ,EAAY5M,IAAK6M,YAAWpQ,EAAS,uBAHtF,8CAIEgL,GAJF,SAI4BgG,aAAab,EAAY5M,IAAK6M,YAAWpQ,EAAS,uBAJ9E,8CAKEkL,GALF,UAK4B+F,aAAad,EAAY5M,IAAK6M,YAAWpQ,EAAS,uBAL9E,sCAMO2J,EANP,wBAOInJ,QAAQC,IAAI,eAAgBkJ,EAAgB0D,UAAkB1D,SAAuB0D,IACrFhC,IAAgB,GARpB,KASIrP,GATJ,UAUYkV,YACJhR,EACAoD,EAAKC,IACL4M,EAAY5M,IACZ6M,YAAWpQ,EAAS,sBACpByD,EAAMF,IACNoG,EACAF,EACAK,EACAD,EACAlJ,GACAC,GACA9E,GACAC,GACAF,EACA6N,GAzBR,mCA4BI2B,IAAgB,GA5BpB,4BA6Ba1B,EA7Bb,oBA8BInJ,QAAQC,IAAI,eAAgBkJ,EAAgB0D,UAAkB1D,SAAuB0D,GAAWzD,EAAiB5J,EAASmR,YAAoBvH,GAAkBuH,YAAoBvH,IAAoB5J,GAIpMmR,YAAoBvH,IAAoB5J,EAlChD,iBAmCMqL,IAAgB,GAChBrB,EAAmB,+BAA+BJ,GApCxD,+BAsCMyB,IAAgB,GAtCtB,KAuCMrP,GAvCN,UAwCckV,YACJhR,EACAoD,EAAKC,IACL4M,EAAY5M,IACZ6M,YAAWpQ,EAAS,sBACpByD,EAAMF,IACNoG,EACAF,EACAK,EACAD,EACAlJ,GACAC,GACA9E,GACAC,GACAF,EACA6N,GAvDV,mCA0DM2B,IAAgB,GA1DtB,6CADqD,uBAAC,WAAD,wBA+DrD+F,MAED,CAACrR,EAAiBG,EAAgB7D,EAAagR,GAAW1D,IAE7DxG,qBAAU,WACJkE,OAAO4C,GAAuB5C,OAAO2F,UAA+C,IAAxBnP,IAA+D,KAAxBA,GACrG0N,GAAyB,0FAEzBA,IAAyB,KAE1B,CAACtB,EAAqBpM,GAAqBmP,KAE9C7J,qBAAU,WAAM,4CAEd,sBAAAC,EAAA,8DACqC,IAAxBvF,IAA+D,KAAxBA,GADpD,6BAEI2C,QAFJ,SAEoC6Q,YAAgBnR,EAAgBrC,IAFpE,+BAEY4C,IAFZ,UAEgB,aAFhB,MAGI6Q,YAAa9D,GAAc4C,YAAWpQ,EAAS,sBAAuBE,EAAgBuD,EAAMF,IAAK1F,IAHrG,KAIIqM,EAJJ,UAIiCmH,YAAgBnR,EAAgBrC,IAJjE,+CAKIwM,GALJ,UAK0BkH,YAAe1T,IALzC,+CAMI4M,GANJ,UAM4B+G,YAAiB3T,IAN7C,2DAQIqM,EAAuB,GACvBG,GAAgB,IATpB,6CAFc,sBACd7J,QAAQC,IAAI,aAAc8M,GAAW1P,IADvB,mCAcd4T,KACC,CAAC5T,KAEJsF,qBAAU,WAAM,4CACd,sBAAAC,EAAA,yDACE5C,QAAQC,IAAI,WAAYP,EAAgBxC,UAA6BA,QAAsD,IAAzBA,IAAiE,KAAzBA,SACtG,IAAzBA,IAAiE,KAAzBA,GAFrD,6BAGIyM,EAHJ,SAGkCkH,YAAgBnR,EAAgBxC,IAHlE,8CAII6M,GAJJ,UAI0BgH,YAAe7T,IAJzC,+CAKIiN,GALJ,UAK4B6G,YAAiB9T,IAL7C,gFADc,uBAAC,WAAD,wBASdgU,KACC,CAAChU,KAEJyF,qBAAU,WAAM,4CACd,sBAAAC,EAAA,8DACoC,IAAvBwL,IAA6D,KAAvBA,GADnD,4BAEIhE,GAFJ,SAEiC4G,YAAiB5C,IAFlD,8EADc,uBAAC,WAAD,wBAMd+C,KACC,CAAC/C,KAEJzL,qBAAU,WACRmB,IACGC,IADH,sEAC6EC,YAAiBxE,IAC3FyE,MAAK,SAASC,OAIdG,OAAM,SAASC,GAEdtE,QAAQC,IAAIqE,MAEbL,MAAK,iBAGP,CAAC3H,KAEJqG,qBAAU,WAAM,4CACd,sBAAAC,EAAA,0DACMrD,EADN,4BAEIoN,GAFJ,SAE2ByE,aAAc5E,GAAaN,IAFtD,8EADc,uBAAC,WAAD,wBAMdmF,KACC,CAAC7E,GAAaN,KAkUf,yBAAKhR,MAAO,CAAE0M,MAAO,QAClB5H,QAAQC,IAAI,4BAA6BgN,GAAgBA,IACzDjN,QAAQC,IAAI,kBAAmByM,IAC/B1M,QAAQC,IAAI,QAASiL,IACrBM,IACC,yBAAKtQ,MAAO,CAAEyK,QAAS,OAAQC,cAAe,SAAUC,WAAY,GAAIC,WAAY,WAClF,yBAAK7K,QAAS,kBAAMwQ,IAAe,IAAQvQ,MAAO,CAAE6K,OAAQ,UAAWU,cAAe,IACpF,0CAEF,yBAAKvL,MAAO,CAAEC,OAAQ,SAAUyM,MAAO,MAAOmB,UAAW,OAAQ7C,OAAQ,yBACvE,6BACE,yBAAKhL,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KAClE,IACD,2CAEF,yBAAK3K,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAO5J,KAAK,QAAQmM,SAAU,SAAAhC,GAAM,YAAmC,IAAxBA,EAAOA,OAAO+B,OAAyBoD,GAASnF,EAAOA,OAAO+B,QAAQA,MAAOtN,GAAOE,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqB3J,MAAO,SAAkB,KAEpN,6BACA,yBAAK1M,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KAClE,IACD,4CAEF,yBAAK3K,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAO5J,KAAK,MAAMmM,SAAU,SAAAhC,GAAM,YAAmC,IAAxBA,EAAOA,OAAO+B,OAAyBsD,GAAOrF,EAAOA,OAAO+B,QAAQA,MAAOqD,GAAKzQ,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqB3J,MAAO,SAAkB,KAE9M,6BACA,yBAAK1M,MAAO,CAAE+K,WAAY,UAAWmB,aAAc,KACjD,yBAAKlM,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KACnE,uCAGF,6BACE,+BACE,kBAACzL,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOwX,IAAI,+BAAX,+BAGF,kBAACxX,EAAD,KACE,2BAAOwX,IAAI,wBAAX,gCAGJ,kBAACpX,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BACEoC,KAAK,8BACLmM,SAAU,SAAAhC,GAAM,YAAmC,IAAxBA,EAAOA,OAAO+B,OAAyBiE,GAAuBhG,EAAOA,OAAO+B,MAAMmJ,sBAC7GnJ,MAAOjL,GACPnC,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqB3J,MAAO,OACrD,KAGZ,kBAAC5N,EAAD,KACE,2BACEoC,KAAK,wBACLmM,SAAU,SAAAhC,GAAM,YAAmC,IAAxBA,EAAOA,OAAO+B,OAAyBmE,GAAelG,EAAOA,OAAO+B,MAAMmJ,sBACrGnJ,MAAOkE,GACPtR,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBACzB,IACV,6BAPF,YAQY7J,WAAW+B,GAAqBnC,QAAQ,GARpD,IAQyDsC,KAG3D,6BACA,kBAACxP,EAAD,KACE,kBAACJ,EAAD,KACE,2BAAOwX,IAAI,0BAAX,wBAGF,kBAACxX,EAAD,KACE,2BAAOwX,IAAI,IAAX,iCAGJ,kBAACpX,EAAD,KAEI,kBAACJ,EAAD,CAAQG,WAAY2R,GAA0B,SAAW,UAAW5Q,MAAO,CAAE6U,YAAa,IACxF,2BAAO3T,KAAK,yBAAyBmM,SAAU,SAAAhC,GAAM,OAAI8F,GAAwB9F,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAOpL,GAAsBhC,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqB3J,MAAO,OAAgB,KAIzO,kBAAC5N,EAAD,CAAQkB,MAAO,CAAE6U,YAAa,IAC5B,2BAAO3T,KAAK,YAAYmM,SAAU,SAAAhC,GAAM,OAAI4F,GAAY5F,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO4D,GAAUhR,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBADtJ,IACsL,6BADtL,YAEgC,UAApBvF,GAAkCtE,WAAW9H,GAAe0H,QAAQ,GAApE,IAA0ExH,EAAuB4H,WAAW7K,GAAsByK,QAAQ,GAA1I,IAAgJwC,KAG9J,kBAAC1P,EAAD,KACE,kBAACJ,EAAD,KACE,yBAAKkB,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUmB,SAAU,SACjE,kBAAC7M,EAAD,CACEE,SAA8B,UAApBwR,GACV/Q,QAAS,SAAAuN,GAAC,OAAIyH,GAA0BzH,IACxCkJ,aAAW,SACXxW,MAAO,CAAEyW,YAAa,iBAAkB5L,OAAQ,UAAWgK,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,GAAI4B,YAAa,IAE1H9R,IAEF,GAUA,EAUD,kBAACxF,EAAD,CACEE,SAA8B,OAApBwR,GACV/Q,QAAS,SAAAuN,GAAC,OAAIyH,GAA0BzH,IACxCkJ,aAAW,MACXxW,MAAO,CAAEyW,YAAa,iBAAkB5L,OAAQ,UAAWgK,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,GAAI4B,YAAa,IAJ7H,OAQA,kBAACtX,EAAD,CACEE,SAA8B,QAApBwR,GACV/Q,QAAS,SAAAuN,GAAC,OAAIyH,GAA0BzH,IACxCkJ,aAAW,OACXxW,MAAO,CAAEyW,YAAa,iBAAkB5L,OAAQ,UAAWgK,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,GAAI4B,YAAa,IAJ7H,SAQa,QAAXpS,GAAgC,WAAXA,GAAmC,UAAXA,IAC7C,kBAAClF,EAAD,CACEE,SAA8B,OAApBwR,GACV/Q,QAAS,SAAAuN,GAAC,OAAIyH,GAA0BzH,IACxCkJ,aAAW,MACXxW,MAAO,CAAEyW,YAAa,iBAAkB5L,OAAQ,UAAWgK,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,GAAI4B,YAAa,IAJ7H,OASF,kBAACtX,EAAD,CACEE,SAA8B,UAApBwR,GACV/Q,QAAS,SAAAuN,GAAC,OAAIyH,GAA0BzH,IACxCkJ,aAAW,SACXxW,MAAO,CAAEyW,YAAa,iBAAkB5L,OAAQ,UAAWgK,YAAa,EAAG3I,aAAc,EAAG4I,aAAc,GAAI4B,YAAa,IAJ7H,sBAaR,8BAGF,yBAAK1W,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUJ,cAAe,SAAUE,WAAY,WAC5F,2BAAO0L,IAAI,QAAX,oBAEC,EAQD,4BAAK7K,YAAU+F,MAEjB,6BACC5B,IACC,yBAAK5P,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,kBAAC,IAAD,CAAMK,MAAM,UAAUyE,IACtB,8BAGHE,IACC,yBAAK9P,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,kBAAC,IAAD,CAAMK,MAAM,UAAU2E,IACtB,+BAKN,6BACE,yBAAK9P,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KACnE,yCAGF,6BACE,+BACE,kBAACzL,EAAD,KACE,kBAACJ,EAAD,KACE,2BAAOwX,IAAI,cAAX,2BADF,KAGA,kBAACxX,EAAD,KACE,2BAAOwX,IAAI,YAAX,4BAGJ,kBAACpX,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOoC,KAAK,aAAamM,SAAU,SAAAhC,GAAM,OAAI2I,GAAa3I,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAoB,GAAbvL,GAAiB,MAAQA,GAAW7B,MAAO,CAAEoW,aAAc,EAAGC,MAAO,wBAElL,kBAACvX,EAAD,KACG,IACD,2BAAOoC,KAAK,WAAWmM,SAAU,SAAAhC,GAAM,OAAI8I,GAAW9I,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAOrL,GAAS/B,MAAO,CAAEoW,aAAc,EAAGC,MAAO,0BAIvJ,yBAAKrW,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAU6L,UAAW,WAApE,+IAC8I,6BAC5I,gCAIN,yBAAK3W,MAAO,CAAE+K,WAAY,YACxB,yBAAK/K,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KACnE,uCAEF,+BACE,kBAACzL,EAAD,KACE,yBAAKc,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,4BACE,2BAAOoC,KAAK,QAAQG,SAAU,SAAAuJ,GAAK,OAAI5E,GAAmB4E,EAAMvL,OAAO+B,QAAQyJ,QAA6B,SAApB5U,GAA4BmL,MAAM,OAAOlM,KAAK,WADxI,SAGA,4BACE,2BAAOgM,KAAK,QAAQG,SAAU,SAAAuJ,GAAK,OAAI5E,GAAmB4E,EAAMvL,OAAO+B,QAAQyJ,QAA6B,cAApB5U,GAAiCmL,MAAM,YAAYlM,KAAK,WADlJ,cAGA,4BACE,2BAAOgM,KAAK,QAAQG,SAAU,SAAAuJ,GAAK,OAAI5E,GAAmB4E,EAAMvL,OAAO+B,QAAQyJ,QAA6B,aAApB5U,GAAgCmL,MAAM,WAAWlM,KAAK,WADhJ,YACqK,KAGrK,4BACE,2BAAOgM,KAAK,QAAQG,SAAU,SAAAuJ,GAAK,OAAI5E,GAAmB4E,EAAMvL,OAAO+B,QAAQyJ,QAA6B,qBAApB5U,GAAwCmL,MAAM,mBAAmBlM,KAAK,WADhK,cACuL,MAGtL,IAOe,aAAnBe,IACC,6BACE,+BACE,6BACA,kBAAC/C,EAAD,KACG,IACD,kBAACJ,EAAD,iDAEF,kBAACI,EAAD,KACG,IACD,kBAACJ,EAAD,KACE,2BAAOoC,KAAK,sBAAsBmM,SAAU,SAAAhC,GAAM,OAAIgH,GAAwBhH,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAOgF,GAAsBpS,MAAO,CAAEoW,aAAc,EAAGC,MAAO,yBAG1L,6BACA,kBAACnX,EAAD,KACE,kBAACJ,EAAD,iDAEF,kBAACI,EAAD,KACG,IACD,kBAACJ,EAAD,KACE,2BACEoC,KAAK,4BACLmM,SAAU,SAAAhC,GAAM,OAAIkH,GAA+BlH,EAAOA,OAAO+B,MAAMmJ,sBACvEnJ,MAAOkF,GACPtS,MAAO,CAAEoW,aAAc,EAAGC,MAAO,0BAKxC7D,IACC,yBAAKxS,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,kBAAC,IAAD,CAAMK,MAAM,UAAZ,oFAKY,YAAnBlJ,IACC,6BACE,+BACE,6BACA,kBAAC/C,EAAD,KACG,IACD,kBAACJ,EAAD,KACE,2BAAOwX,IAAI,eAAX,kBAGJ,kBAACpX,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOoC,KAAK,cAAcmM,SAAU,SAAAhC,GAAM,OAAI0H,GAAoB1H,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO0F,GAAY9S,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAFlK,MAKF,6BACA,kBAACnX,EAAD,KACE,kBAACJ,EAAD,+BAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOoC,KAAK,UAAUmM,SAAU,SAAAhC,GAAM,OAAIsH,GAAUtH,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAOsF,GAAQ1S,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAFhJ,QAQY,YAAnBpU,IACC,6BACE,+BACE,6BACA,kBAAC/C,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOwX,IAAI,eAAX,wBAGJ,kBAACpX,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOoC,KAAK,cAAcmM,SAAU,SAAAhC,GAAM,OAAI4H,GAAoB5H,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO4F,GAAYhT,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAFlK,MAKF,6BACA,kBAACnX,EAAD,KACE,kBAACJ,EAAD,iBAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOoC,KAAK,UAAUmM,SAAU,SAAAhC,GAAM,OAAIwH,GAAUxH,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAOwF,GAAQ5S,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAFhJ,QASY,oBAAnBpU,IACC,yBAAKjC,MAAO,CAAEuL,cAAe,KAC3B,yBAAKvL,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAOwL,IAAI,wBAAX,0BACA,2BACEpV,KAAK,uBACLmM,SAAU,SAAAhC,GAAM,OAAI8H,GAAsB9H,EAAOA,OAAO+B,MAAMmJ,sBAC9DnJ,MAAO8F,GACPlT,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqB3J,MAAO,MAAOoK,MAAO,WACnE,IACV,8BAEF,yBAAK9W,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAOwL,IAAI,uBAAX,kBACA,2BACEpV,KAAK,sBACLmM,SAAU,SAAAhC,GAAM,OAAIgI,GAA0BhI,EAAOA,OAAO+B,MAAMmJ,sBAClEnJ,MAAOgG,GACPpT,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAE/E,2BAAO4J,IAAI,2BAAX,iDACA,2BAAOpV,KAAK,0BAA0BmM,SAAU,SAAAhC,GAAM,OAAIuI,GAAYvI,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAOhK,GAAUpD,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAC9M,8BAEF,yBAAK1M,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAOwL,IAAI,uBAAX,kBACA,2BACEpV,KAAK,sBACLmM,SAAU,SAAAhC,GAAM,OAAIkI,GAA0BlI,EAAOA,OAAO+B,MAAMmJ,sBAClEnJ,MAAOkG,GACPtT,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAE/E,2BAAO4J,IAAI,2BAAX,iDACA,2BAAOpV,KAAK,0BAA0BmM,SAAU,SAAAhC,GAAM,OAAIwI,GAAYxI,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO/J,GAAUrD,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAE9M,8BAEF,yBAAK1M,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAOwL,IAAI,uBAAX,kBACA,2BACEpV,KAAK,sBACLmM,SAAU,SAAAhC,GAAM,OAAIoI,GAA0BpI,EAAOA,OAAO+B,MAAMmJ,sBAClEnJ,MAAOoG,GACPxT,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAE/E,2BAAO4J,IAAI,2BAAX,iDACA,2BAAOpV,KAAK,0BAA0BmM,SAAU,SAAAhC,GAAM,OAAIyI,GAAYzI,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO9J,GAAUtD,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAE9M,8BAEF,yBAAK1M,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC7C,2BAAOwL,IAAI,uBAAX,iBACA,2BACEpV,KAAK,sBACLmM,SAAU,SAAAhC,GAAM,OAAIsI,GAA0BtI,EAAOA,OAAO+B,MAAMmJ,sBAClEnJ,MAAOsG,GACP1T,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,WAE/E,2BAAO4J,IAAI,2BAAX,iDACA,2BAAOpV,KAAK,0BAA0BmM,SAAU,SAAAhC,GAAM,OAAI0I,GAAY1I,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO7J,GAAUvD,MAAO,CAAEoW,aAAc,EAAGC,MAAO,oBAAqBU,WAAY,GAAIrK,MAAO,eAMxN,6BACE,yBAAK1M,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KACnE,6CAEF,+BACE,kBAACzL,EAAD,KACE,yBAAKc,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,gBAAkBuC,SAAU,SAAAuJ,GAAK,OAAI3E,GAAyB2E,EAAMvL,OAAO+B,SACxH,kBAACtO,EAAD,KACE,2BAAOoO,KAAK,QAAQ2J,QAAmC,YAA1B3U,GAAqCkL,MAAM,UAAUlM,KAAK,iBADzF,YAGA,kBAACpC,EAAD,KACE,2BAAOoO,KAAK,QAAQ2J,QAAmC,SAA1B3U,GAAkCkL,MAAM,OAAOlM,KAAK,iBADnF,SAGA,kBAACpC,EAAD,KACE,2BAAOoO,KAAK,QAAQ2J,QAAmC,mBAA1B3U,GAA4CkL,MAAM,iBAAiBlM,KAAK,iBADvG,sBAMoB,WAAzBgB,IACC,yBAAKlC,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAA/C,oCACmC,6BACjC,8BAGsB,QAAzB5I,IACC,6BACE,+BACE,kBAAChD,EAAD,KACE,kBAACJ,EAAD,iBACA,kBAACA,EAAD,oCAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,kBAAC,IAAD,CAAQoO,KAAK,QAAQ8J,IAAI,IAAIC,IAAI,MAAM7J,MAAOhL,GAAkBiL,SAAU,SAAAuJ,GAAK,OAAItC,GAAoBsC,EAAMvL,OAAO+B,WAEtH,kBAACtO,EAAD,KACG,IACD,2BAAOoC,KAAK,gBAAgBmM,SAAU,SAAAhC,GAAM,OAAI8G,GAAgB9G,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO8E,GAAclS,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAFlK,OAMJ,yBAAKrW,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC5C1I,GADH,8CACgE8P,GADhE,aAC6F9P,GAAmB,KAAO,qCAAW,IAAMA,GAAjB,2CAEvH,6BACA,8BAGsB,kBAAzBF,IACC,6BACE,+BACE,kBAAChD,EAAD,KACE,kBAACJ,EAAD,iBACA,kBAACA,EAAD,oCACA,kBAACA,EAAD,oCAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,kBAAC,IAAD,CAAQ4N,MAAM,QAAQQ,KAAK,QAAQ8J,IAAI,IAAIC,IAAI,MAAM7J,MAAOhL,GAAkBiL,SAAU,SAAAuJ,GAAK,OAAItC,GAAoBsC,EAAMvL,OAAO+B,WAEpI,kBAACtO,EAAD,KACG,IACD,2BAAOoC,KAAK,kBAAkBmM,SAAU,SAAAhC,GAAM,OAAI+I,GAAiB/I,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO/K,GAAerC,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAAgC,KAEtM,kBAACvX,EAAD,KACG,IACD,2BAAOoC,KAAK,mBAAmBmM,SAAU,SAAAhC,GAAM,OAAIgJ,GAAmBhJ,EAAOA,OAAO+B,MAAMmJ,sBAAsBnJ,MAAO9K,GAAiBtC,MAAO,CAAEoW,aAAc,EAAGC,MAAO,uBAAgC,OAI/M,yBAAKrW,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUJ,cAAe,WACrEtI,GAAmB,KAAO,0BAAMpC,MAAO,CAAE2W,UAAW,WAAa,IAAMvU,GAA7C,+CAC3B,0BAAMpC,MAAO,CAAE2W,UAAW,WACvBvU,GADH,iEACmFC,GADnF,yDACwJC,GADxJ,YACkL,MAGpL,6BACA,+BAIN,yBAAKtC,MAAO,CAAE+K,WAAY,YACxB,yBAAK/K,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUH,WAAY,KACnE,wCAEF,yBAAK3K,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,UAAYuC,SAAU,SAAAuJ,GAAK,OAAI1F,GAAc0F,EAAMvL,OAAO+B,SACvG,4BACE,2BAAOF,KAAK,QAAQ2J,QAAwB,WAAf5X,GAAyBmO,MAAM,SAASlM,KAAK,eAD5E,WAGA,4BACE,2BAAOgM,KAAK,QAAQ2J,QAAwB,YAAf5X,GAA0BmO,MAAM,UAAUlM,KAAK,eAD9E,aAIF,yBAAKlB,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAA2B,UAAd7L,GAAyB,uFAAyF,6DAGhL,yBAAKe,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAUJ,cAAe,SAAUE,WAAY,SAAUW,cAAe,GAAIZ,WAAY,IACrI,yBAAK3K,MAAO,CAAE8U,aAAc,SAA5B,sBAvvBd,SAA6B7S,EAAiBC,EAAuBjD,EAAYmS,GAC/E,IAAI8F,EAAQ,EAaZ,MAZuB,QAAnBjV,GACFiV,IAE2B,WAAzBhV,GACFgV,IAEgB,UAAdjY,GACFiY,IAEE9F,GACF8F,IAEKA,EAyuB+DC,CAAoBlV,GAAiBC,GAAuBjD,GAAYmS,IAAc,EAAhJ,6BACA,6BACG,IACD,2EAFF,IAE0DtM,QAAQC,IAAI,wBAAyBhE,EAAkBA,EAAiBqW,SAAS,aACxIrW,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BACsB,QAAnBlJ,IAA6B,8EAC7BlB,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BACGiG,IAAc,wEACdrQ,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BAC4B,WAAzBjJ,IAAsC,oFACtCnB,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BACiB,WAAdlM,IAA2B,6EAC3B8B,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BACE,+EACCpK,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BACE,kFACCpK,EAAiBqW,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAajM,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAE7D,kBAAC,IAAD,uBAGH+P,GAAeoH,SAAS,kBAAoB,kBAAC,IAAD,CAAajM,MAAM,SAAnB,YAE/C,6BACA,6BAAM+E,IAAgB,kBAAC,IAAD,CAAM/E,MAAM,UAAU+E,GAAagE,aACzD,6BACA,yBAAKlU,MAAO,CAAE2W,UAAW,WACtBlH,IACC,kBAAC,IAAD,CAAMtE,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,2EAC2E,IACzE,uBAAGK,KAAI,0CAA4CmE,GAA5C,UAAgE4H,YAAoB/S,IAA3F,0CAAkJmL,GAAlJ,UAAsK4H,YAAoB/S,WASzM,EAOD,6BACA,6BACA,yBAAKtE,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,WAC5ChG,QAAQC,IAAI,eAAgBuL,SACN,IAAfgB,SACY,IAAbN,IACM,KAAbA,SAC+B,IAAxB7O,IACiB,KAAxBA,IACyB,KAAzBH,IACyB,GAAzB4N,IACc,GAAdE,IACe,IAAfwB,IA3vBN,SAAkCrP,EAAiBmQ,EAAsBE,EAA6BQ,EAAYJ,EAAQM,EAAYJ,EAAQM,EAAoBlQ,EAAOC,EAAOC,EAAOC,EAAOC,EAAUC,EAAUC,EAAUC,GAC1N,SAAS+T,EAAmBtU,EAAOC,EAAOC,EAAOC,GAC/C,OAAIwI,OAAO3I,GAAS2I,OAAO1I,IAAU0I,OAAO1I,GAAS0I,OAAOzI,IAAUyI,OAAOzI,GAASyI,OAAOxI,GAM/F,SAASoU,EAAsBnU,EAAUC,EAAUC,EAAUC,GAC3D,OAAIoI,OAAOvI,GAAYuI,OAAOtI,IAAasI,OAAOtI,GAAYsI,OAAOrI,IAAaqI,OAAOrI,GAAYqI,OAAOpI,GAM9G,GAAuB,QAAnBtB,EACF,OAAO,EACF,GAAuB,aAAnBA,EAAgC,CACzC,GAA4B,IAAxBmQ,GAA6D,IAA/BE,GAAqCF,EAAqBhH,MAAM,KAAKpG,OAAS,GAAKsN,EAA4BlH,MAAM,KAAKpG,OAAS,EACnK,OAAO,EACF,GAA4B,IAAxBoN,GAA6D,IAA/BE,GAAqCF,EAAqBhH,MAAM,KAAKpG,OAAS,GAAKsN,EAA4BlH,MAAM,KAAKpG,OAAS,EAC1K,OAAO,OAEJ,GAAuB,YAAnB/C,EAA+B,CACxC,GAAkB,IAAd6Q,GAA8B,IAAVJ,GAA0B,GAAVA,EACtC,OAAO,EACF,GAAkB,IAAdI,GAA8B,IAAVJ,GAA0B,GAAVA,EAC7C,OAAO,OAEJ,GAAuB,YAAnBzQ,EAA+B,CACxC,GAAkB,IAAd+Q,GAA8B,IAAVJ,GAA0B,GAAVA,EACtC,OAAO,EACF,GAAkB,IAAdI,GAA8B,IAAVJ,GAA0B,GAAVA,EAC7C,OAAO,OAEJ,GAAuB,oBAAnB3Q,EAAuC,CAChD,GACwB,IAAtBiR,GACS,IAATlQ,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACA+T,EAAmBtU,EAAOC,EAAOC,EAAOC,IACxCoU,EAAsBnU,EAAUC,EAAUC,EAAUC,GAEpD,OAAO,EACF,GACiB,IAAtB2P,GACS,IAATlQ,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,IACC+T,EAAmBtU,EAAOC,EAAOC,EAAOC,KACxCoU,EAAsBnU,EAAUC,EAAUC,EAAUC,GAErD,OAAO,GA6qBNiU,CACCvV,GACAmQ,GACAE,GACAQ,GACAJ,GACAM,GACAJ,GACAM,GACAE,GACAE,GACAE,GACAE,GACAtQ,GACAC,GACAC,GACAC,KA7xBR,SAAwCrB,EAAuBgQ,EAAc7P,EAAeC,GAC1F,MAA6B,WAAzBJ,IAEgC,QAAzBA,EACW,GAAhBgQ,GAAqC,IAAhBA,EAKS,kBAAzBhQ,EACY,GAAjBG,GAAuC,IAAjBA,GAA0C,GAAnBC,GAAyC,GAAjBD,OADpE,GAsxBFoV,CAA+BvV,GAAuBgQ,GAAc7P,GAAeC,MACpFgO,GAGEA,IAAe,kBAAC,IAAD,CAAMnF,MAAM,UAAZ,8CAFf,kBAAC,IAAD,CAAQpL,QAAS,kBAvwC4H,8CAuwCtH2X,CAAoBvV,GAAqBH,MAAhE,gBAKAnC,KAAiBoO,GAAkB5J,IAAoBiM,KAAgBF,IAAe,kBAAC,IAAD,CAAQrQ,QAAS,kBAAMwQ,IAAe,KAAtC,YACxF,8BACElM,GAAmB,wBAAIrE,MAAO,CAAE2K,WAAY,KAAzB,wDAEtB2F,IACC,kBAAC,IAAD,CAAMtQ,MAAO,CAAEyK,QAAS,OAAQK,eAAgB,SAAU6L,UAAW,UAAYxL,MAAM,SACrF,6BADF,mBAC2B,6BAD3B,mBAEmBgE,GAFnB,IAEmCvK,EACjC,6BAEE,yDACqByK,GAAmB,IADxC,IAC6C,6BAAU,KAGhD,yDAAqBE,GAAmB,IAAxC,OAGZ,EACD,yBAAKvP,MAAO,CAAEC,OAAQ,SAAU0X,SAAU,MAAOlN,QAAS,OAAQC,cAAe,SAAUI,eAAgB,gBAAiB+C,UAAW,GAAInB,MAAO,UAChJ,yBAAK1M,MAAO,CAAEyK,QAAS,OAAQwB,SAAU,OAAQnB,eAAgB,WAC9DhG,QAAQC,IAAI,mBAAoB2M,QAAuC,IAAjBA,IACtD5M,QAAQC,IAAI,uBAAwBkJ,EAAgBoC,IAAeC,IAAcF,GAAasB,IAC9F7R,IACC,yBAAKG,MAAO,CAAE2W,UAAW,WACtB,IACD,kBAAC,IAAD,CAAaxL,MAAO,OAAQsC,SAAS,EAAMC,KAAM,GAAIzN,OAAQ,IAC7D,kBAAC,IAAD,+BAGgB,IAAnBoO,GAAyB,kBAAC,IAAD,CAAMlD,MAAM,UAAUkD,IAC9CJ,GACAoC,KACCC,KACAF,IACDsB,IACAA,GAAckG,KACZ,WAkDEC,GACI,IAjDF3W,EAiDC,EAjDDA,KACAC,EAgDC,EAhDDA,YACAC,EA+CC,EA/CDA,KAEAG,GA6CC,EA9CDD,iBA8CC,EA7CDC,sBAEAF,GA2CC,EA5CDG,wBA4CC,EA3CDH,oBACAI,EA0CC,EA1CDA,oBAGAG,GAuCC,EAzCDF,sBAyCC,EAxCDC,qBAwCC,EAvCDC,WACAE,EAsCC,EAtCDA,eACAD,EAqCC,EArCDA,UACAE,EAoCC,EApCDA,QACAC,EAmCC,EAnCDA,qBACAC,EAkCC,EAlCDA,gBACAC,EAiCC,EAjCDA,sBAQAQ,GAyBC,EAhCDP,oBAgCC,EA/BDC,iBA+BC,EA9BDC,cA8BC,EA7BDC,gBA6BC,EA5BDC,YA4BC,EA3BDC,cA2BC,EA1BDC,cA0BC,EAzBDC,sBACAC,EAwBC,EAxBDA,cAIAI,GAoBC,EAvBDH,UAuBC,EAtBDE,UAsBC,EArBDD,YAqBC,EApBDE,cACAC,EAmBC,EAnBDA,MASAgB,GAUC,EAlBDf,MAkBC,EAjBDC,MAiBC,EAhBDC,MAgBC,EAfDC,SAeC,EAdDC,SAcC,EAbDC,SAaC,EAZDC,SAYC,EAXDC,kBAWC,EAVDQ,oBAIAJ,GAMC,EATDH,oBASC,EARDC,UAQC,EAPDC,UAOC,EANDC,YACAC,EAKC,EALDA,WACAE,EAIC,EAJDA,YACAD,EAGC,EAHDA,WAIF,IAAuB,IAAnBhC,GAA2C,GAAhBiB,EAC7B,OACE,kBAAC,IAAD,CACE+U,IAAKD,EACLnN,cAAc,SACdE,WAAW,aACX3K,OAAO,sBACP8X,QAAQ,oBACRC,UAAU,OACVhN,OAAO,kBACP0B,MAAM,QACNuL,OAAO,QACPlN,WAAY,QACZ8M,MAAOA,EACP9X,QAAS,kBAv/B7B,SAAyB8X,EAAO1W,GAC9B2D,QAAQC,IAAI,cAAe8S,GAC3BvX,KAEAsR,GAAaiG,GACbpX,IAAe,GACfC,IAAgB,GAChBH,EAAkBY,GAClBX,EAAmB6W,YAAoB/S,IA++BN4T,CAAgBL,EAAO1W,KAEtC,6BACGL,GAAqBmB,EAAiBS,EAAsBC,EAAeiB,EAAYE,EAAYD,EAAYE,EAAaC,EAAoBhB,IAChJ,GAEH,4BAAK9B,EAAKkK,MAAM,OAAO,IACvB,yBAAKpL,MAAO,CAAE2X,SAAU,UACrBzW,EAAKkK,MAAM,OAAOpG,OAAS,GAC1B,uBAAGhF,MAAO,CAAEmL,MAAO,WAAaE,OAAO,SAASC,KAAI,GAAKpK,EAAKkK,MAAM,OAAOlK,EAAKkK,MAAM,OAAOpG,OAAS,IACnG9D,EAAKkK,MAAM,OAAOlK,EAAKkK,MAAM,OAAOpG,OAAS,KAIpD,8BACC,EAKApD,GACC,6BACE,iDAAyBA,EAAY6J,YAAUrK,GAAS2B,EAAgB,KAAKqJ,QAAQ,GAArF,MACA,kBAACO,EAAA,EAAD,CAAa3M,MAAO,CAAE0M,MAAO,IAAKoI,aAAc,IAAMlI,UAAQ,EAACC,SAAO,EAACC,QAAQ,UAAUzE,IAAOzG,EAAY6J,YAAUrK,GAAS2B,EAAgB,IAAKgK,OAAanL,EAAY6J,YAAUrK,GAAS2B,EAAgB,KAAKqJ,QAAQ,GAApE,OAG7J,6BACE,sCACA,kBAAC,IAAD,KACG,IACA/K,EAFH,QAE4BW,GAAwB0J,IAAejK,EAAsBmD,IAG3F,6BACG,IACD,wCAAiB,IACjB,kBAAC,IAAD,KACG+G,OAAOa,WAAWhB,YAAoBzI,EAAcxB,IAAuBqK,oBAAeC,EAAW,CAAEC,sBAAuBH,OAAOF,YAAUrK,IAAS,EAAI,EAAI,IADnK,IAC0KC,EAD1K,WACsM,IACnMsK,OAAOa,WAAWhB,YAAoBzI,EAAcxB,GAAwBkK,YAAUrK,IAAOwK,oBAAeC,EAAW,CACtHC,sBAAuBH,OAAOa,WAAWhB,YAAoBzI,EAAcxB,GAAwBkK,YAAUrK,IAAS,EAAI,EAAI,IAC5H,IACHY,GAAwB0J,IAAejK,EAAsBmD,IAGlE,6BACG,IACD,mCAAY,IACZ,kBAAC,IAAD,KACG+G,OAAOa,WAAWf,YAAUrK,IAAOwK,oBAAeC,EAAW,CAAEC,sBAAuBH,OAAOF,YAAUrK,IAAS,EAAI,EAAI,IAD3H,IACkIC,EADlI,UAC6JW,GAAwB0J,IAAejK,EAAsBmD,IAG5N,6BACE,0CADF,IACqB,kBAAC,IAAD,KAAcuT,aAActW,KAEjD,6BACE,wCACA,kBAAC,IAAD,SAAesW,aAAcpW,MAE9B,GAKA,EAKE,KACF,EAMD,6BACE,2CACA,kBAAC,IAAD,SA52BtB,SAAyBE,GACvB,MAAuB,QAAnBA,EACK,gDACqB,aAAnBA,EACF,uDACqB,YAAnBA,EACF,2CACqB,YAAnBA,EACF,2CACqB,oBAAnBA,EACF,wDAEA,SAg2B0BkK,CAAgBlK,KAEjC,6BACE,iDACA,kBAAC,IAAD,SAAeC,SAO3B+L,GACAoC,KACCC,KACAF,IACDsB,KACCA,GAAckG,KAAI,YAAuC,IAApC9V,EAAmC,EAAnCA,eAAgBiB,EAAmB,EAAnBA,aACpC,OAA0B,IAAnBjB,GAA2C,GAAhBiB,KACjCiC,QAAU,QACa,IAAjB0M,MACR7R,IACC,kBAAC,IAAD,KACE,6BADF,wEAKN,yBAAKG,MAAO,CAAEyK,QAAS,OAAQwB,SAAU,OAAQnB,eAAgB,WAAajL,KAAiBoO,GAAkBmK,MAAMC,KAAK,CAAErT,OAAQ+I,IAAgB,SAACX,EAAOyK,GAAR,OAAkBA,KAAOD,KAAI,SAAAU,GAAI,OAAI,kBAAC,EAAD,UAC1LrK,GAAkByD,IAAiB5M,QAAQC,IAAI,qBAAsBkJ,EAAgB0D,UAAkBA,GAAWD,UAAsBA,IACxIzD,GAAkByD,IACjB,kBAACxR,EAAD,CACEI,iBAAkBA,GAClBC,kBAAmBA,EACnBC,mBAAoBA,EACpBC,eAAgBA,GAChBC,gBAAiBA,GACjBG,eAAgBA,EAChBF,YAAaA,EACbG,qBAAsBA,GACtBG,aAAcyQ,IAAiBA,GAAczD,EAAiB,EAAI0D,IAClExR,aAAcA,EACdC,cAAeA,GACfC,YAAaA,MAIf4N,IAAmBqC,IACnB,kBAAC,EAAD,CACE7Q,YAAaA,EACbG,eAAgB8R,IAAiBA,GAAc1M,OAAS+I,EACxDlO,aAAcA,GACdH,YACGuO,GACDoC,KACCC,KACAF,IACDsB,KACCA,GAAckG,KAAI,YAAuC,IAApC9V,EAAmC,EAAnCA,eAAgBiB,EAAmB,EAAnBA,aACpC,OAA0B,IAAnBjB,GAA2C,GAAhBiB,KACjCiC,QAAU,QACa,IAAjB0M,KACTjS,EAEFE,iBAp6CV,SAA0B4Y,GAAO,SAChBnD,EADe,8EAC9B,WAAmCoD,GAAnC,SAAA9Q,EAAA,yDACEpH,GAAiB,IACjBqP,IAAgB,IAChB6I,EAHF,6BAIMlY,GAJN,SAKckV,YACJhR,EACAoD,EAAKC,IACL4M,EAAY5M,IACZ6M,YAAWpQ,EAAS,sBACpByD,EAAMF,IACNoG,EACAF,EACAK,EACAD,EACAlJ,GACAC,GACA9E,GACAC,GACAF,EACA6N,GApBV,sEAuBM1N,GAvBN,UAwBckV,YACJhR,EACAoD,EAAKC,IACL4M,EAAY5M,IACZ6M,YAAWpQ,EAAS,sBACpByD,EAAMF,IACNoG,EACAF,EACAK,EACAD,EACAhO,EAAaoY,EAAO,GAAGtT,WACvB9E,EAAaoY,EAAO,GAAGrT,SACvB9E,GACAC,GACAF,EACA6N,GAvCV,2CA0CE2B,IAAgB,GA1ClB,6CAD8B,sBA8C1B4I,EAAO9Y,GACT0O,EAAeoK,GACfnD,GAAoB,GACpBtQ,QAAQC,IAAI,oBAAqB5E,EAAcA,EAAaoY,EAAO,MAEnEpK,EAAeoK,GACfnD,GAAoB,GACpBtQ,QAAQC,IAAI,qBAAsB5E,EAAcA,EAAaoY,EAAO,UCrM1E,MAAME,EAAc,CAACX,EAAK1K,EAAOsL,EAAU,MAEzC,GAAwB,oBAAbC,SAA0B,CAGnC,MAAM,cAAEC,EAAgB,UAAS,YAAEC,GAAc,GAASH,EAEpDI,EAAS,IAAIC,gBAAgBJ,SAASK,aAG9BnN,IAAVuB,EAAqBA,EAAQ0L,EAAOjQ,IAAIiP,GAGzB,OAAV1K,GAAkByL,EAAaC,EAAOG,OAAOnB,GAEjDgB,EAAOI,IAAIpB,EAAK1K,GAErB,IAAI/B,EAASsN,SAASQ,SAAW,IAAML,EAAO5E,WAG9C,OAFA7I,EAASA,EAAOmC,QAAQ,SAAU,IAClC4L,QAAQR,EAAgB,SAAS,CAAES,KAAMjM,GAAS,GAAI/B,GAC/C+B,IAGEkM,EAAgB,CAACxB,EAAK1K,EAAOsL,KAExC,MAAOa,EAAOC,GAAY,mBAASf,EAAYX,EAAK1K,EAAOsL,IAG3D,MAAO,CAACa,EADO,CAACE,EAAUC,IAAaF,EAASf,EAAYX,EAAK2B,EAAU,IAAKf,KAAYgB,OClB/E,uBCZA,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDWf,IACtB,MAA4CN,EAAc,OAAnDrL,EAAP,KAAuB1N,EAAvB,KACA,EAA8C+Y,EAAc,SAArDpL,EAAP,KAAwB1N,EAAxB,KACA,EAAqC0D,qBAAWE,KAAxCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QAEzB,EAAuCa,mBAAS,IAAzChF,EAAP,KAAoB6N,EAApB,KAgBA,OACE,kBAAC,IAAD,CAAQ6L,SAAS,WAAWC,OAAO,MAAMpN,MAAM,OAAOuL,OAAO,QAC3D,kBAAC,IAAD,CAAKnY,MAAM,QAAQia,YAAY,2CAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAWC,YAAY,OAAOtN,MAAM,OAAO3B,WAAW,GAAG/K,MAAO,CAAEyK,QAAS,OAAQG,WAAY,SAAUF,cAAe,SAAUa,cAAe,WACrIlH,GAAmB,wBAAIrE,MAAO,CAAE2K,WAAY,KAAzB,uDAC5B7F,QAAQC,IAAI,aAAcT,EAAS2V,cApB1C,SAA0B3V,GAQxB,YAA6C,IAPf,CAC5B,OAAQ,UACR,MAAO,WACP,SAAU,WACV,aAAc,SACd,UAAW,UAEoBA,GAa5B4V,CAAiB5V,GAChB,kBAACwJ,EAAD,CAAeC,aAzBF,EAyB8B5N,aAAcA,EAAc6N,gBAAiBA,EAAiBE,gBAAiBA,EAAiB1N,mBAAoBA,EAAoByN,eAAgBA,EAAgB1N,kBAAmBA,IAEtO8D,GACE,yBAAKrE,MAAO,CAAE2W,UAAW,WACvB,6BACA,kBAAC,IAAD,CAAM3W,MAAO,CAAE6N,UAAW,IAAM3C,WAAW,OAA3C,qBAGA,6BACA,uBAAGlL,MAAO,CAAE+W,WAAY,GAAIL,YAAa,KAAzC,mE","file":"component---src-pages-deals-js-75d7dfd9f75829884b25.js","sourcesContent":["import React from 'react';\nimport { Layout, SEO } from 'components/common';\nimport { Sale, SaleDetails } from 'components/landing';\n\nexport default () => (\n  <Layout>\n    <SEO />\n    <Sale />\n    <SaleDetails />\n  </Layout>\n);\n","import React from 'react';\nimport styles from \"./SkeletonCard.css\";\n\nconst SkeletonCard = () => {\n  return (\n    <div className=\"skeleton-card\">\n      <div className=\"skeleton-card__header\">\n        <div className=\"skeleton-card__avatar\" />\n        <div className=\"skeleton-card__title\" />\n      </div>\n      <div className=\"skeleton-card__body\">\n        <div className=\"skeleton-card__description\" />\n        <div className=\"skeleton-card__description\" />\n      </div>\n      <div className=\"skeleton-card__body\">\n        <div className=\"skeleton-card__description\" />\n        <div className=\"skeleton-card__description\" />\n      </div>\n      \n    </div>\n  );\n};\n\nexport default SkeletonCard;\n","import styled from \"styled-components\";\n\nexport const TableD = styled.td`\n  text-align: center;\n  horizontal-align: center;\n  border: none;\n  padding-bottom: 0px;\n  padding-top: 0px;\n  visibility: ${({ visibility }) => visibility || \"visible\"};\n`;\n\nexport const TableR = styled.tr`\n  border: none;\n`;\n\nexport const TableLabel = styled.div`\n  border-radius: 5px;\n  background: ${({ selected }) => (selected ? \"green\" : \"black\")};\n`;\n","import React from \"react\";\nimport styles from \"./Pagination.css\";\n\nconst Pagination = props => {\n  const { currentPage, totalPages, handlePageChange, hideNextButton, salesLoading} = props;\n\n  const renderFirstButton = () => {\n    if (currentPage === 1) {\n      return null;\n    }\n\n    return (\n      <button title=\"First page\" onClick={() => handlePageChange(1)}>\n        <i className=\"arrow left-double\"></i>\n      </button>\n    );\n  };\n\n  const renderPreviousButton = () => {\n    if (currentPage === 1) {\n      return null;\n    }\n\n    return (\n      <button title=\"Previous page\" onClick={() => handlePageChange(currentPage - 1)}>\n        <i className=\"arrow left\"></i>\n      </button>\n    );\n  };\n\n  const renderNextButton = () => {\n    if (currentPage === totalPages) {\n      return null;\n    }\n\n    return (\n      <button title=\"Next page\" onClick={() => handlePageChange(currentPage + 1)}>\n        <i className=\"arrow right\"></i>\n      </button>\n    );\n  };\n\n  const renderLastButton = () => {\n    if (currentPage === totalPages) {\n      return null;\n    }\n\n    return (\n      <button title=\"Last page\" onClick={() => handlePageChange(totalPages)}>\n        <i className=\"arrow right-double\"></i>\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      {!salesLoading && renderPreviousButton()}\n      {!salesLoading && <span style={{margin:10}}>Page {currentPage}  </span>}\n      {!salesLoading && !hideNextButton && renderNextButton()}\n      {false && renderLastButton()}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\n\nimport { getOnlyUserAddress, deployNewSeed, getSeedSales, getCoingeckoName, getNetworkName, getRateInUsd, getNativeTokenPrice, ZERO_ADDRESS, recoverErc20Tokens, getDealOwner, fromWeiWithDecimals } from \"../../../templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport axios from \"axios\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { SmallerText } from \"components/common/Text\";\n\nimport { Text, Card } from \"components/common\";\nimport * as utils from \"../../../templates/utils\";\nimport { fromWei, fromFixed, getCustomTier, approveContract, checkApprovalStatus } from \"../../../templates/utils\";\nimport { WalletContext } from \"providers/WalletProvider\";\n\nimport {\n  Wrapper,\n  ProjectsWrapper,\n  Heading,\n  HeadingText,\n  InfoCards,\n  CardHeaderWrapper,\n  ProjectNameWrapper,\n  Details,\n  ConnectButton,\n  Thumbnail,\n  Link,\n  SaleCard,\n  StatusContainer,\n  EthInput,\n  ColorTitle,\n  UnderlinedTitle,\n  ConnectWalletCard,\n  LitepaperCard,\n  StatsCard,\n  TokenCard,\n  CardHeaderTextWrapper,\n  CardBottomWrapper,\n  FirstStatsCard,\n  RightStatsCard,\n  LeftStatsCard,\n  TierWrapper,\n  TitleText,\n  StatsCardHeading,\n  FlexBox,\n  JoinCard,\n  Cards,\n  TBAText,\n} from \"../../..//templates/styles\";\n\nimport { Avatar } from \"../../../common/Avatar\";\nimport seedSale from \"pages/seed-sale.js\";\n\nexport function SeedCard({\n  indexHistory,\n  setStartIndex,\n  setEndIndex,\n  setSeedSalesData,\n  setActiveContract,\n  setChainQueryParam,\n  setCardVisible,\n  setDealsVisible,\n  isWalletEnabled1111,\n  refetchData,\n  setRefetchData,\n  loadingIndicator,\n  setLoadingIndicator,\n  getEligibilityStatus,\n  seedSaleData: {\n    name,\n    seedAddress,\n    rate,\n    offeredTokenName,\n    offeredTokenSymbol,\n    offeredTokenDecimals,\n    offeredTokenTotalSupply,\n    acceptedTokenSymbol,\n    acceptedTokenDecimals,\n    acceptedTokenBalance,\n    weiRaised,\n    dealVisibility,\n    startTime,\n    endTime,\n    acceptedTokenAddress,\n    accessMechanism,\n    distributionMechanism,\n    offeredTokenAddress,\n    percentageVested,\n    cliffDuration,\n    vestingDuration,\n    cliffPeriod,\n    vestingPeriod,\n    vestedBalance,\n    capPerAddressEnabled,\n    capPerAddress,\n    accessNFT,\n    accessNTT,\n    accessToken,\n    totalOffered,\n    tier1,\n    tier2,\n    tier3,\n    tier4,\n    tier1Cap,\n    tier2Cap,\n    tier3Cap,\n    tier4Cap,\n    accessTokenSymbol,\n    accessTokenDecimals,\n    capForNTT,\n    capForNFT,\n    nftBalance,\n    nttBalance,\n    kycEnabled,\n    hasValidNtt,\n    accessTokenBalance,\n  },\n}) {\n  const { theme } = useContext(ThemeContext);\n  const { isWalletEnabled, setWalletStatus, chainId, setChainId, currentAccount, setCurrentAccount, nativeBalance, setNativeBalance, nativeTokenName } = useContext(WalletContext);\n  //replace balance with context nativeBalance and currentNetwork with chainId from context\n\n  {\n    console.log(\"native token name 123 \", nativeTokenName);\n  }\n  console.log(\"index history\", indexHistory);\n  if (indexHistory.length > 0) {\n    setStartIndex(indexHistory[indexHistory.length - 1].startIndex);\n    setEndIndex(indexHistory[indexHistory.length - 1].endIndex);\n  }\n\n  const [dealOwner, setDealOwner] = useState();\n  const [approveLoading, setApproveLoading] = useState(false);\n  const [shineBalance, setShineBalance] = useState(23232);\n  const [currentStatus, setCurrentStatus] = useState(\"seed\");\n  const [tokenContractAddress, setTokenContractAddress] = useState(\"0x00184f7E750Db6D16118597d18b79AAeCE26E5f2\"); // random address initially\n\n  const [isSaleOpenForAll, setIsSaleOpenForAll] = useState();\n  const [projectBalance, setProjectBalance] = useState();\n  //const [weiRaised, setWeiRaised] = useState();\n\n  const [seedSaleShnBalance, setSeedSaleShnBalance] = useState();\n  const [metamaskErrorCode, setMetamaskErrorCode] = useState();\n  const [saleProgress, setSaleProgress] = useState();\n  const [relativeCap, setRelativeCap] = useState();\n  const [newRelativeCap, setNewRelativeCap] = useState(); // used for updating the new relative cap through the UI\n  const [contributions, setContributions] = useState();\n  const [currentMigration, setCurrentMigration] = useState();\n\n  const [isShineBought, setShineBought] = useState(false);\n  const [isTokenWithdrawn, setIsTokenWithdrawn] = useState(false);\n  const [shineBoughtAmount, setShineBoughtAmount] = useState(false);\n  const [isTransactionBeingProcessed, setTransactionBeingProcessed] = useState(false);\n  const [amountToSpend, setAmountToSpend] = useState(0);\n  const [shnReference, setShnReference] = useState(\"\");\n  const [currentEthPrice, setCurrentEthPrice] = useState();\n  const [ethRaised, setEthRaised] = useState();\n  const [saleContractAddress, setSaleContractAddress] = useState(\"0xC7E7D5B322cEa8FEFb388Eb19463737C3468f30D\"); //random address initially\n  //const [rate, setRate] = useState();\n  const [rateInUsd, setRateInUsd] = useState();\n\n  const [vestedSoFar, setVestedSoFar] = useState();\n  const [secondsSinceEpoch, setSecondsSinceEpoch] = useState();\n\n  const [approvalStatus, setApprovalStatus] = useState(false);\n  console.log(\"refetch data\", refetchData);\n\n  useEffect(() => {\n    console.log(\"Refetch data 123\", refetchData);\n\n    if (isWalletEnabled == true && typeof name != \"undefined\") {\n      async function getLocked() {\n        setDealOwner(await getDealOwner(Seed.abi, seedAddress));\n        setTokenContractAddress(offeredTokenAddress);\n        setSaleContractAddress(seedAddress);\n        //setRate(rate);\n        utils.getProjectBalance(setProjectBalance, currentAccount, ERC20.abi, offeredTokenAddress);\n        utils.getSeedSaleShnBalance(setSeedSaleShnBalance, ERC20.abi, seedAddress, offeredTokenAddress);\n        console.log(\"sale data 1\", await getNativeTokenPrice(\"0x89\"));\n        setRateInUsd(getRateInUsd(utils.fromFixed(rate), await getNativeTokenPrice(chainId)));\n        setSecondsSinceEpoch(Math.round(Date.now() / 1000));\n        //console.log(\"vested so far \", secondsSinceEpoch <= vestingPeriod, secondsSinceEpoch, cliffPeriod, vestedBalance);\n        if (Math.round(Date.now() / 1000) <= cliffPeriod) {\n          setVestedSoFar(0);\n        } else if (Math.round(Date.now() / 1000) <= vestingPeriod) {\n          setVestedSoFar(rewardPerSecond * (Math.round(Date.now() / 1000) - cliffPeriod));\n        } else {\n          setVestedSoFar(vestedBalance);\n        }\n      }\n      getLocked();\n    }\n  }, [isWalletEnabled, name, refetchData]);\n\n  useEffect(() => {\n    //https://stackoverflow.com/a/70068404 setting refetch back to false, in case if there are multiple swaps one after other\n    if (refetchData == true) {\n      const timer = setTimeout(() => {\n        setRefetchData(false);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [refetchData]);\n\n  useEffect(() => {\n    checkApprovalStatus(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, amountToSpend, setApprovalStatus);\n  }, [amountToSpend, name]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        setCurrentEthPrice(response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [amountToSpend, chainId]);\n\n  function getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration) {\n    if (distributionMechanism == \"lock\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution Mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n            {100 - percentageVested}% of the tokens are unlocked immediatly, and the rest after {Number((vestingDuration / 86400).toFixed(2))} days\n          </Text>\n        </div>\n      );\n    } else if (distributionMechanism == \"linear-vesting\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution Mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            {100 - percentageVested}% of the tokens are unlocked immediatly, then distributed linearly over {(vestingDuration / 86400).toFixed(2)} days with a cliff period of {(cliffDuration / 86400).toFixed(2)} days\n          </Text>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            All tokens are unlocked immediatly\n          </Text>\n        </div>\n      );\n    }\n  }\n\n  const project = {\n    title: \"EXAMPLE\",\n    image: \"test\",\n    frontendDetails: { totalRaise: \"200k\", incubationStage: \"seed\", totalSupply: \"500M\", chain: \"Matic\", rate: \"$0.02\", roundAllocation: \"200k\" },\n    technicalDetails: {\n      seed: {\n        rate: 203333,\n        date: \"Fri, 14 Jan 2022 15:00:00 GMT\",\n        metamaskDetails: { sybmol: \"SYMBOL\" },\n        network: \"0x7a69\",\n        caps: { tier1: { amount: 400 }, tier2: { amount: 400 }, tier3: { amount: 400 }, tier4: { amount: 400 } },\n      },\n    },\n  };\n  const saleAbi = Seed.abi;\n\n  function getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4) {\n    if (accessMechanism == \"open\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Open to anyone\n        </Text>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Whitelist, {fromWeiWithDecimals(capPerAddress, offeredTokenDecimals)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"nft-gate\") {\n      return (\n        <div>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            NFT Gated: {fromWeiWithDecimals(capForNFT, offeredTokenDecimals)} {acceptedTokenSymbol} cap/address\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            NFT: {accessNFT}\n          </Text>\n        </div>\n      );\n    } else if (accessMechanism == \"ntt-gate\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          NTT Gated {fromWeiWithDecimals(capForNTT, offeredTokenDecimals)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      let calculatedTier = getCustomTier(\n        fromWeiWithDecimals(accessTokenBalance, accessTokenDecimals),\n        fromWeiWithDecimals(tier1, accessTokenDecimals),\n        fromWeiWithDecimals(tier2, accessTokenDecimals),\n        fromWeiWithDecimals(tier3, accessTokenDecimals),\n        fromWeiWithDecimals(tier4, accessTokenDecimals)\n      );\n      return (\n        <div>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Token Gated With Tiers\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Access Token: {accessToken}\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Your Balance: {fromWeiWithDecimals(accessTokenBalance, accessTokenDecimals)} {accessTokenSymbol} ({calculatedTier})\n          </Text>\n          <div style={{ display: \"flex\", paddingTop: 10, paddingBottom: 10, flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 1\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 1\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWeiWithDecimals(tier1, accessTokenDecimals)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWeiWithDecimals(tier1Cap, acceptedTokenDecimals)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 2\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 2\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWeiWithDecimals(tier2, accessTokenDecimals)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWeiWithDecimals(tier2Cap, acceptedTokenDecimals)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 3\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 3\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWeiWithDecimals(tier3, accessTokenDecimals)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                {fromWeiWithDecimals(tier3Cap, acceptedTokenDecimals)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 4\" ? \"#322ad1\" : \"red\"} fontWeight={700} fontSize=\"16px\">\n                TIER 4\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                &#62; {fromWeiWithDecimals(tier4, accessTokenDecimals)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWeiWithDecimals(tier4Cap, acceptedTokenDecimals)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n          </div>{\" \"}\n        </div>\n      );\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleSwapButton(\n    acceptedTokenAddress,\n    amountToSpend,\n    setAmountToSpend,\n    setShineBought,\n    setShineBoughtAmount,\n    setTransactionBeingProcessed,\n    setMetamaskErrorCode,\n    currentAccount,\n    saleAbi,\n    saleContractAddress,\n    currentStatus,\n    acceptedTokenDecimals,\n    offeredTokenDecimals\n  ) {\n    if (acceptedTokenAddress == utils.ZERO_ADDRESS) {\n      console.log(\"tam\", utils.toWeiWithDecimals(amountToSpend, 18));\n      console.log(\"swap am \", amountToSpend, utils.toWeiWithDecimals(amountToSpend, 18));\n\n      utils.buyShineTokens(\n        utils.toWeiWithDecimals(amountToSpend, 18),\n        setAmountToSpend,\n        setShineBought,\n        setShineBoughtAmount,\n        setTransactionBeingProcessed,\n        setMetamaskErrorCode,\n        currentAccount,\n        saleAbi,\n        saleContractAddress,\n        currentStatus,\n        setRefetchData,\n        offeredTokenDecimals\n      );\n    } else {\n      utils.swapTokenWithToken(\n        utils.toWeiWithDecimals(amountToSpend, acceptedTokenDecimals),\n        setAmountToSpend,\n        setShineBought,\n        setShineBoughtAmount,\n        setTransactionBeingProcessed,\n        setMetamaskErrorCode,\n        currentAccount,\n        saleAbi,\n        saleContractAddress,\n        currentStatus,\n        setRefetchData,\n        offeredTokenDecimals\n      );\n    }\n  }\n\n  async function handleApprove() {\n    setApproveLoading(true);\n    await approveContract(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, utils.toWeiWithDecimals(amountToSpend, acceptedTokenDecimals), setApprovalStatus);\n    setApproveLoading(false);\n  }\n\n  function setExpansionDetails() {\n    setSeedSalesData();\n    setActiveContract(null);\n    setChainQueryParam(null);\n    setCardVisible(false);\n    setDealsVisible(true);\n  }\n\n  async function handleWithdrawUnsoldTokens() {\n    console.log(\"withdraw balance \", seedSaleShnBalance, seedSaleShnBalance.toNumber(), utils.floor10(seedSaleShnBalance, -8), utils.toWeiWithDecimals(utils.floor10(seedSaleShnBalance, -8), offeredTokenDecimals)); // floor is needed to round it down, since if it rounds it up, EVM will throw error during withdrawal\n    await recoverErc20Tokens(currentAccount, Seed.abi, seedAddress, offeredTokenAddress, utils.toWeiWithDecimals(utils.floor10(seedSaleShnBalance, -8), offeredTokenDecimals));\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n      <div onClick={() => setExpansionDetails()} style={{ cursor: \"pointer\" }}>\n        <h3>← Go Back</h3>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 50 }}>\n        <StatsCard background=\"black\" border=\"1px solid white\">\n          <div>{getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1)}</div>\n\n          <CardHeaderWrapper>\n            <ProjectNameWrapper>\n              {false && <Avatar imageUrl={project.image} alt=\"Defi options logo\" width=\"60px\" height=\"60px\" />}\n              <StatsCardHeading margin=\"0 0 20px 0px\" fontSize=\"30px\" fontWeight={800} color=\"white\">\n                {name.split(\"§!§\")[0]}\n              </StatsCardHeading>\n            </ProjectNameWrapper>\n          </CardHeaderWrapper>\n\n          {name.split(\"§!§\").length > 1 && ( // this line is here for older contracts that didnt have §!§\n            <a target=\"_blank\" style={{ color: \"#3bff3b\" }} href={`${name.split(\"§!§\")[name.split(\"§!§\").length - 1]}`}>\n              {name.split(\"§!§\")[name.split(\"§!§\").length - 1]}\n            </a>\n          )}\n          <br></br>\n\n          <Text color=\"white\" style={{ margin: \"0 auto\" }}>\n            <i>{false && \"Please Note: for Tier1 and Tier 2 sale is opening 15 mins after\"}</i>\n          </Text>\n\n          <CardBottomWrapper background=\"black\">\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Deal Size\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {fromWeiWithDecimals(totalOffered, offeredTokenDecimals)} {offeredTokenSymbol} for max {fromWeiWithDecimals(totalOffered, offeredTokenDecimals) / fromFixed(rate)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Deal Avaibility\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.timeConverter(startTime)} to {utils.timeConverter(endTime)}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={300} fontSize=\"20px\">\n                Rate\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"20px\">\n                You get {Number(fromFixed(rate)).toLocaleString(undefined, { maximumFractionDigits: Number(fromFixed(rate)) > 1 ? 2 : 8 })} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Access Mechanism\n              </Text>\n\n              {getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4)}\n            </div>\n            <div>{getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration)}</div>\n\n            {isWalletEnabled && false && (\n              <Card onClick={() => utils.addToWatchlist(project.technicalDetails[currentStatus].metamaskDetails)} borderRadius=\"4px\" background=\"white\" clickable width=\"100%\" height=\"48px\">\n                <Text fontWeight={800}>ADD {project.technicalDetails[currentStatus].metamaskDetails.symbol} TO METAMASK</Text>\n              </Card>\n            )}\n\n            <br></br>\n            <br></br>\n            {secondsSinceEpoch && dealOwner && secondsSinceEpoch > endTime && currentAccount.toLowerCase() == dealOwner.toLowerCase() && <Button onClick={() => handleWithdrawUnsoldTokens()}>Widthdraw Unsold Tokens</Button>}\n            <Text color=\"red\" fontWeight={800}>\n              {endTime && secondsSinceEpoch > endTime && \"Deal closed!\"}\n            </Text>\n            <br></br>\n            <br></br>\n          </CardBottomWrapper>\n        </StatsCard>\n\n        <TokenCard>\n          <TitleText fontWeight={600} fontSize=\"16px\" color=\"white\">\n            <b> {offeredTokenSymbol}</b>\n            {false && (\n              <Link href={`${chainId == \"0x1\" ? \"https://etherscan.io\" : `https://polygonscan.com/address/${tokenContractAddress}`}`} target=\"_blank\">\n                {tokenContractAddress.substring(0, 6)}...{tokenContractAddress.substring(tokenContractAddress.length - 4)}\n              </Link>\n            )}\n            <Text>\n              Token Address: <span style={{ color: \"#aeaeae\" }}>{tokenContractAddress} </span>\n            </Text>\n\n            <span>\n              Total Supply:{\" \"}\n              <span style={{ color: \"#aeaeae\" }}>\n                {\" \"}\n                {utils.fromWeiWithDecimals(offeredTokenTotalSupply, offeredTokenDecimals).toLocaleString()} {offeredTokenSymbol}\n              </span>\n            </span>\n            <br></br>\n\n            <span>\n              Your Balance:{\" \"}\n              <span style={{ color: \"#aeaeae\" }}>\n                {\" \"}\n                {Number.parseFloat(projectBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}\n              </span>\n            </span>\n            <br></br>\n            <br></br>\n          </TitleText>\n\n          {\n            <TitleText fontWeight={600} fontSize=\"16px\" color=\"white\">\n              <b>{acceptedTokenSymbol} </b>\n              {false && (\n                <Link href={`${chainId == \"0x1\" ? \"https://etherscan.io\" : `https://polygonscan.com/address/${tokenContractAddress}`}`} target=\"_blank\">\n                  {acceptedTokenAddress.substring(0, 6)}...{acceptedTokenAddress.substring(acceptedTokenAddress.length - 4)}\n                </Link>\n              )}\n              {acceptedTokenAddress !== utils.ZERO_ADDRESS && (\n                <Text>\n                  {\" \"}\n                  Token Address: <span style={{ color: \"#aeaeae\" }}>{acceptedTokenAddress} </span>\n                </Text>\n              )}\n            </TitleText>\n          }\n          {acceptedTokenAddress != utils.ZERO_ADDRESS ? (\n            <>\n              {\" \"}\n              <span>\n                Your Balance:{\" \"}\n                <span style={{ color: \"#aeaeae\" }}>\n                  {Number.parseFloat(fromWeiWithDecimals(acceptedTokenBalance, acceptedTokenDecimals)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {acceptedTokenSymbol}\n                </span>\n              </span>\n            </>\n          ) : (\n            <span>\n              {getNetworkName(chainId)} Balance:{\" \"}\n              <span style={{ color: \"#aeaeae\" }}>\n                {Number.parseFloat(nativeBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {nativeTokenName}\n              </span>\n            </span>\n          )}\n\n          {false && isWalletEnabled && project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The {currentStatus} offering has finished.\n            </Text>\n          )}\n          {false && isWalletEnabled && utils.getTier(shineBalance) === \"No Tier\" && !project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The amount of SHN that you have is below a minimum threshold to be placed in a tier. In order to participate in the sale, please consider getting some SHN on{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://info.quickswap.exchange/#/token/0x53d76f967de13e7f95e90196438dce695ecfa957\", \"_blank\", \"noopener\")}>\n                Quickswap.\n              </b>\n            </Text>\n          )}\n          {false && isWalletEnabled && (utils.getTier(shineBalance) === \"Tier 1\" || utils.getTier(shineBalance) === \"Tier 2\") && !isSaleOpenForAll && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              Seed sale is not yet open for Tier 1 and Tier 2. To get priority access please consider upgrading your tier{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://v2.info.uniswap.org/pair/0x165c6e50ed0ced21c0192fac26c1affb0dea5c28\", \"_blank\", \"noopener\")}>\n                here.\n              </b>\n            </Text>\n          )}\n          <br></br>\n          {isWalletEnabled && (\n            <Details theme={theme}>\n              <div style={{ width: \"100%\" }}>\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {false && <span>Current Network: {getNetworkName(chainId)}</span>}\n                  <br />\n                  {false && (\n                    <span>\n                      Connected account: {window.ethereum.selectedAddress.substring(0, 6)}...\n                      {window.ethereum.selectedAddress.substring(window.ethereum.selectedAddress.length - 4)}\n                    </span>\n                  )}\n                  <br />\n                  {false && isWalletEnabled && (\n                    <Text color=\"#aeaeae\">\n                      {\" \"}\n                      Access token balance: {Number.parseFloat(shineBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} SHN <b style={{ color: \"#f2df96\" }}>{utils.getTier(shineBalance)}</b>\n                    </Text>\n                  )}\n\n                  <br />\n                  {console.log(\"vestedSoFar \", vestedSoFar)}\n\n                  <br />\n                  {weiRaised && (\n                    <div>\n                      <br></br>\n                      <span>Sale progress: {(((weiRaised * fromFixed(rate)) / totalOffered) * 100).toFixed(2)}% </span>\n                      <ProgressBar animated striped variant=\"success\" now={((weiRaised * fromFixed(rate)) / totalOffered) * 100} label={`${(((weiRaised * fromFixed(rate)) / totalOffered) * 100).toFixed(2)}%`} />\n                    </div>\n                  )}\n                  {true && (\n                    <span>\n                      Remaining Deal Balance: {Number.parseFloat(seedSaleShnBalance).toLocaleString(undefined, { maximumFractionDigits: Number.parseFloat(seedSaleShnBalance) > 1 ? 2 : 8 })} {offeredTokenSymbol}\n                    </span>\n                  )}\n\n                  {false && isWalletEnabled && !(new Date().getTime() > new Date(project.technicalDetails[currentStatus].date).getTime()) && (\n                    <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                      Sale is not open yet!\n                    </Text>\n                  )}\n                  {false && isWalletEnabled && chainId !== project.technicalDetails[currentStatus].network && (\n                    <div>\n                      <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                        You are on the wrong network. To access {currentStatus} please change your network to {getNetworkName(project.technicalDetails[currentStatus].network)}.\n                      </Text>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                      <Text color=\"gold\" fontSize=\"14px\" fontWeight={500}>\n                        <i>\n                          {\" \"}\n                          {false && !project.title.includes(\"Kassandra\") && (\n                            <div>\n                              Note: if you want to access vested balances from the seed stage please click{\" \"}\n                              <b style={{ color: \"tomato\", cursor: \"pointer\" }} onClick={() => setCurrentStatus(\"seed\")}>\n                                here\n                              </b>\n                              .\n                            </div>\n                          )}\n                        </i>\n                      </Text>\n                    </div>\n                  )}\n                </Text>\n\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {metamaskErrorCode && <ColorTitle>{metamaskErrorCode} </ColorTitle>}\n\n                  {isWalletEnabled && !isTransactionBeingProcessed && (\n                    <div>\n                      <div>\n                        <br></br>\n                        {acceptedTokenAddress == utils.ZERO_ADDRESS ? <label htmlFor=\"eth_amount\">Enter {nativeTokenName} amount:</label> : <label htmlFor=\"eth_amount\">Enter {acceptedTokenSymbol} amount:</label>}\n                        <br />\n                        <EthInput autoComplete=\"off\" type=\"number\" id=\"eth_amount\" value={amountToSpend} onChange={e => utils.handleChangeOfEthAmountToSpend(e.target.value, setAmountToSpend)} />\n                        {console.log(\"debug\", currentEthPrice, amountToSpend, Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString())}\n                        {amountToSpend != 0 && (\n                          <span>\n                            {acceptedTokenAddress == utils.ZERO_ADDRESS && (\n                              <span>\n                                {\" \"}\n                                <span> ≈ {Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString()} USD</span> <br />{\" \"}\n                              </span>\n                            )}\n                            <span>\n                              {amountToSpend > fromWeiWithDecimals(totalOffered, offeredTokenDecimals) / fromFixed(rate) && <span style={{ color: \"red\" }}>You are trying to purchase more than the max deal size</span>}\n                              <br></br>\n                              Estimated tokens to receive: {utils.estimateReceivedTokens(amountToSpend, fromFixed(rate)).toLocaleString()} {offeredTokenSymbol} <i style={{ color: \"gray\" }}>(-1.2% fee)</i>\n                            </span>\n                            {false && utils.getTier(shineBalance) !== \"No Tier\" && <span>Current contribution: {contributions}</span>}\n                          </span>\n                        )}\n                        <br /> <br />\n                        {// relativeCap && shineBalance needed below because it takes few hundred miliseconds to load the state variables\n                        console.log(\"sshhnn\", shineBalance, contributions)}\n                        {relativeCap && shineBalance && amountToSpend > utils.getMaximumContribution(relativeCap, shineBalance) - contributions && utils.getTier(shineBalance) !== \"No Tier\" && (\n                          <Text color=\"tomato\">\n                            The amount that you are trying to buy exceeds the maximum contribution cap for your current tier which is {utils.getTier(shineBalance)}. Your remaining maximum contribution is:{\" \"}\n                            <span\n                              onClick={e =>\n                                setAmountToSpend(\n                                  Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001)\n                                    .toLocaleString(undefined, {\n                                      minimumFractionDigits: 5,\n                                      maximumFractionDigits: 5,\n                                    })\n                                    .replace(\",\", \"\")\n                                )\n                              }\n                              style={{ cursor: \"pointer\", color: \"#007bff\" }}\n                            >\n                              {Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001).toLocaleString(undefined, {\n                                minimumFractionDigits: 5,\n                                maximumFractionDigits: 5,\n                              })}{\" \"}\n                            </span>{\" \"}\n                            {nativeTokenName}\n                          </Text>\n                        )}\n                        <br />\n                        <br />\n                        <FlexBox>\n                          {approvalStatus &&\n                            (!approveLoading ? (\n                              <ConnectButton theme={theme} onClick={() => handleApprove()}>\n                                Approve\n                              </ConnectButton>\n                            ) : (\n                              <span style={{ paddingRight: 15 }}>\n                                <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n                                <SmallerText>Confirming...</SmallerText>\n                              </span>\n                            ))}\n\n                          <ConnectButton\n                            theme={theme}\n                            onClick={() =>\n                              handleSwapButton(\n                                acceptedTokenAddress,\n                                amountToSpend,\n                                setAmountToSpend,\n                                setShineBought,\n                                setShineBoughtAmount,\n                                setTransactionBeingProcessed,\n                                setMetamaskErrorCode,\n                                currentAccount,\n                                saleAbi,\n                                saleContractAddress,\n                                currentStatus,\n                                acceptedTokenDecimals,\n                                offeredTokenDecimals\n                              )\n                            }\n                          >\n                            Swap\n                          </ConnectButton>\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            {false && \"Note: 25% of the bought tokens are released immediatly, 75% is vested for 100 days.\"}\n                          </Text>\n                        </FlexBox>\n                      </div>\n\n                      <br />\n                      <br />\n                    </div>\n                  )}\n                  {false && isWalletEnabled && vestedBalance && console.log(\"vested balances \", utils.fromWei(vestedBalance))}\n                  {vestedBalance && vestedBalance > 0 && (\n                    <div>\n                      <FlexBox>\n                        {cliffPeriod != vestingPeriod && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Cliff start time: {utils.timeConverter(cliffPeriod)}\n                          </Text>\n                        )}\n\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Unlock time: {utils.timeConverter(vestingPeriod)}\n                        </Text>\n                      </FlexBox>\n                      <br></br>\n\n                      <FlexBox>\n                        <ConnectButton theme={theme} onClick={() => utils.withdrawTokens(saleAbi, saleContractAddress, currentAccount, setTransactionBeingProcessed, setMetamaskErrorCode, setIsTokenWithdrawn, setShineBought)}>\n                          Widthdraw tokens\n                        </ConnectButton>\n                        {typeof vestedSoFar != \"undefined\" && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Available: {Number.parseFloat(utils.fromWeiWithDecimals(vestedSoFar, offeredTokenDecimals)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                          </Text>\n                        )}\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Remaining vest: {Number.parseFloat(utils.fromWeiWithDecimals(vestedBalance, offeredTokenDecimals)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                        </Text>\n                      </FlexBox>\n                    </div>\n                  )}\n                  {isShineBought && !isTransactionBeingProcessed && (\n                    <div style={{ marginTop: 20 }}>\n                      <h4>\n                        You just successfully bought {Number.parseFloat(shineBoughtAmount).toLocaleString()} {offeredTokenSymbol} tokens! {false && \"(Note: 75% is vested)\"}{\" \"}\n                      </h4>\n                    </div>\n                  )}\n\n                  {isTokenWithdrawn && !isTransactionBeingProcessed && (\n                    <div>\n                      <h4>You have successfully claimed portion of your {offeredTokenSymbol} tokens!</h4>\n                    </div>\n                  )}\n\n                  {isTransactionBeingProcessed && (\n                    <div>\n                      {\" \"}\n                      <h5>Processing </h5>\n                      <PulseLoader color={\"yellow\"} loading={true} size={15} margin={2} /> <br /> <br />\n                      <h5>\n                        <i>(Can take up to few minutes, so please wait patiently)</i>\n                      </h5>\n                    </div>\n                  )}\n                </Text>\n              </div>\n            </Details>\n          )}\n          {console.log(\"current network \", chainId, project.technicalDetails[currentStatus].network)}\n\n          {console.log(\"shine balance\", shineBalance)}\n        </TokenCard>\n      </div>\n    </div>\n  );\n}\n","//note both ntt address and seed factory address have to be updates\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { Card, Text } from \"components/common\";\nimport SkeletonCard from \"./SkeletonCard\";\n\nimport { TableD, TableR, TableLabel } from \"components/common/Table\";\nimport { SmallerText } from \"components/common/Text\";\nimport { Slider } from \"components/common/Container/index\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Pagination from \"./Pagination\";\nimport {\n  getOnlyUserAddress,\n  deployNewSeed,\n  getSeedSales,\n  toWei,\n  approveContract,\n  getTokenRate,\n  getTokenRatio,\n  fromFixed,\n  getCoingeckoName,\n  getNetworkName,\n  getAllowance,\n  fromWei,\n  setAccessToken,\n  timeConverter,\n  substringAddress,\n  getTokenBalance,\n  getErc20Balance,\n  getErc20Symbol,\n  getNftBalance,\n  erc721Abi,\n  erc4671Abi,\n  ZERO_ADDRESS,\n  getTokenAddressFromDealsConfig,\n  retrieveIndex,\n  getAddress,\n  getDeploymentFeeFromAbi,\n  getTokenAFee,\n  getTokenBFee,\n  chainNameToIdMapper,\n  chainIdToNameMapper,\n  getErc20Decimals,\n  toWeiWithDecimals,\n  fromWeiWithDecimals,\n  getTotalPages,\n} from \"../../../../../src/components/templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport { SeedCard } from \"./SeedCard.js\";\nimport axios from \"axios\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { Tab } from \"react-bootstrap\";\nimport { families } from \"detect.js\";\nimport { ErrorMessage } from \"formik\";\n\nexport function SeedContainer({ seedsPerPage, indexHistory, setIndexHistory, activeContract, setActiveContract, chainQueryParam, setChainQueryParam }) {\n  const { currentAccount, setCurrentAccount, isWalletEnabled, chainId, nativeTokenName, nativeBalance, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator } = useContext(WalletContext);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState();\n\n  const [wrongChainError, setWrongChainError] = useState(\"\");\n  const [offeredTokenBalance, setOfferedTokenBalance] = useState();\n  const [acceptedTokenBalance, setAcceptedTokenBalance] = useState();\n  const [tokenASymbol, setTokenASymbol] = useState();\n  const [tokenBSymbol, setTokenBSymbol] = useState();\n  const [tokenADecimals, setTokenADecimals] = useState();\n  const [tokenBDecimals, setTokenBDecimals] = useState();\n\n  const [accessTokenDecimals, setAccessTokenDecimals] = useState();\n\n  const [deploymentFee, setDeploymentFee] = useState();\n  const [defaultTokenAFee, setDefaultTokenAFee] = useState();\n  const [defaultTokenBFee, setDefaultTokenBFee] = useState();\n\n  const [createdTag, setCreatedTag] = useState();\n\n  const [salesLoading, setSalesLoading] = useState(false);\n\n  //const [userAddress, setUserAddress] = useState();\n  const [notEnoughTokensAError, setNotEnoughTokensAError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const [successMessage, setSuccessMessage] = useState([\"none\"]);\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [cardVisible, setCardVisible] = useState(false);\n  const [dealsVisible, setDealsVisible] = useState(true);\n  const [formVisible, setFormVisible] = useState(false);\n\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const [nativeTokenUsed, setNativeTokenUsed] = useState(true);\n  const [isListedCustomTokenUsed, setIsListedCustomTokenUsed] = useState(true); // for example if USDC, USDT are used\n  const [selectedTokenKey, setSelectedTokenKey] = useState(\"native\");\n  const [stablesUsed, setStablesUsed] = useState(true);\n  const [maxRaise, setMaxRaise] = useState();\n  const [visibility, setVisibility] = useState(\"public\");\n\n  const [acceptedTokenAddress, setAcceptedTokenAddress] = useState();\n  const [requireKyc, setRequireKyc] = useState(false);\n\n  const [offeredTokenAddress, setOfferedTokenAddress] = useState();\n  const [tokenAmount, setTokenAMount] = useState();\n  const [rate, setRate] = useState();\n  const [convertedRate, setConvertedRate] = useState();\n  const [seedSalesData, setSeedSalesData] = useState();\n  const [seedIndex, setSeedIndex] = useState();\n  const [allowance, setAllowance] = useState();\n  const [vestingEnabled, setVestingEnabled] = useState(false);\n\n  const [accessMechanism, setAccessMechanism] = useState(\"open\");\n  const [distributionMechanism, setDistributionMechanism] = useState(\"instant\");\n  const [lockDuration, setLockDuration] = useState(0);\n\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState(\"\");\n  const [capsForWhitelistedAddresses, setcapsForWhitelistedAddresses] = useState(\"\");\n  const [whitelistError, setWhitelistError] = useState(false);\n  const [nftCap, setNftCap] = useState(0);\n  const [nttCap, setNttCap] = useState(0);\n\n  const [nftAddress, setAccessNftAddress] = useState(\"\");\n  const [nttAddress, setAccessNttAddress] = useState(\"\");\n\n  const [accessTokenAddress, setAccessTokenAddress] = useState(\"\");\n  const [accessTokenAmountTier1, setAccessTokenAmountTier1] = useState(0);\n  const [accessTokenAmountTier2, setAccessTokenAmountTier2] = useState(0);\n  const [accessTokenAmountTier3, setAccessTokenAmountTier3] = useState(0);\n  const [accessTokenAmountTier4, setAccessTokenAmountTier4] = useState(0);\n  const [tier1Cap, setTier1Cap] = useState(0); //needs to be initialized to zero as toWei fails because of undefined\n  const [tier2Cap, setTier2Cap] = useState(0);\n  const [tier3Cap, setTier3Cap] = useState(0);\n  const [tier4Cap, setTier4Cap] = useState(0);\n\n  const [startTime, setStartTime] = useState(\"0\");\n  const [endTime, setEndTime] = useState(parseInt(parseInt(Date.now() / 1000 + 60 * 60 * 3).toString())); //3hrs from now\n\n  const [cliffDuration, setCliffDuration] = useState(5184000);\n  const [vestingDuration, setVestingDuration] = useState(5184000);\n  const [percentageVested, setPercentageVested] = useState(100);\n\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(seedsPerPage);\n\n  function handlePageChange(page) {\n    async function loadCurrentPageData(goingForward) {\n      setSeedSalesData([]);\n      setSalesLoading(true);\n      goingForward\n        ? setSeedSalesData(\n            await getSeedSales(\n              currentAccount,\n              Seed.abi,\n              SeedFactory.abi,\n              getAddress(chainId, \"seedFactoryAddress\"),\n              ERC20.abi,\n              activeContract,\n              seedsPerPage,\n              setTotalPages,\n              setCurrentPage,\n              startIndex,\n              endIndex,\n              setStartIndex,\n              setEndIndex,\n              indexHistory,\n              setIndexHistory\n            )\n          )\n        : setSeedSalesData(\n            await getSeedSales(\n              currentAccount,\n              Seed.abi,\n              SeedFactory.abi,\n              getAddress(chainId, \"seedFactoryAddress\"),\n              ERC20.abi,\n              activeContract,\n              seedsPerPage,\n              setTotalPages,\n              setCurrentPage,\n              indexHistory[page - 1].startIndex,\n              indexHistory[page - 1].endIndex,\n              setStartIndex,\n              setEndIndex,\n              indexHistory,\n              setIndexHistory\n            )\n          );\n      setSalesLoading(false);\n    }\n\n    if (page > currentPage) {\n      setCurrentPage(page);\n      loadCurrentPageData(true);\n      console.log(\"start end forwARD\", indexHistory, indexHistory[page - 1]);\n    } else {\n      setCurrentPage(page);\n      loadCurrentPageData(false);\n      console.log(\"start end BACKWARD\", indexHistory, indexHistory[page - 1]);\n    }\n  }\n\n  useEffect(() => {\n    if (whitelistedAddresses.split(\",\").length - 1 != capsForWhitelistedAddresses.split(\",\").length - 1) {\n      setWhitelistError(true);\n    } else {\n      setWhitelistError(false);\n    }\n  }, [whitelistedAddresses, capsForWhitelistedAddresses]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && activeContract != null && currentAccount != null && typeof seedIndex == \"undefined\") {\n      async function getIndex() {\n        //setSeedIndex(await retrieveIndex(SeedFactory.abi, seedFactoryAddress, activeContract.toLocaleLowerCase()));\n      }\n      getIndex();\n    }\n  }, [isWalletEnabled, currentAccount, activeContract]);\n  useEffect(() => {\n    if (title.length > 50) {\n      setTitleError(\"Maximum Title length is 50 charachters\");\n    } else if (title.length == 0) {\n      //setTitleError(\"Please enter value for Title\");\n    } else {\n      setTitleError(false);\n    }\n  }, [title]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && currentAccount != null) {\n      async function loadCurrentPageData() {\n        //setSalesLoading(true);\n        //setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract, seedsPerPage, setTotalPages, setCurrentPage, startIndex,endIndex,setStartIndex,setEndIndex));\n        //setSalesLoading(false);\n      }\n      loadCurrentPageData();\n    }\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && currentAccount != null) {\n      async function loadSeedSales() {\n        console.log(\"active acc dds\", activeContract, seedIndex, typeof activeContract, typeof seedIndex, activeContract);\n        //setTotalPages(await getTotalPages(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), seedsPerPage));\n        setDeploymentFee(await getDeploymentFeeFromAbi(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\")));\n        setDefaultTokenAFee(await getTokenAFee(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\")));\n        setDefaultTokenBFee(await getTokenBFee(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\")));\n        if (!activeContract) {\n          console.log(\"active acc 1\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(\n            await getSeedSales(\n              currentAccount,\n              Seed.abi,\n              SeedFactory.abi,\n              getAddress(chainId, \"seedFactoryAddress\"),\n              ERC20.abi,\n              activeContract,\n              seedsPerPage,\n              setTotalPages,\n              setCurrentPage,\n              startIndex,\n              endIndex,\n              setStartIndex,\n              setEndIndex,\n              indexHistory,\n              setIndexHistory\n            )\n          );\n          setSalesLoading(false);\n        } else if (activeContract) {\n          console.log(\"active acc 2\", activeContract, seedIndex, typeof activeContract, typeof seedIndex, chainQueryParam, chainId, chainNameToIdMapper(chainQueryParam), chainNameToIdMapper(chainQueryParam) == chainId);\n          // if chainId from queryParams differs from the chainId then\n          // stop the loading\n          // show the error\n          if (chainNameToIdMapper(chainQueryParam) != chainId) {\n            setSalesLoading(false);\n            setWrongChainError(`Please change your chain to ${chainQueryParam}`);\n          } else {\n            setSalesLoading(true);\n            setSeedSalesData(\n              await getSeedSales(\n                currentAccount,\n                Seed.abi,\n                SeedFactory.abi,\n                getAddress(chainId, \"seedFactoryAddress\"),\n                ERC20.abi,\n                activeContract,\n                seedsPerPage,\n                setTotalPages,\n                setCurrentPage,\n                startIndex,\n                endIndex,\n                setStartIndex,\n                setEndIndex,\n                indexHistory,\n                setIndexHistory\n              )\n            );\n            setSalesLoading(false);\n          }\n        }\n      }\n      loadSeedSales();\n    }\n  }, [isWalletEnabled, currentAccount, refetchData, seedIndex, activeContract]);\n\n  useEffect(() => {\n    if (Number(offeredTokenBalance) < Number(tokenAmount) && typeof offeredTokenAddress !== \"undefined\" && offeredTokenAddress !== \"\") {\n      setNotEnoughTokensAError(\"You don't have enough offered tokens (A) in your balance to launch a deal successfully\");\n    } else {\n      setNotEnoughTokensAError(false);\n    }\n  }, [offeredTokenBalance, offeredTokenAddress, tokenAmount]);\n\n  useEffect(() => {\n    console.log(\"allowance \", allowance, offeredTokenAddress);\n    async function loadData() {\n      if (typeof offeredTokenAddress !== \"undefined\" && offeredTokenAddress !== \"\") {\n        console.log(\"balance1, \", await getErc20Balance(currentAccount, offeredTokenAddress));\n        getAllowance(setAllowance, getAddress(chainId, \"seedFactoryAddress\"), currentAccount, ERC20.abi, offeredTokenAddress);\n        setOfferedTokenBalance(await getErc20Balance(currentAccount, offeredTokenAddress));\n        setTokenASymbol(await getErc20Symbol(offeredTokenAddress));\n        setTokenADecimals(await getErc20Decimals(offeredTokenAddress));\n      } else {\n        setOfferedTokenBalance(0);\n        setTokenASymbol(\"\");\n      }\n    }\n    loadData();\n  }, [offeredTokenAddress]);\n\n  useEffect(() => {\n    async function loadDataForAcceptedTokenAddress() {\n      console.log(\"balance2\", currentAccount, acceptedTokenAddress, typeof acceptedTokenAddress, typeof acceptedTokenAddress !== \"undefined\" && acceptedTokenAddress !== \"\");\n      if (typeof acceptedTokenAddress !== \"undefined\" && acceptedTokenAddress !== \"\") {\n        setAcceptedTokenBalance(await getErc20Balance(currentAccount, acceptedTokenAddress));\n        setTokenBSymbol(await getErc20Symbol(acceptedTokenAddress));\n        setTokenBDecimals(await getErc20Decimals(acceptedTokenAddress));\n      }\n    }\n    loadDataForAcceptedTokenAddress();\n  }, [acceptedTokenAddress]);\n\n  useEffect(() => {\n    async function loadDataForAccessTokenAddress() {\n      if (typeof accessTokenAddress !== \"undefined\" && accessTokenAddress !== \"\") {\n        setAccessTokenDecimals(await getErc20Decimals(accessTokenAddress));\n      }\n    }\n    loadDataForAccessTokenAddress();\n  }, [accessTokenAddress]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        //setConvertedRate(getTokenRate(response.data[0].current_price, rate));\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [rate]);\n\n  useEffect(() => {\n    async function calculateConvertedRate() {\n      if (isWalletEnabled) {\n        setConvertedRate(await getTokenRatio(tokenAmount, maxRaise));\n      }\n    }\n    calculateConvertedRate();\n  }, [tokenAmount, maxRaise]);\n\n  async function handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddressArg) {\n    let acceptedTokenAddress;\n\n    if (acceptedTokenAddressArg == \"\" || typeof acceptedTokenAddressArg == \"undefined\") {\n      acceptedTokenAddress = ZERO_ADDRESS;\n    } else {\n      acceptedTokenAddress = acceptedTokenAddressArg;\n    }\n\n    console.log(\"convertedRate\", rate, convertedRate, fromFixed(convertedRate), offeredTokenAddress, tokenAmount, acceptedTokenAddress);\n    setSuccessMessage([\"none\"]);\n    setErrorMessage();\n    let createdContract = await deployNewSeed(\n      currentAccount,\n      offeredTokenAddress,\n      acceptedTokenAddress,\n      SeedFactory.abi,\n      Seed.abi,\n      getAddress(chainId, \"seedFactoryAddress\"),\n      toWeiWithDecimals(tokenAmount, tokenADecimals),\n      convertedRate,\n      lockDuration,\n      cliffDuration,\n      vestingDuration,\n      percentageVested,\n      startTime,\n      endTime,\n      accessTokenAddress,\n      toWeiWithDecimals(accessTokenAmountTier1, accessTokenDecimals),\n      toWeiWithDecimals(accessTokenAmountTier2, accessTokenDecimals),\n      toWeiWithDecimals(accessTokenAmountTier3, accessTokenDecimals),\n      toWeiWithDecimals(accessTokenAmountTier4, accessTokenDecimals),\n      toWeiWithDecimals(tier1Cap, tokenBDecimals),\n      toWeiWithDecimals(tier2Cap, tokenBDecimals),\n      toWeiWithDecimals(tier3Cap, tokenBDecimals),\n      toWeiWithDecimals(tier4Cap, tokenBDecimals),\n      title + \"§!§\" + url,\n      accessMechanism,\n      whitelistedAddresses,\n      capsForWhitelistedAddresses,\n      tokenADecimals,\n      nftAddress,\n      toWeiWithDecimals(nftCap, tokenBDecimals),\n      requireKyc,\n      getAddress(chainId, \"nttAddress\"),\n      toWeiWithDecimals(nttCap, tokenBDecimals),\n      distributionMechanism,\n      visibility,\n      [\"none\"],\n      setLoadingIndicator,\n      [\"none\"],\n      setSuccessMessage,\n      setErrorMessage\n    );\n    setCreatedTag(createdContract);\n  }\n\n  function handleSeedClick(index, seedAddress) {\n    console.log(\"seed index \", index);\n    setSeedSalesData(); // this needs to be here because of caching performance issue\n\n    setSeedIndex(index);\n    setCardVisible(true);\n    setDealsVisible(false);\n    setActiveContract(seedAddress);\n    setChainQueryParam(chainIdToNameMapper(chainId));\n  }\n  async function handleLauncherApprove() {\n    await approveContract(currentAccount, ERC20.abi, offeredTokenAddress, getAddress(chainId, \"seedFactoryAddress\"));\n  }\n\n  function getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) {\n    let count = 2;\n    if (accessMechanism != \"open\") {\n      count++;\n    }\n    if (distributionMechanism != \"instant\") {\n      count++;\n    }\n    if (visibility == \"public\") {\n      count++;\n    }\n    if (requireKyc) {\n      count++;\n    }\n    return count;\n  }\n\n  function getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1) {\n    console.log(\"eligible \", accessMechanism);\n    if (accessMechanism == \"open\") {\n      return (\n        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n          <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>Open Access</div>\n          {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n        </div>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      if (capPerAddressEnabled && capPerAddress > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"nft-gate\") {\n      if (nftBalance > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"ntt-gate\") {\n      if (nttBalance > 0 && hasValidNtt) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      if (Number(fromWeiWithDecimals(accessTokenBalance, accessTokenDecimals)) >= Number(fromWeiWithDecimals(tier1, accessTokenDecimals))) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 7 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    }\n  }\n\n  function isErrorInDistributionMechanism(distributionMechanism, lockDuration, cliffDuration, vestingDuration) {\n    if (distributionMechanism == \"instant\") {\n      return false;\n    } else if (distributionMechanism == \"lock\") {\n      if (lockDuration != 0 && lockDuration != \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    } else if (distributionMechanism == \"linear-vesting\") {\n      if (cliffDuration != 0 && cliffDuration != \"\" && vestingDuration != 0 && cliffDuration != 0) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n  function isErrorInAccessMechanism(accessMechanism, whitelistedAddresses, capsForWhitelistedAddresses, nftAddress, nftCap, nttAddress, nttCap, accessTokenAddress, tier1, tier2, tier3, tier4, tier1Cap, tier2Cap, tier3Cap, tier4Cap) {\n    function checkTiersValidity(tier1, tier2, tier3, tier4) {\n      if (Number(tier1) < Number(tier2) && Number(tier2) < Number(tier3) && Number(tier3) < Number(tier4)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    function checkTierCapsValidity(tier1Cap, tier2Cap, tier3Cap, tier4Cap) {\n      if (Number(tier1Cap) < Number(tier2Cap) && Number(tier2Cap) < Number(tier3Cap) && Number(tier3Cap) < Number(tier4Cap)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    if (accessMechanism == \"open\") {\n      return false;\n    } else if (accessMechanism == \"whitelist\") {\n      if (whitelistedAddresses != \"\" && capsForWhitelistedAddresses != \"\" && whitelistedAddresses.split(\",\").length - 1 == capsForWhitelistedAddresses.split(\",\").length - 1) {\n        return false;\n      } else if (whitelistedAddresses == \"\" || capsForWhitelistedAddresses == \"\" || whitelistedAddresses.split(\",\").length - 1 != capsForWhitelistedAddresses.split(\",\").length - 1) {\n        return true;\n      }\n    } else if (accessMechanism == \"nft-gate\") {\n      if (nftAddress != \"\" && nftCap != \"\" && nftCap != 0) {\n        return false;\n      } else if (nftAddress == \"\" || nftCap == \"\" || nftCap == 0) {\n        return true;\n      }\n    } else if (accessMechanism == \"ntt-gate\") {\n      if (nttAddress != \"\" && nttCap != \"\" && nttCap != 0) {\n        return false;\n      } else if (nttAddress == \"\" || nttCap == \"\" || nttCap == 0) {\n        return true;\n      }\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      if (\n        accessTokenAddress != \"\" &&\n        tier1 != \"\" &&\n        tier1 != 0 &&\n        tier2 != \"\" &&\n        tier2 != 0 &&\n        tier3 != \"\" &&\n        tier3 != 0 &&\n        tier4 != \"\" &&\n        tier4 != 0 &&\n        tier1Cap != \"\" &&\n        tier1Cap != 0 &&\n        tier2Cap != \"\" &&\n        tier2Cap != 0 &&\n        tier3Cap != \"\" &&\n        tier3Cap != 0 &&\n        tier4Cap != \"\" &&\n        tier4Cap != 0 &&\n        checkTiersValidity(tier1, tier2, tier3, tier4) &&\n        checkTierCapsValidity(tier1Cap, tier2Cap, tier3Cap, tier4Cap)\n      ) {\n        return false;\n      } else if (\n        accessTokenAddress == \"\" ||\n        tier1 == \"\" ||\n        tier1 == 0 ||\n        tier2 == \"\" ||\n        tier2 == 0 ||\n        tier3 == \"\" ||\n        tier3 == 0 ||\n        tier4 == \"\" ||\n        tier4 == 0 ||\n        tier1Cap == \"\" ||\n        tier1Cap == 0 ||\n        tier2Cap == \"\" ||\n        tier2Cap == 0 ||\n        tier3Cap == \"\" ||\n        tier3Cap == 0 ||\n        tier4Cap == \"\" ||\n        tier4Cap == 0 ||\n        !checkTiersValidity(tier1, tier2, tier3, tier4) ||\n        !checkTierCapsValidity(tier1Cap, tier2Cap, tier3Cap, tier4Cap)\n      ) {\n        return true;\n      }\n    }\n  }\n\n  function getVisibilityStatus(visiblityStatus, currentAccount) {\n    if (visiblityStatus == true) {\n      return <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Public</div>;\n    } else if (visiblityStatus == false) {\n      return <div style={{ background: \"#444444\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>;\n    }\n  }\n\n  function getAccessStatus(accessMechanism) {\n    if (accessMechanism == \"open\") {\n      return <span>Open to anyone</span>;\n    } else if (accessMechanism == \"whitelist\") {\n      return <span>Whitelisted addresses</span>;\n    } else if (accessMechanism == \"nft-gate\") {\n      return <span>NFT Gated</span>;\n    } else if (accessMechanism == \"ntt-gate\") {\n      return <span>NTT Gated</span>;\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      return <span>Token Gated With Tiers</span>;\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleOfferedTokenAddress(data) {\n    console.log(\"data \", data.target.getAttribute(\"data-token\"));\n    let offeredTokenKey = data.target.getAttribute(\"data-token\");\n    setSelectedTokenKey(offeredTokenKey);\n    if (offeredTokenKey == \"custom\") {\n      setAcceptedTokenBalance(0);\n      setTokenBSymbol(\"\");\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(false);\n      setNativeTokenUsed(false);\n    } else if (offeredTokenKey == \"native\") {\n      setNativeTokenUsed(true);\n      setAcceptedTokenBalance(0);\n      setTokenBSymbol(\"\");\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(true);\n    } else {\n      setIsListedCustomTokenUsed(true);\n      setAcceptedTokenBalance(0);\n      setTokenBSymbol(\"\");\n      setAcceptedTokenAddress(getTokenAddressFromDealsConfig(chainId, offeredTokenKey));\n      setNativeTokenUsed(false);\n    }\n  }\n\n  function handleKycCheckbox(requireKyc) {\n    setNttCap(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn);\n    setRequireKyc(!requireKyc);\n  }\n\n  return (\n    <div style={{ width: \"90%\" }}>\n      {console.log(\"isVestingenabled  \", typeof vestingEnabled, vestingEnabled)}\n      {console.log(\"converted rate \", convertedRate)}\n      {console.log(\"trx- \", successMessage)}\n      {formVisible && (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n          <div onClick={() => setFormVisible(false)} style={{ cursor: \"pointer\", paddingBottom: 0 }}>\n            <h3>← Go Back</h3>\n          </div>\n          <div style={{ margin: \"0 auto\", width: \"70%\", marginTop: \"25px\", border: \"1px solid whitesmoke\" }}>\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                {\" \"}\n                <h2>Deal Title</h2>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <input name=\"title\" onChange={target => typeof target.target.value !== \"undefined\" && setTitle(target.target.value)} value={title} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"80%\" }}></input>{\" \"}\n              </div>\n              <br></br>\n              <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                {\" \"}\n                <h2>Project URL</h2>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <input name=\"url\" onChange={target => typeof target.target.value !== \"undefined\" && setUrl(target.target.value)} value={url} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"80%\" }}></input>{\" \"}\n              </div>\n              <br></br>\n              <div style={{ background: \"#4f4fc8\", paddingRight: 70 }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Tokens</h2>\n                </div>\n\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <label for=\"offered-erc20-token-address\">Offered Token (A) Address:</label>\n                      </TableD>\n\n                      <TableD>\n                        <label for=\"emitted-token-amount\">Offered Token (A) Amount: </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input\n                          name=\"offered-erc20-token-address\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setOfferedTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={offeredTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}\n                        ></input>{\" \"}\n                      </TableD>\n\n                      <TableD>\n                        <input\n                          name=\"accepted-token-amount\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setTokenAMount(target.target.value.toLocaleLowerCase())}\n                          value={tokenAmount}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                        ></input>{\" \"}\n                        <br></br>\n                        Balance: {parseFloat(offeredTokenBalance).toFixed(2)} {tokenASymbol}\n                      </TableD>\n                    </TableR>\n                    <br></br>\n                    <TableR>\n                      <TableD>\n                        <label for=\"accepted-token-address\">Accepted Token (B):</label>\n                      </TableD>\n\n                      <TableD>\n                        <label for=\"\">Accepted Token (B) Amount: </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      {\n                        <TableD visibility={isListedCustomTokenUsed ? \"hidden\" : \"visible\"} style={{ paddingLeft: 0 }}>\n                          <input name=\"accepted-token-address\" onChange={target => setAcceptedTokenAddress(target.target.value.toLocaleLowerCase())} value={acceptedTokenAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}></input>{\" \"}\n                        </TableD>\n                      }\n\n                      <TableD style={{ paddingLeft: 0 }}>\n                        <input name=\"max-raise\" onChange={target => setMaxRaise(target.target.value.toLocaleLowerCase())} value={maxRaise} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> <br></br>\n                        Balance: {selectedTokenKey == \"native\" ? `${parseFloat(nativeBalance).toFixed(2)} ${nativeTokenName}` : `${parseFloat(acceptedTokenBalance).toFixed(2)} ${tokenBSymbol}`}\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\n                          <TableLabel\n                            selected={selectedTokenKey == \"native\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"native\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            {nativeTokenName}\n                          </TableLabel>\n                          {false && (\n                            <TableLabel\n                              selected={selectedTokenKey == \"usdc\"}\n                              onClick={e => handleOfferedTokenAddress(e)}\n                              data-token=\"usdc\"\n                              style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                            >\n                              USDC\n                            </TableLabel>\n                          )}\n                          {false && (\n                            <TableLabel\n                              selected={selectedTokenKey == \"usdt\"}\n                              onClick={e => handleOfferedTokenAddress(e)}\n                              data-token=\"usdt\"\n                              style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                            >\n                              USDT\n                            </TableLabel>\n                          )}\n                          <TableLabel\n                            selected={selectedTokenKey == \"dai\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"dai\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            DAI\n                          </TableLabel>\n                          <TableLabel\n                            selected={selectedTokenKey == \"frax\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"frax\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            FRAX\n                          </TableLabel>\n                          {(chainId == \"0x89\" || chainId == \"0x13881\" || chainId == \"0x7a69\") && (\n                            <TableLabel\n                              selected={selectedTokenKey == \"shn\"}\n                              onClick={e => handleOfferedTokenAddress(e)}\n                              data-token=\"shn\"\n                              style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                            >\n                              SHN\n                            </TableLabel>\n                          )}\n                          <TableLabel\n                            selected={selectedTokenKey == \"custom\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"custom\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            Custom Address\n                          </TableLabel>\n                        </div>\n                      </TableD>\n                    </TableR>\n                  </table>\n\n                  <br></br>\n                </div>\n\n                <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\" }}>\n                  <label for=\"rate\">Token Rate A/B </label>\n\n                  {false && (\n                    <input\n                      name=\"rate\"\n                      onChange={target => typeof target.target.value !== \"undefined\" && setRate(target.target.value.toLocaleLowerCase())}\n                      value={rate}\n                      style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"69%\", float: \"right\" }}\n                    ></input>\n                  )}\n                  <h4>{fromFixed(convertedRate)}</h4>\n                </div>\n                <br></br>\n                {notEnoughTokensAError && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Text color=\"tomato\">{notEnoughTokensAError}</Text>\n                    <br></br>\n                  </div>\n                )}\n                {titleError && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Text color=\"tomato\">{titleError}</Text>\n                    <br></br>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Schedule</h2>\n                </div>\n\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        <label for=\"start-time\">Start Timestamp (Unix):</label> \n                      </TableD>\n                      <TableD>\n                        <label for=\"end-time\">End Timestamp: (Unix):</label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"start-time\" onChange={target => setStartTime(target.target.value.toLocaleLowerCase())} value={startTime == 0 ? \"Now\" : startTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"end-time\" onChange={target => setEndTime(target.target.value.toLocaleLowerCase())} value={endTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                    </TableR>\n                  </table>\n                  <div style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}>\n                    You will be able to claim remaining Offered Tokens (A) after the End Timestamp, Accepted Token (B) will be sent to your address immediately.<br></br>\n                    <br></br>\n                  </div>\n                </div>\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Access</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"open\"} value=\"open\" name=\"access\" /> Open\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"whitelist\"} value=\"whitelist\" name=\"access\" /> Whitelist\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"nft-gate\"} value=\"nft-gate\" name=\"access\" /> NFT Gate{\" \"}\n                      </td>\n\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"token-gate-tiers\"} value=\"token-gate-tiers\" name=\"access\" /> Token Gate{\" \"}\n                      </td>\n\n                      {false && (\n                        <td>\n                          <input type=\"checkbox\" checked={requireKyc} onChange={() => handleKycCheckbox(requireKyc)} /> Require KYC{\" \"}\n                        </td>\n                      )}\n                    </div>\n                  </TableR>\n                  {accessMechanism == \"whitelist\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD> Whitelist Addresses (comma separated) </TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input name=\"whitelist-addresses\" onChange={target => setWhitelistedAddresses(target.target.value.toLocaleLowerCase())} value={whitelistedAddresses} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>Token (B) Cap/Address (comma separated)</TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input\n                              name=\"whitelisted-addresses-cap\"\n                              onChange={target => setcapsForWhitelistedAddresses(target.target.value.toLocaleLowerCase())}\n                              value={capsForWhitelistedAddresses}\n                              style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                            ></input>\n                          </TableD>\n                        </TableR>\n                      </table>\n                      {whitelistError && (\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                          <Text color=\"tomato\"> There is a missmatch between a number of Addresses and number of Caps/Address</Text>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {accessMechanism == \"nft-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <label for=\"NFT-address\">NFT Address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNftAddress(target.target.value.toLocaleLowerCase())} value={nftAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>Token (B) Cap/Address</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-cap\" onChange={target => setNftCap(target.target.value.toLocaleLowerCase())} value={nftCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n                  {accessMechanism == \"ntt-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <label for=\"NFT-address\">Enter NTT address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNttAddress(target.target.value.toLocaleLowerCase())} value={nttAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>NTT Cap</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NTT-cap\" onChange={target => setNttCap(target.target.value.toLocaleLowerCase())} value={nttCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n\n                  {accessMechanism == \"token-gate-tiers\" && (\n                    <div style={{ paddingBottom: 20 }}>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"access-token-address\">Access Token Address: </label>\n                        <input\n                          name=\"access-token-address\"\n                          onChange={target => setAccessTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"52%\", float: \"right\" }}\n                        ></input>{\" \"}\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-1-access-token\">Tier 1 needs: </label>\n                        <input\n                          name=\"tier-1-access-token\"\n                          onChange={target => setAccessTokenAmountTier1(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier1}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-1-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-1-max-contribution\" onChange={target => setTier1Cap(target.target.value.toLocaleLowerCase())} value={tier1Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-2-access-token\">Tier 2 needs: </label>\n                        <input\n                          name=\"tier-2-access-token\"\n                          onChange={target => setAccessTokenAmountTier2(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier2}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-2-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-2-max-contribution\" onChange={target => setTier2Cap(target.target.value.toLocaleLowerCase())} value={tier2Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-3-access-token\">Tier 3 needs: </label>\n                        <input\n                          name=\"tier-3-access-token\"\n                          onChange={target => setAccessTokenAmountTier3(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier3}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-3-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-3-max-contribution\" onChange={target => setTier3Cap(target.target.value.toLocaleLowerCase())} value={tier3Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-4-access-token\">Tier 4 needs:</label>\n                        <input\n                          name=\"tier-4-access-token\"\n                          onChange={target => setAccessTokenAmountTier4(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier4}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-4-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-4-max-contribution\" onChange={target => setTier4Cap(target.target.value.toLocaleLowerCase())} value={tier4Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                      </div>\n                    </div>\n                  )}\n                </table>\n              </div>\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Distribution</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }} onChange={event => setDistributionMechanism(event.target.value)}>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"instant\"} value=\"instant\" name=\"distribution\" /> Instant\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"lock\"} value=\"lock\" name=\"distribution\" /> Lock\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"linear-vesting\"} value=\"linear-vesting\" name=\"distribution\" /> Linear Vesting\n                      </TableD>\n                    </div>\n                  </TableR>\n                </table>\n                {distributionMechanism == \"instant\" && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    All tokens are released instantly<br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"lock\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Lock Duration (in seconds)</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"lock-duration\" onChange={target => setLockDuration(target.target.value.toLocaleLowerCase())} value={lockDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      {percentageVested}% of the tokens are going to be locked for {lockDuration} seconds&nbsp; {percentageVested < 100 && <span>and {100 - percentageVested}% are going to be released immediatly.</span>}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"linear-vesting\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Cliff Duration (in seconds)</TableD>\n                        <TableD>Vest Duration (in seconds)</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider width=\"120px\" type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"cliff-timestamp\" onChange={target => setCliffDuration(target.target.value.toLocaleLowerCase())} value={cliffDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"vesting-duration\" onChange={target => setVestingDuration(target.target.value.toLocaleLowerCase())} value={vestingDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\" }}>\n                      {percentageVested < 100 && <span style={{ textAlign: \"center\" }}>{100 - percentageVested}% are going to be released immediatly while</span>}\n                      <span style={{ textAlign: \"center\" }}>\n                        {percentageVested}% of the tokens are going to be locked over Cliff Duration of {cliffDuration} seconds and vested linearly over Vesting Duration of {vestingDuration} seconds.{\" \"}\n                      </span>\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Listing</h2>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }} onChange={event => setVisibility(event.target.value)}>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"public\"} value=\"public\" name=\"visibility\" /> Public\n                  </td>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"private\"} value=\"private\" name=\"visibility\" /> Private\n                  </td>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>{visibility == \"public\" ? \"Deal is going to be listed on the main page and also accessible via a generated link\" : \"Deal is only going to be accessible via a generated link\"}</div>\n              </div>\n\n              <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\", paddingBottom: 10, paddingTop: 8 }}>\n                <div style={{ marginBottom: \"15px\" }}> You have in total {getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) + 1} transactions to confirm:</div>\n                <div>\n                  {\" \"}\n                  <span>- transaction to deploy the deal contract</span> {console.log(\"loading indicator 321\", loadingIndicator, loadingIndicator.includes(\"deploy-0\"))}\n                  {loadingIndicator.includes(\"deploy-0\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-0-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {accessMechanism != \"open\" && <span>- transaction to set up the access mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-1\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-1-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {requireKyc && <span>- transaction to set up the kyc module</span>}\n                  {loadingIndicator.includes(\"deploy-2\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-2-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {distributionMechanism != \"instant\" && <span>- transaction to set up the distribution mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-3\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-3-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {visibility != \"private\" && <span>- transaction to set up the deal visibility</span>}\n                  {loadingIndicator.includes(\"deploy-4\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-4-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to approve the created contract</span>\n                  {loadingIndicator.includes(\"deploy-5\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-5-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to send tokens to a smart contract</span>\n                  {loadingIndicator.includes(\"deploy-6\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-6-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <br></br>\n                <div>{errorMessage && <Text color=\"tomato\">{errorMessage.toString()}</Text>}</div>\n                <br></br>\n                <div style={{ textAlign: \"center\" }}>\n                  {createdTag && (\n                    <Text color=\"white\" fontWeight={300} fontSize=\"18px\">\n                      Your deal has been created. You can visit the deal at the following link{\" \"}\n                      <a href={`https://app.shinedao.finance/deals?tag=${createdTag}&chain=${chainIdToNameMapper(chainId)}`}>{`https://app.shinedao.finance/deals?tag=${createdTag}&chain=${chainIdToNameMapper(chainId)}`}</a>\n                    </Text>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {false && allowance == 0 && (\n        <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 20 }}>\n          <Button onClick={() => handleLauncherApprove()}>Approve Launcher</Button>\n          <br></br>\n          <br></br>\n        </div>\n      )}\n      <br></br>\n      <br></br>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {console.log(\"form visible\", formVisible)}\n        {typeof tokenAmount != \"undefined\" &&\n        typeof maxRaise !== \"undefined\" &&\n        maxRaise !== \"\" &&\n        typeof offeredTokenAddress !== \"undefined\" &&\n        offeredTokenAddress !== \"\" &&\n        acceptedTokenAddress !== \"\" &&\n        notEnoughTokensAError == false &&\n        titleError == false &&\n        tokenAmount != \"\" &&\n        !isErrorInAccessMechanism(\n          accessMechanism,\n          whitelistedAddresses,\n          capsForWhitelistedAddresses,\n          nftAddress,\n          nftCap,\n          nttAddress,\n          nttCap,\n          accessTokenAddress,\n          accessTokenAmountTier1,\n          accessTokenAmountTier2,\n          accessTokenAmountTier3,\n          accessTokenAmountTier4,\n          tier1Cap,\n          tier2Cap,\n          tier3Cap,\n          tier4Cap\n        ) &&\n        !isErrorInDistributionMechanism(distributionMechanism, lockDuration, cliffDuration, vestingDuration) &&\n        formVisible ? (\n          <Button onClick={() => handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddress)}>Launch Deal</Button>\n        ) : (\n          formVisible && <Text color=\"tomato\">Please enter correct value for all fields.</Text>\n        )}\n\n        {!salesLoading && !activeContract && isWalletEnabled && !formVisible && !cardVisible && <Button onClick={() => setFormVisible(true)}>New Deal</Button>}\n        <hr></hr>\n        {!isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n      </div>\n      {formVisible && (\n        <Text style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }} color=\"green\">\n          <br></br> Slippage: 0.0% <br></br>\n          Deployment fee: {deploymentFee} {nativeTokenName}\n          <br></br>\n          {true && (\n            <>\n              Token A swap fee: {defaultTokenAFee / 100}%<br></br>{\" \"}\n            </>\n          )}\n          {true && <>Token B swap fee: {defaultTokenBFee / 100}%</>}\n        </Text>\n      )}\n      {false && <Button onClick={() => loadSeedSales()}>Load seed sales</Button>}\n      <div style={{ margin: \"0 auto\", maxWidth: \"60%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", marginTop: 10, width: \"100vw\" }}>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n          {console.log(\"seed sales data \", seedSalesData, typeof seedSalesData == \"undefined\")}\n          {console.log(\"seed sales mapper  \", !activeContract, dealsVisible, !formVisible, !cardVisible, seedSalesData)}\n          {salesLoading && (\n            <div style={{ textAlign: \"center\" }}>\n              {\" \"}\n              <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n              <Text>Loading chain data...</Text>\n            </div>\n          )}\n          {wrongChainError != \"\" && <Text color=\"tomato\">{wrongChainError}</Text>}\n          {!activeContract &&\n            dealsVisible &&\n            !formVisible &&\n            !cardVisible &&\n            seedSalesData &&\n            seedSalesData.map(\n              (\n                {\n                  name,\n                  seedAddress,\n                  rate,\n                  offeredTokenName,\n                  offeredTokenDecimals,\n                  offeredTokenTotalSupply,\n                  offeredTokenSymbol,\n                  acceptedTokenSymbol,\n                  acceptedTokenDecimals,\n                  acceptedTokenBalance,\n                  weiRaised,\n                  dealVisibility,\n                  startTime,\n                  endTime,\n                  acceptedTokenAddress,\n                  accessMechanism,\n                  distributionMechanism,\n                  offeredTokenAddress,\n                  percentageVested,\n                  cliffDuration,\n                  vestingDuration,\n                  cliffPeriod,\n                  vestingPeriod,\n                  vestedBalance,\n                  capPerAddressEnabled,\n                  capPerAddress,\n                  accessNFT,\n                  accessNTT,\n                  accessToken,\n                  totalOffered,\n                  tier1,\n                  tier2,\n                  tier3,\n                  tier4,\n                  tier1Cap,\n                  tier2Cap,\n                  tier3Cap,\n                  tier4Cap,\n                  accessTokenSymbol,\n                  accessTokenBalance,\n                  accessTokenDecimals,\n                  capForNTT,\n                  capForNFT,\n                  nftBalance,\n                  nttBalance,\n                  hasValidNtt,\n                  kycEnabled,\n                },\n                index\n              ) => {\n                if (dealVisibility === true && totalOffered != 0) {\n                  return (\n                    <Card\n                      key={index}\n                      flexDirection=\"column\"\n                      alignItems=\"flex-start\"\n                      margin=\"10px 10px 20px 10px\"\n                      padding=\"10px 0px 0px 20px\"\n                      clickable=\"true\"\n                      border=\"1px solid white\"\n                      width=\"320px\"\n                      height=\"420px\"\n                      background={\"black\"}\n                      index={index}\n                      onClick={() => handleSeedClick(index, seedAddress)}\n                    >\n                      <div>\n                        {getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1)}\n                        {false && <div>{getVisibilityStatus(dealVisibility, currentAccount)} </div>}\n                      </div>\n                      <h2>{name.split(\"§!§\")[0]}</h2>\n                      <div style={{ maxWidth: \"284px\" }}>\n                        {name.split(\"§!§\").length > 1 && ( // this line is here for older contracts that didnt have §!§\n                          <a style={{ color: \"#3bff3b\" }} target=\"_blank\" href={`${name.split(\"§!§\")[name.split(\"§!§\").length - 1]}`}>\n                            {name.split(\"§!§\")[name.split(\"§!§\").length - 1]}\n                          </a>\n                        )}\n                      </div>\n                      <br></br>\n                      {false && (\n                        <div>\n                          - {offeredTokenName} - {acceptedTokenSymbol} - {fromWeiWithDecimals(weiRaised, acceptedTokenDecimals)}\n                        </div>\n                      )}\n                      {weiRaised && (\n                        <div>\n                          <span>Sale progress: {(((weiRaised * fromFixed(rate)) / totalOffered) * 100).toFixed(2)}% </span>\n                          <ProgressBar style={{ width: 280, marginBottom: 20 }} animated striped variant=\"success\" now={((weiRaised * fromFixed(rate)) / totalOffered) * 100} label={`${(((weiRaised * fromFixed(rate)) / totalOffered) * 100).toFixed(2)}%`} />\n                        </div>\n                      )}\n                      <div>\n                        <b>Tokens:</b>\n                        <SmallerText>\n                          {\" \"}\n                          {offeredTokenSymbol} for {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                        </SmallerText>\n                      </div>\n                      <div>\n                        {\" \"}\n                        <b>Deal size</b>{\" \"}\n                        <SmallerText>\n                          {Number.parseFloat(fromWeiWithDecimals(totalOffered, offeredTokenDecimals)).toLocaleString(undefined, { maximumFractionDigits: Number(fromFixed(rate)) > 1 ? 2 : 8 })} {offeredTokenSymbol} for max{\" \"}\n                          {Number.parseFloat(fromWeiWithDecimals(totalOffered, offeredTokenDecimals) / fromFixed(rate)).toLocaleString(undefined, {\n                            maximumFractionDigits: Number.parseFloat(fromWeiWithDecimals(totalOffered, offeredTokenDecimals) / fromFixed(rate)) > 1 ? 2 : 8,\n                          })}{\" \"}\n                          {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                        </SmallerText>\n                      </div>\n                      <div>\n                        {\" \"}\n                        <b>Rate</b>{\" \"}\n                        <SmallerText>\n                          {Number.parseFloat(fromFixed(rate)).toLocaleString(undefined, { maximumFractionDigits: Number(fromFixed(rate)) > 1 ? 2 : 8 })} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                        </SmallerText>\n                      </div>\n                      <div>\n                        <b> Start time</b> <SmallerText>{timeConverter(startTime)}</SmallerText>\n                      </div>\n                      <div>\n                        <b>End time </b>\n                        <SmallerText> {timeConverter(endTime)}</SmallerText>\n                      </div>\n                      {false && (\n                        <div>\n                          <b>Offered Token Address</b> <SmallerText>{substringAddress(offeredTokenAddress)}</SmallerText>\n                        </div>\n                      )}\n                      {false && (\n                        <div>\n                          <b>Accepted Token Address</b>\n                          <SmallerText> {substringAddress(acceptedTokenAddress)}</SmallerText>\n                        </div>\n                      )}{\" \"}\n                      {false && (\n                        <div>\n                          <b>Visibility </b>\n                          <SmallerText> {dealVisibility ? \"Public\" : \"Private\"}</SmallerText>\n                        </div>\n                      )}\n                      <div>\n                        <b>Access Type </b>\n                        <SmallerText> {getAccessStatus(accessMechanism)}</SmallerText>\n                      </div>\n                      <div>\n                        <b>Distribution Type </b>\n                        <SmallerText> {distributionMechanism}</SmallerText>\n                      </div>\n                    </Card>\n                  );\n                }\n              }\n            )}\n          {!activeContract &&\n            dealsVisible &&\n            !formVisible &&\n            !cardVisible &&\n            seedSalesData &&\n            (seedSalesData.map(({ dealVisibility, totalOffered }) => {\n              return dealVisibility === true && totalOffered != 0;\n            }).length <= 0 ||\n              typeof seedSalesData == \"undefined\") &&\n            !salesLoading && (\n              <Text>\n                <br></br>There are no remaining publicly listed deals on the selected chain.\n              </Text>\n            )}\n        </div>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>{salesLoading && !activeContract && Array.from({ length: seedsPerPage }, (value, index) => index).map(item => <SkeletonCard></SkeletonCard>)}</div>\n        {activeContract && seedSalesData && console.log(\"activeContract xxx\", activeContract, seedIndex, typeof seedIndex, seedSalesData, typeof seedSalesData)}\n        {activeContract && seedSalesData && (\n          <SeedCard\n            setSeedSalesData={setSeedSalesData}\n            setActiveContract={setActiveContract}\n            setChainQueryParam={setChainQueryParam}\n            setCardVisible={setCardVisible}\n            setDealsVisible={setDealsVisible}\n            setRefetchData={setRefetchData}\n            refetchData={refetchData}\n            getEligibilityStatus={getEligibilityStatus}\n            seedSaleData={seedSalesData && seedSalesData[activeContract ? 0 : seedIndex]}\n            indexHistory={indexHistory}\n            setStartIndex={setStartIndex}\n            setEndIndex={setEndIndex}\n          ></SeedCard>\n        )}\n\n        {!activeContract && !formVisible && (\n          <Pagination\n            currentPage={currentPage}\n            hideNextButton={seedSalesData && seedSalesData.length < seedsPerPage}\n            salesLoading={salesLoading}\n            totalPages={\n              !activeContract &&\n              dealsVisible &&\n              !formVisible &&\n              !cardVisible &&\n              seedSalesData &&\n              (seedSalesData.map(({ dealVisibility, totalOffered }) => {\n                return dealVisibility === true && totalOffered != 0;\n              }).length <= 0 ||\n                typeof seedSalesData == \"undefined\") &&\n              currentPage\n            }\n            handlePageChange={handlePageChange}\n          ></Pagination>\n        )}\n      </div>\n    </div>\n  );\n}\n","// inspiration from https://janosh.dev/blog/use-query-param\nimport { useState } from \"react\";\n\nconst handleParam = (key, value, options = {}) => {\n  // Required for SSR. Do nothing if location object is not available.\n  if (typeof location !== `undefined`) {\n    // historyMethod: push or replace (https://developer.mozilla.org/docs/Web/API/History)\n    // to either add to the browser history or replace the last item\n    const { historyMethod = `replace`, nullDeletes = true } = options;\n    // Parse current query string using the browser's URLSearchParams API.\n    const params = new URLSearchParams(location.search);\n    // If the passed value is undefined, check if the URL already contains\n    // a value for it. This is important on initial page load.\n    if (value === undefined) value = params.get(key);\n    // If the passed value is null and the nullDeletes option is\n    // set to true, delete the corresponding query parameter.\n    else if (value === null && nullDeletes) params.delete(key);\n    // Else use the provided key and value to set a new query parameter.\n    else params.set(key, value);\n    // Construct URL containing the updated query parameter(s).\n    let target = location.pathname + `?` + params.toString();\n    target = target.replace(/\\/?\\?$/, ``); // remove ? if search string is empty\n    history[historyMethod + `State`]({ path: value }, ``, target); // update the browser URL\n    return value;\n  }\n};\nexport const useQueryParam = (key, value, options) => {\n  // Relies on useState to trigger component rerenders on calls to setParam.\n  const [param, setParam] = useState(handleParam(key, value, options));\n  // override allows changing options for individual setQueryParam calls\n  const setter = (newValue, override) => setParam(handleParam(key, newValue, { ...options, ...override }));\n  return [param, setter];\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text, MobileDiv } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport { VeShnContainer } from \"../components/common/subpages/veShnContainer\";\nimport { StakingContainer } from \"components/common/subpages/stakingContainer\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { ControllerPanel } from \"components/common/subpages/controllerPanel\";\nimport { SeedContainer } from \"components/common/subpages/seed/seedContainer\";\nimport { useQueryParam } from \"../hooks/useQueryParam\";\n\nexport default ({}) => {\n  const [activeContract, setActiveContract] = useQueryParam(`tag`);\n  const [chainQueryParam, setChainQueryParam] = useQueryParam(`chain`); // full name e.g. \"optimism\"\n  const { isWalletEnabled, chainId } = useContext(WalletContext);\n  const seedsPerPage = 4;\n  const [indexHistory,setIndexHistory] = useState([]);\n\n  function isChainSupported(chainId) {\n    const supportedChainsMapper = {\n      \"0x89\": \"polygon\",\n      \"0xa\": \"optimism\",\n      \"0xa4b1\": \"arbitrum\",\n      \"0x4e454152\": \"aurora\",\n      \"0x13881\": \"mumbai\",\n    };\n    if (typeof supportedChainsMapper[chainId] != \"undefined\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\" height=\"60px\">\n      <SEO title=\"Deals\" description=\"Discover and launch custom token deals\" />\n      <Header />\n      <MobileDiv mobileWidth=\"100%\" width=\"100%\" background=\"\" style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\", paddingBottom: \"200px\" }}>\n        {true && !isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n        {console.log(\"chainId 23\", chainId, process.env.NODE_ENV)}\n        {isChainSupported(chainId) || (process.env.NODE_ENV == \"development\" && chainId == \"0x7a69\") ? (\n          <SeedContainer seedsPerPage={seedsPerPage} indexHistory={indexHistory} setIndexHistory={setIndexHistory} chainQueryParam={chainQueryParam} setChainQueryParam={setChainQueryParam} activeContract={activeContract} setActiveContract={setActiveContract}></SeedContainer>\n        ) : (\n          isWalletEnabled && (\n            <div style={{ textAlign: \"center\" }}>\n              <br></br>\n              <Text style={{ marginTop: 80 }} fontWeight=\"600\">\n                Chain unsupported\n              </Text>\n              <br></br>\n              <p style={{ marginLeft: 80, marginRight: 80 }}>Please select the supported chain from the drop-down menu.</p>\n            </div>\n          )\n        )}\n      </MobileDiv>\n    </Layout>\n  );\n};\n//0x539 - ganache\n//0x7a69 - hardhat\n//0x13881 - mumbai\n//0x89 - polygon\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}