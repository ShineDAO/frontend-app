{"version":3,"sources":["webpack:///./src/components/common/Table/index.js","webpack:///./src/components/common/subpages/seed/SeedCard.js","webpack:///./src/components/common/subpages/seed/seedContainer.js","webpack:///./src/hooks/useQueryParam","webpack:///./src/pages/seed.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/pages/seed-sale.js"],"names":["TableD","styled","td","visibility","TableR","tr","TableLabel","div","selected","SeedCard","setSeedSalesData","setActiveContract","setCardVisible","setDealsVisible","refetchData","isWalletEnabled1111","setRefetchData","getEligibilityStatus","loadingIndicator","setLoadingIndicator","seedSaleData","name","seedAddress","rate","offeredTokenSymbol","offeredTokenName","offeredTokenTotalSupply","acceptedTokenSymbol","acceptedTokenBalance","weiRaised","startTime","dealVisibility","endTime","acceptedTokenAddress","accessMechanism","distributionMechanism","offeredTokenAddress","percentageVested","cliffDuration","vestingDuration","cliffPeriod","vestingPeriod","vestedBalance","capPerAddressEnabled","capPerAddress","totalOffered","accessNFT","accessNTT","accessToken","tier1","tier2","tier3","tier4","tier1Cap","tier2Cap","tier3Cap","tier4Cap","accessTokenSymbol","capForNTT","capForNFT","nftBalance","nttBalance","kycEnabled","hasValidNtt","accessTokenBalance","theme","useContext","ThemeContext","WalletContext","isWalletEnabled","chainId","setWalletStatus","currentAccount","setChainId","nativeBalance","setCurrentAccount","nativeTokenName","setNativeBalance","console","log","useState","approveLoading","setApproveLoading","shineBalance","currentStatus","setCurrentStatus","tokenContractAddress","setTokenContractAddress","projectBalance","setProjectBalance","seedSaleShnBalance","setSeedSaleShnBalance","metamaskErrorCode","setMetamaskErrorCode","relativeCap","contributions","isShineBought","setShineBought","isTokenWithdrawn","setIsTokenWithdrawn","shineBoughtAmount","setShineBoughtAmount","isTransactionBeingProcessed","setTransactionBeingProcessed","amountToSpend","setAmountToSpend","currentEthPrice","setCurrentEthPrice","saleContractAddress","setSaleContractAddress","setRateInUsd","vestedSoFar","setVestedSoFar","secondsSinceEpoch","setSecondsSinceEpoch","approvalStatus","setApprovalStatus","useEffect","a","utils","ERC20","abi","getNativeTokenPrice","getRateInUsd","Math","round","Date","now","rewardPerSecond","getLocked","timer","setTimeout","clearTimeout","checkApprovalStatus","axios","get","getCoingeckoName","then","response","data","current_price","catch","error","project","title","image","frontendDetails","totalRaise","incubationStage","totalSupply","chain","roundAllocation","technicalDetails","seed","date","metamaskDetails","sybmol","network","caps","amount","saleAbi","Seed","approveContract","style","display","flexDirection","paddingTop","alignItems","onClick","cursor","justifyContent","background","border","margin","fontSize","fontWeight","color","paddingBottom","fromWei","fromFixed","ZERO_ADDRESS","calculatedTier","getCustomTier","flexWrap","paddingRight","getAccessStatus","getDistributionInfo","href","target","substring","length","saleFinished","window","open","width","getNetworkName","ethereum","selectedAddress","Number","parseFloat","toLocaleString","undefined","maximumFractionDigits","getTime","ProgressBar","animated","striped","variant","label","includes","htmlFor","autoComplete","type","id","value","onChange","e","minimumFractionDigits","replace","loading","size","handleApprove","handleSwapButton","marginTop","SeedContainer","activeContract","createdTag","setCreatedTag","salesLoading","setSalesLoading","successMessage","setSuccessMessage","cardVisible","dealsVisible","formVisible","setFormVisible","setTitle","setNativeTokenUsed","isListedCustomTokenUsed","setIsListedCustomTokenUsed","selectedTokenKey","setSelectedTokenKey","maxRaise","setMaxRaise","setVisibility","setAcceptedTokenAddress","requireKyc","setRequireKyc","setOfferedTokenAddress","tokenAmount","setTokenAMount","convertedRate","setConvertedRate","seedSalesData","seedIndex","setSeedIndex","allowance","setAllowance","vestingEnabled","setAccessMechanism","setDistributionMechanism","lockedUntil","setLockedUntil","whitelistedAddresses","setWhitelistedAddresses","capsForWhitelistedAddresses","setcapsForWhitelistedAddresses","nftCap","setNftCap","nttCap","setNttCap","nftAddress","setAccessNftAddress","nttAddress","setAccessNttAddress","accessTokenAddress","setAccessTokenAddress","accessTokenAmountTier1","setAccessTokenAmountTier1","accessTokenAmountTier2","setAccessTokenAmountTier2","accessTokenAmountTier3","setAccessTokenAmountTier3","accessTokenAmountTier4","setAccessTokenAmountTier4","setTier1Cap","setTier2Cap","setTier3Cap","setTier4Cap","setStartTime","setEndTime","setCliffDuration","setVestingDuration","setPercentageVested","acceptedTokenAddressArg","deployNewSeed","SeedFactory","getAddress","toWei","createdContract","paddingLeft","marginBottom","handleOfferedTokenAddress","getAttribute","offeredTokenKey","getTokenAddressFromDealsConfig","getIndex","getSeedSales","loadSeedSales","getAllowance","getTokenRatio","borderRadius","boder","for","toLocaleLowerCase","data-token","borderRight","marginRight","event","checked","handleKycCheckbox","float","marginLeft","min","max","count","getTransactionCount","textAlign","handleNewSeedDeploy","map","index","key","padding","clickable","height","handleSeedClick","timeConverter","handleParam","options","location","historyMethod","nullDeletes","params","URLSearchParams","search","delete","set","pathname","toString","history","path","obj","TypeError","param","setParam","newValue","override","useQueryParam","position","bottom","description","mobileWidth"],"mappings":"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","file":"component---src-pages-seed-js-d3986c00970d775d45d2.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TableD = styled.td`\n  text-align: center;\n  horizontal-align: center;\n  border: none;\n  padding-bottom: 0px;\n  padding-top: 0px;\n  visibility: ${({ visibility }) => visibility || \"visible\"};\n`;\n\nexport const TableR = styled.tr`\n  border: none;\n`;\n\nexport const TableLabel = styled.div`\n  border-radius: 5px;\n  background: ${({ selected }) => (selected ? \"green\" : \"black\")};\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\n\nimport { getOnlyUserAddress, deployNewSeed, getSeedSales, getCoingeckoName, getNetworkName, getRateInUsd, getNativeTokenPrice, ZERO_ADDRESS } from \"../../../templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport axios from \"axios\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { SmallerText } from \"components/common/Text\";\n\nimport { Text, Card } from \"components/common\";\nimport * as utils from \"../../../templates/utils\";\nimport { fromWei, fromFixed, getCustomTier, approveContract, checkApprovalStatus } from \"../../../templates/utils\";\nimport { WalletContext } from \"providers/WalletProvider\";\n\nimport {\n  Wrapper,\n  ProjectsWrapper,\n  Heading,\n  HeadingText,\n  InfoCards,\n  CardHeaderWrapper,\n  ProjectNameWrapper,\n  Details,\n  ConnectButton,\n  Thumbnail,\n  Link,\n  SaleCard,\n  StatusContainer,\n  EthInput,\n  ColorTitle,\n  UnderlinedTitle,\n  ConnectWalletCard,\n  LitepaperCard,\n  StatsCard,\n  TokenCard,\n  CardHeaderTextWrapper,\n  CardBottomWrapper,\n  FirstStatsCard,\n  RightStatsCard,\n  LeftStatsCard,\n  TierWrapper,\n  TitleText,\n  StatsCardHeading,\n  FlexBox,\n  JoinCard,\n  Cards,\n  TBAText,\n} from \"../../..//templates/styles\";\n\nimport { Avatar } from \"../../../common/Avatar\";\nimport seedSale from \"pages/seed-sale.js\";\n\nexport function SeedCard({\n  setSeedSalesData,\n  setActiveContract,\n  setCardVisible,\n  setDealsVisible,\n  isWalletEnabled1111,\n  refetchData,\n  setRefetchData,\n  loadingIndicator,\n  setLoadingIndicator,\n  getEligibilityStatus,\n  seedSaleData: {\n    name,\n    seedAddress,\n    rate,\n    offeredTokenName,\n    offeredTokenSymbol,\n    offeredTokenTotalSupply,\n    acceptedTokenSymbol,\n    acceptedTokenBalance,\n    weiRaised,\n    dealVisibility,\n    startTime,\n    endTime,\n    acceptedTokenAddress,\n    accessMechanism,\n    distributionMechanism,\n    offeredTokenAddress,\n    percentageVested,\n    cliffDuration,\n    vestingDuration,\n    cliffPeriod,\n    vestingPeriod,\n    vestedBalance,\n    capPerAddressEnabled,\n    capPerAddress,\n    accessNFT,\n    accessNTT,\n    accessToken,\n    totalOffered,\n    tier1,\n    tier2,\n    tier3,\n    tier4,\n    tier1Cap,\n    tier2Cap,\n    tier3Cap,\n    tier4Cap,\n    accessTokenSymbol,\n    capForNTT,\n    capForNFT,\n    nftBalance,\n    nttBalance,\n    kycEnabled,\n    hasValidNtt,\n    accessTokenBalance,\n  },\n}) {\n  const { theme } = useContext(ThemeContext);\n  const { isWalletEnabled, setWalletStatus, chainId, setChainId, currentAccount, setCurrentAccount, nativeBalance, setNativeBalance, nativeTokenName } = useContext(WalletContext);\n  //replace balance with context nativeBalance and currentNetwork with chainId from context\n\n  {\n    console.log(\"native token name 123 \", nativeTokenName);\n  }\n  const [approveLoading, setApproveLoading] = useState(false);\n  const [shineBalance, setShineBalance] = useState(23232);\n  const [currentStatus, setCurrentStatus] = useState(\"seed\");\n  const [tokenContractAddress, setTokenContractAddress] = useState(\"0x00184f7E750Db6D16118597d18b79AAeCE26E5f2\"); // random address initially\n\n  const [isSaleOpenForAll, setIsSaleOpenForAll] = useState();\n  const [projectBalance, setProjectBalance] = useState();\n  //const [weiRaised, setWeiRaised] = useState();\n\n  const [seedSaleShnBalance, setSeedSaleShnBalance] = useState();\n  const [metamaskErrorCode, setMetamaskErrorCode] = useState();\n  const [saleProgress, setSaleProgress] = useState();\n  const [relativeCap, setRelativeCap] = useState();\n  const [newRelativeCap, setNewRelativeCap] = useState(); // used for updating the new relative cap through the UI\n  const [contributions, setContributions] = useState();\n  const [currentMigration, setCurrentMigration] = useState();\n\n  const [isShineBought, setShineBought] = useState(false);\n  const [isTokenWithdrawn, setIsTokenWithdrawn] = useState(false);\n  const [shineBoughtAmount, setShineBoughtAmount] = useState(false);\n  const [isTransactionBeingProcessed, setTransactionBeingProcessed] = useState(false);\n  const [amountToSpend, setAmountToSpend] = useState(0);\n  const [shnReference, setShnReference] = useState(\"\");\n  const [currentEthPrice, setCurrentEthPrice] = useState();\n  const [ethRaised, setEthRaised] = useState();\n  const [saleContractAddress, setSaleContractAddress] = useState(\"0xC7E7D5B322cEa8FEFb388Eb19463737C3468f30D\"); //random address initially\n  //const [rate, setRate] = useState();\n  const [rateInUsd, setRateInUsd] = useState();\n\n  const [vestedSoFar, setVestedSoFar] = useState();\n  const [secondsSinceEpoch, setSecondsSinceEpoch] = useState();\n\n  const [approvalStatus, setApprovalStatus] = useState(false);\n  console.log(\"refetch data\", refetchData);\n\n  useEffect(() => {\n    console.log(\"Refetch data 123\", refetchData);\n\n    if (isWalletEnabled == true && typeof name != \"undefined\") {\n      async function getLocked() {\n        setTokenContractAddress(offeredTokenAddress);\n        setSaleContractAddress(seedAddress);\n        //setRate(rate);\n        utils.getProjectBalance(setProjectBalance, currentAccount, ERC20.abi, offeredTokenAddress);\n        utils.getSeedSaleShnBalance(setSeedSaleShnBalance, ERC20.abi, seedAddress, offeredTokenAddress);\n        console.log(\"sale data 1\", await getNativeTokenPrice(\"0x89\"));\n        setRateInUsd(getRateInUsd(utils.fromFixed(rate), await getNativeTokenPrice(chainId)));\n        setSecondsSinceEpoch(Math.round(Date.now() / 1000));\n        //console.log(\"vested so far \", secondsSinceEpoch <= vestingPeriod, secondsSinceEpoch, cliffPeriod, vestedBalance);\n        if (Math.round(Date.now() / 1000) <= cliffPeriod) {\n          setVestedSoFar(0);\n        } else if (Math.round(Date.now() / 1000) <= vestingPeriod) {\n          setVestedSoFar(rewardPerSecond * (Math.round(Date.now() / 1000) - cliffPeriod));\n        } else {\n          setVestedSoFar(vestedBalance);\n        }\n      }\n      getLocked();\n    }\n  }, [isWalletEnabled, name, refetchData]);\n\n  useEffect(() => {\n    //https://stackoverflow.com/a/70068404 setting refetch back to false, in case if there are multiple swaps one after other\n    if (refetchData == true) {\n      const timer = setTimeout(() => {\n        setRefetchData(false);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [refetchData]);\n\n  useEffect(() => {\n    checkApprovalStatus(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, amountToSpend, setApprovalStatus);\n  }, [amountToSpend, name]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        setCurrentEthPrice(response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [amountToSpend, chainId]);\n\n  function getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration) {\n    if (distributionMechanism == \"lock\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n            {100 - percentageVested}% of tokens unlocked immediatly, and the rest after {vestingDuration / 86400} days\n          </Text>\n        </div>\n      );\n    } else if (distributionMechanism == \"linear-vesting\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            {100 - percentageVested}% of tokens unlocked immediatly, then distributed linearly over {vestingDuration / 86400} days with a cliff period of {cliffDuration / 86400} days\n          </Text>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            All tokens are unlocked immediatly\n          </Text>\n        </div>\n      );\n    }\n  }\n\n  const project = {\n    title: \"EXAMPLE\",\n    image: \"test\",\n    frontendDetails: { totalRaise: \"200k\", incubationStage: \"seed\", totalSupply: \"500M\", chain: \"Matic\", rate: \"$0.02\", roundAllocation: \"200k\" },\n    technicalDetails: {\n      seed: {\n        rate: 203333,\n        date: \"Fri, 14 Jan 2022 15:00:00 GMT\",\n        metamaskDetails: { sybmol: \"SYMBOL\" },\n        network: \"0x7a69\",\n        caps: { tier1: { amount: 400 }, tier2: { amount: 400 }, tier3: { amount: 400 }, tier4: { amount: 400 } },\n      },\n    },\n  };\n  const saleAbi = Seed.abi;\n\n  function getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4) {\n    if (accessMechanism == \"open\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Open to anyone\n        </Text>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Whitelist, {fromWei(capPerAddress)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"nft-gate\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          NFT Gated, {fromWei(capForNFT)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"ntt-gate\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          NTT Gated {fromWei(capForNTT)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      let calculatedTier = getCustomTier(fromWei(accessTokenBalance), fromWei(tier1), fromWei(tier2), fromWei(tier3), fromWei(tier4));\n      return (\n        <div>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Token Gated With Tiers\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Your Balance - {fromWei(accessTokenBalance)} {accessTokenSymbol} {calculatedTier}\n          </Text>\n          <div style={{ display: \"flex\", paddingTop: 10, paddingBottom: 10, flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 1\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 1\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier1)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier1Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 2\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 2\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier2)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier2Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 3\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 3\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier3)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                {fromWei(tier3Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 4\" ? \"#322ad1\" : \"red\"} fontWeight={700} fontSize=\"16px\">\n                TIER 4\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                &#62; {fromWei(tier4)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier4Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n          </div>{\" \"}\n        </div>\n      );\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleSwapButton(acceptedTokenAddress, amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus) {\n    if (acceptedTokenAddress == utils.ZERO_ADDRESS) {\n      utils.buyShineTokens(amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus, setRefetchData);\n    } else {\n      utils.swapTokenWithToken(amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus, setRefetchData);\n    }\n  }\n\n  async function handleApprove() {\n    setApproveLoading(true);\n    await approveContract(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, utils.toWei(amountToSpend), setApprovalStatus);\n    setApproveLoading(false);\n  }\n\n  function setExpansionDetails() {\n    setSeedSalesData();\n    setActiveContract(null);\n    setCardVisible(false);\n    setDealsVisible(true);\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n      <div onClick={() => setExpansionDetails()} style={{ cursor: \"pointer\" }}>\n        <h3>← Go Back</h3>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 50 }}>\n        <StatsCard background=\"black\" border=\"1px solid white\">\n          <div>{getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1Cap)}</div>\n\n          <CardHeaderWrapper>\n            <ProjectNameWrapper>\n              {false && <Avatar imageUrl={project.image} alt=\"Defi options logo\" width=\"60px\" height=\"60px\" />}\n              <StatsCardHeading margin=\"0 0 40px 0px\" fontSize=\"30px\" fontWeight={800} color=\"white\">\n                {name}\n              </StatsCardHeading>\n            </ProjectNameWrapper>\n          </CardHeaderWrapper>\n\n          <Text color=\"white\" style={{ margin: \"0 auto\" }}>\n            <i>{false && \"Please Note: for Tier1 and Tier 2 sale is opening 15 mins after\"}</i>\n          </Text>\n\n          <CardBottomWrapper background=\"black\">\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Total Deal\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {fromWei(totalOffered)} {offeredTokenSymbol} for max {fromFixed(rate) * fromWei(totalOffered)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Deal avaibility\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.timeConverter(startTime)} to {utils.timeConverter(endTime)}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Total supply for offered token\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.fromWei(offeredTokenTotalSupply)} {offeredTokenSymbol}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={300} fontSize=\"20px\">\n                Rate\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"20px\">\n                {fromFixed(rate)} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Access Mechanism\n              </Text>\n\n              {getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4)}\n            </div>\n            <div>{getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration)}</div>\n\n            {isWalletEnabled && false && (\n              <Card onClick={() => utils.addToWatchlist(project.technicalDetails[currentStatus].metamaskDetails)} borderRadius=\"4px\" background=\"white\" clickable width=\"100%\" height=\"48px\">\n                <Text fontWeight={800}>ADD {project.technicalDetails[currentStatus].metamaskDetails.symbol} TO METAMASK</Text>\n              </Card>\n            )}\n\n            <Text color=\"red\" fontWeight={800}>\n              {endTime && secondsSinceEpoch > endTime && \"Sale closed!\"}\n            </Text>\n            <br></br>\n            <br></br>\n          </CardBottomWrapper>\n        </StatsCard>\n\n        <TokenCard>\n          <TitleText fontWeight={800} fontSize=\"24px\" color=\"white\">\n            Offered Token Address{\" \"}\n            <Link href={`https://${project.technicalDetails[currentStatus].network == \"0x1\" ? \"etherscan.io\" : \"polygonscan.com\"}/address/${tokenContractAddress}`} target=\"_blank\">\n              {tokenContractAddress.substring(0, 6)}...{tokenContractAddress.substring(tokenContractAddress.length - 4)}\n            </Link>\n          </TitleText>\n\n          {isWalletEnabled && project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The {currentStatus} offering has finished.\n            </Text>\n          )}\n          {isWalletEnabled && utils.getTier(shineBalance) === \"No Tier\" && !project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The amount of SHN that you have is below a minimum threshold to be placed in a tier. In order to participate in the sale, please consider getting some SHN on{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://info.quickswap.exchange/#/token/0x53d76f967de13e7f95e90196438dce695ecfa957\", \"_blank\", \"noopener\")}>\n                Quickswap.\n              </b>\n            </Text>\n          )}\n          {false && isWalletEnabled && (utils.getTier(shineBalance) === \"Tier 1\" || utils.getTier(shineBalance) === \"Tier 2\") && !isSaleOpenForAll && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              Seed sale is not yet open for Tier 1 and Tier 2. To get priority access please consider upgrading your tier{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://v2.info.uniswap.org/pair/0x165c6e50ed0ced21c0192fac26c1affb0dea5c28\", \"_blank\", \"noopener\")}>\n                here.\n              </b>\n            </Text>\n          )}\n          <br></br>\n          {isWalletEnabled && (\n            <Details theme={theme}>\n              <div style={{ width: \"100%\" }}>\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  <span>Current Network: {getNetworkName(chainId)}</span>\n                  <br />\n                  <span>\n                    Connected account: {window.ethereum.selectedAddress.substring(0, 6)}...\n                    {window.ethereum.selectedAddress.substring(window.ethereum.selectedAddress.length - 4)}\n                  </span>\n                  <br />\n                  {false && isWalletEnabled && (\n                    <Text color=\"#aeaeae\">\n                      {\" \"}\n                      Access token balance: {Number.parseFloat(shineBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} SHN <b style={{ color: \"#f2df96\" }}>{utils.getTier(shineBalance)}</b>\n                    </Text>\n                  )}\n                  {acceptedTokenAddress != utils.ZERO_ADDRESS && (\n                    <span>\n                      Accepted Token Balance: {Number.parseFloat(fromWei(acceptedTokenBalance)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {acceptedTokenSymbol}\n                    </span>\n                  )}\n                  <br></br>\n                  <span>\n                    {getNetworkName(chainId)} Balance: {Number.parseFloat(nativeBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {nativeTokenName}\n                  </span>\n                  <br />\n                  {console.log(\"vestedSoFar \", vestedSoFar)}\n                  <span>\n                    Project token balance: {Number.parseFloat(projectBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}\n                  </span>\n                  <br />\n                  {true && (\n                    <span>\n                      Remaining Deal Balance: {Number.parseFloat(seedSaleShnBalance).toLocaleString()} {offeredTokenSymbol}\n                    </span>\n                  )}\n                  <br />\n                  {weiRaised && new Date().getTime() > new Date(project.technicalDetails[currentStatus].date).getTime() && !project.technicalDetails[currentStatus].saleFinished && (\n                    <div>\n                      <span>Sale progress: {(weiRaised * fromFixed(rate) / totalOffered)  * 100}% </span>\n                      <ProgressBar animated striped variant=\"success\" now={(weiRaised * fromFixed(rate)  / totalOffered) * 100} label={`${(weiRaised * fromFixed(rate)  / totalOffered) * 100}%`} />\n                    </div>\n                  )}\n                  <br />\n\n                  {isWalletEnabled && !(new Date().getTime() > new Date(project.technicalDetails[currentStatus].date).getTime()) && (\n                    <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                      Sale is not open yet!\n                    </Text>\n                  )}\n                  {isWalletEnabled && chainId !== project.technicalDetails[currentStatus].network && (\n                    <div>\n                      <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                        You are on the wrong network. To access {currentStatus} please change your network to {getNetworkName(project.technicalDetails[currentStatus].network)}.\n                      </Text>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                      <Text color=\"gold\" fontSize=\"14px\" fontWeight={500}>\n                        <i>\n                          {\" \"}\n                          {!project.title.includes(\"Kassandra\") && (\n                            <div>\n                              Note: if you want to access vested balances from the seed stage please click{\" \"}\n                              <b style={{ color: \"tomato\", cursor: \"pointer\" }} onClick={() => setCurrentStatus(\"seed\")}>\n                                here\n                              </b>\n                              .\n                            </div>\n                          )}\n                        </i>\n                      </Text>\n                    </div>\n                  )}\n                </Text>\n\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {metamaskErrorCode && <ColorTitle>{metamaskErrorCode} </ColorTitle>}\n\n                  {isWalletEnabled && !isTransactionBeingProcessed && new Date().getTime() > new Date(project.technicalDetails[currentStatus].date).getTime() && chainId === project.technicalDetails[currentStatus].network && (\n                    <div>\n                      {!project.technicalDetails[currentStatus].saleFinished && (\n                        <div>\n                          <br></br>\n                          {acceptedTokenAddress == utils.ZERO_ADDRESS ? <label htmlFor=\"eth_amount\">Enter {nativeTokenName} amount:</label> : <label htmlFor=\"eth_amount\">Enter {acceptedTokenSymbol} amount:</label>}\n                          <br />\n                          <EthInput autoComplete=\"off\" type=\"number\" id=\"eth_amount\" value={amountToSpend} onChange={e => utils.handleChangeOfEthAmountToSpend(e.target.value, setAmountToSpend)} />\n                          {console.log(\"debug\", currentEthPrice, amountToSpend, Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString())}\n                          {amountToSpend && (\n                            <span>\n                              {acceptedTokenAddress == utils.ZERO_ADDRESS && (\n                                <span>\n                                  {\" \"}\n                                  <span> ≈ {Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString()} USD</span> <br />{\" \"}\n                                </span>\n                              )}\n                              <span>\n                                <br></br>\n                                Estimated tokens to receive: {utils.estimateReceivedTokens(amountToSpend, fromFixed(rate))} {offeredTokenSymbol}\n                              </span>\n                              {false && utils.getTier(shineBalance) !== \"No Tier\" && <span>Current contribution: {contributions}</span>}\n                            </span>\n                          )}\n                          <br /> <br />\n                          {// relativeCap && shineBalance needed below because it takes few hundred miliseconds to load the state variables\n                          console.log(\"sshhnn\", shineBalance, contributions)}\n                          {relativeCap && shineBalance && amountToSpend > utils.getMaximumContribution(relativeCap, shineBalance) - contributions && utils.getTier(shineBalance) !== \"No Tier\" && (\n                            <Text color=\"tomato\">\n                              The amount that you are trying to buy exceeds the maximum contribution cap for your current tier which is {utils.getTier(shineBalance)}. Your remaining maximum contribution is:{\" \"}\n                              <span\n                                onClick={e =>\n                                  setAmountToSpend(\n                                    Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001)\n                                      .toLocaleString(undefined, {\n                                        minimumFractionDigits: 5,\n                                        maximumFractionDigits: 5,\n                                      })\n                                      .replace(\",\", \"\")\n                                  )\n                                }\n                                style={{ cursor: \"pointer\", color: \"#007bff\" }}\n                              >\n                                {Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001).toLocaleString(undefined, {\n                                  minimumFractionDigits: 5,\n                                  maximumFractionDigits: 5,\n                                })}{\" \"}\n                              </span>{\" \"}\n                              {nativeTokenName}\n                            </Text>\n                          )}\n                          <br />\n                          <br />\n                          <FlexBox>\n                            {approvalStatus &&\n                              (!approveLoading ? (\n                                <ConnectButton theme={theme} onClick={() => handleApprove()}>\n                                  Approve\n                                </ConnectButton>\n                              ) : (\n                                <span style={{ paddingRight: 15 }}>\n                                  <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n                                  <SmallerText>Confirming...</SmallerText>\n                                </span>\n                              ))}\n\n                            <ConnectButton\n                              theme={theme}\n                              onClick={() =>\n                                handleSwapButton(acceptedTokenAddress, amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus)\n                              }\n                            >\n                              Swap\n                            </ConnectButton>\n                            <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                              {\" \"}\n                              {false && \"Note: 25% of the bought tokens are released immediatly, 75% is vested for 100 days.\"}\n                            </Text>\n                          </FlexBox>\n                        </div>\n                      )}\n\n                      <br />\n                      <br />\n                    </div>\n                  )}\n                  {isWalletEnabled && vestedBalance && console.log(\"vested balances \", utils.fromWei(vestedBalance))}\n                  {vestedBalance && vestedBalance > 0 && chainId === project.technicalDetails[currentStatus].network && (\n                    <div>\n                      <FlexBox>\n                        {cliffPeriod != vestingPeriod && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Cliff start time: {utils.timeConverter(cliffPeriod)}\n                          </Text>\n                        )}\n\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Unlock time: {utils.timeConverter(vestingPeriod)}\n                        </Text>\n                      </FlexBox>\n                      <br></br>\n\n                      <FlexBox>\n                        <ConnectButton theme={theme} onClick={() => utils.withdrawTokens(saleAbi, saleContractAddress, currentAccount, setTransactionBeingProcessed, setMetamaskErrorCode, setIsTokenWithdrawn, setShineBought)}>\n                          Widthdraw tokens\n                        </ConnectButton>\n                        {typeof vestedSoFar != \"undefined\" && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Available: {Number.parseFloat(utils.fromWei(vestedSoFar)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                          </Text>\n                        )}\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Remaining vest: {Number.parseFloat(utils.fromWei(vestedBalance)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                        </Text>\n                      </FlexBox>\n                    </div>\n                  )}\n                  {isShineBought && !isTransactionBeingProcessed && (\n                    <div style={{ marginTop: 20 }}>\n                      <h4>\n                        You just successfully bought {Number.parseFloat(shineBoughtAmount).toLocaleString()} {offeredTokenSymbol} tokens! {false && \"(Note: 75% is vested)\"}{\" \"}\n                      </h4>\n                    </div>\n                  )}\n\n                  {isTokenWithdrawn && !isTransactionBeingProcessed && (\n                    <div>\n                      <h4>You have successfully claimed portion of your {offeredTokenSymbol} tokens!</h4>\n                    </div>\n                  )}\n\n                  {isTransactionBeingProcessed && (\n                    <div>\n                      {\" \"}\n                      <h5>Processing </h5>\n                      <PulseLoader color={\"yellow\"} loading={true} size={15} margin={2} /> <br /> <br />\n                      <h5>\n                        <i>(Can take up to few minutes, Matic network has been experiencing congestion for the last few weeks so please wait patiently)</i>\n                      </h5>\n                    </div>\n                  )}\n                </Text>\n              </div>\n            </Details>\n          )}\n          {console.log(\"current network \", chainId, project.technicalDetails[currentStatus].network)}\n\n          {console.log(\"shine balance\", shineBalance)}\n        </TokenCard>\n      </div>\n    </div>\n  );\n}\n","//note both ntt address and seed factory address have to be updates\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { Card, Text } from \"components/common\";\n\nimport { TableD, TableR, TableLabel } from \"components/common/Table\";\nimport { SmallerText } from \"components/common/Text\";\nimport { Slider } from \"components/common/Container/index\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport {\n  getOnlyUserAddress,\n  deployNewSeed,\n  getSeedSales,\n  toWei,\n  approveContract,\n  getTokenRate,\n  getTokenRatio,\n  fromFixed,\n  getCoingeckoName,\n  getNetworkName,\n  getAllowance,\n  fromWei,\n  setAccessToken,\n  timeConverter,\n  substringAddress,\n  getTokenBalance,\n  getNftBalance,\n  erc721Abi,\n  erc4671Abi,\n  ZERO_ADDRESS,\n  getTokenAddressFromDealsConfig,\n  retrieveIndex,\n  getAddress\n} from \"../../../../../src/components/templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport { SeedCard } from \"./SeedCard.js\";\nimport axios from \"axios\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { Tab } from \"react-bootstrap\";\nimport { families } from \"detect.js\";\n\nexport function SeedContainer({ activeContract, setActiveContract }) {\n  const { currentAccount, setCurrentAccount, isWalletEnabled, chainId, nativeTokenName, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator } = useContext(WalletContext);\n  const [createdTag, setCreatedTag] = useState();\n\n  const [salesLoading, setSalesLoading] = useState(false);\n\n  //const [userAddress, setUserAddress] = useState();\n  const [successMessage, setSuccessMessage] = useState([\"none\"]);\n  const [cardVisible, setCardVisible] = useState(false);\n  const [dealsVisible, setDealsVisible] = useState(true);\n  const [formVisible, setFormVisible] = useState(false);\n\n  const [title, setTitle] = useState(\"\");\n\n  const [nativeTokenUsed, setNativeTokenUsed] = useState(true);\n  const [isListedCustomTokenUsed, setIsListedCustomTokenUsed] = useState(true); // for example if USDC, USDT are used\n  const [selectedTokenKey, setSelectedTokenKey] = useState();\n  const [stablesUsed, setStablesUsed] = useState(true);\n  const [maxRaise, setMaxRaise] = useState();\n  const [visibility, setVisibility] = useState(\"private\");\n\n  const [acceptedTokenAddress, setAcceptedTokenAddress] = useState();\n  const [requireKyc, setRequireKyc] = useState(false);\n\n  const [offeredTokenAddress, setOfferedTokenAddress] = useState();\n  const [tokenAmount, setTokenAMount] = useState();\n  const [rate, setRate] = useState();\n  const [convertedRate, setConvertedRate] = useState();\n  const [seedSalesData, setSeedSalesData] = useState();\n  const [seedIndex, setSeedIndex] = useState();\n  const [allowance, setAllowance] = useState();\n  const [vestingEnabled, setVestingEnabled] = useState(false);\n\n  const [accessMechanism, setAccessMechanism] = useState(\"open\");\n  const [distributionMechanism, setDistributionMechanism] = useState(\"instant\");\n  const [lockedUntil, setLockedUntil] = useState();\n\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState();\n  const [capsForWhitelistedAddresses, setcapsForWhitelistedAddresses] = useState();\n  const [nftCap, setNftCap] = useState(0);\n  const [nttCap, setNttCap] = useState(0);\n\n  const [nftAddress, setAccessNftAddress] = useState();\n  const [nttAddress, setAccessNttAddress] = useState();\n\n  const [accessTokenAddress, setAccessTokenAddress] = useState();\n  const [accessTokenAmountTier1, setAccessTokenAmountTier1] = useState(0);\n  const [accessTokenAmountTier2, setAccessTokenAmountTier2] = useState(0);\n  const [accessTokenAmountTier3, setAccessTokenAmountTier3] = useState(0);\n  const [accessTokenAmountTier4, setAccessTokenAmountTier4] = useState(0);\n  const [tier1Cap, setTier1Cap] = useState(0); //needs to be initialized to zero as toWei fails because of undefined\n  const [tier2Cap, setTier2Cap] = useState(0);\n  const [tier3Cap, setTier3Cap] = useState(0);\n  const [tier4Cap, setTier4Cap] = useState(0);\n\n  const [startTime, setStartTime] = useState(\"0\");\n  const [endTime, setEndTime] = useState(\"1678768277\");\n\n  const [cliffDuration, setCliffDuration] = useState(5184000);\n  const [vestingDuration, setVestingDuration] = useState(5184000);\n  const [percentageVested, setPercentageVested] = useState(100);\n\n\n  useEffect(() => {\n    if (isWalletEnabled == true && activeContract != null && currentAccount != null && typeof seedIndex == \"undefined\") {\n      async function getIndex() {\n        //setSeedIndex(await retrieveIndex(SeedFactory.abi, seedFactoryAddress, activeContract.toLocaleLowerCase()));\n      }\n      getIndex();\n    }\n  }, [isWalletEnabled, currentAccount, activeContract]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && currentAccount != null) {\n      async function loadSeedSales() {\n        console.log(\"active acc dds\", activeContract, seedIndex, typeof activeContract, typeof seedIndex, activeContract);\n\n        if (!activeContract) {\n          console.log(\"active acc 1\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract));\n          setSalesLoading(false);\n        } else if (activeContract) {\n          console.log(\"active acc 2\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract));\n          setSalesLoading(false);\n        }\n      }\n      loadSeedSales();\n    }\n  }, [isWalletEnabled, currentAccount, refetchData, chainId, seedIndex, activeContract]);\n\n  useEffect(() => {\n    console.log(\"allowance \", allowance, offeredTokenAddress);\n    if (typeof offeredTokenAddress !== \"undefined\" && offeredTokenAddress !== \"\") {\n      getAllowance(setAllowance, getAddress(chainId, \"seedFactoryAddress\"), currentAccount, ERC20.abi, offeredTokenAddress);\n    }\n  }, [offeredTokenAddress]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        //setConvertedRate(getTokenRate(response.data[0].current_price, rate));\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [rate]);\n\n  useEffect(() => {\n    setConvertedRate(getTokenRatio(tokenAmount, maxRaise));\n  }, [tokenAmount, maxRaise]);\n\n  async function handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddressArg) {\n    let acceptedTokenAddress;\n\n    if (acceptedTokenAddressArg == \"\" || typeof acceptedTokenAddressArg == \"undefined\") {\n      acceptedTokenAddress = ZERO_ADDRESS;\n    } else {\n      acceptedTokenAddress = acceptedTokenAddressArg;\n    }\n\n    console.log(\"convertedRate\", rate, convertedRate, fromFixed(convertedRate), offeredTokenAddress, tokenAmount, acceptedTokenAddress);\n    setSuccessMessage([\"none\"]);\n    let createdContract = await deployNewSeed(\n      currentAccount,\n      offeredTokenAddress,\n      acceptedTokenAddress,\n      SeedFactory.abi,\n      Seed.abi,\n      getAddress(chainId, \"seedFactoryAddress\"),\n      toWei(tokenAmount),\n      convertedRate,\n      cliffDuration,\n      vestingDuration,\n      percentageVested,\n      startTime,\n      endTime,\n      accessTokenAddress,\n      toWei(accessTokenAmountTier1),\n      toWei(accessTokenAmountTier2),\n      toWei(accessTokenAmountTier3),\n      toWei(accessTokenAmountTier4),\n      toWei(tier1Cap),\n      toWei(tier2Cap),\n      toWei(tier3Cap),\n      toWei(tier4Cap),\n      title,\n      accessMechanism,\n      whitelistedAddresses,\n      capsForWhitelistedAddresses,\n      nftAddress,\n      toWei(nftCap),\n      requireKyc,\n      getAddress(chainId, \"nttAddress\"),\n      nttCap,\n      distributionMechanism,\n      visibility,\n      [\"none\"],\n      setLoadingIndicator,\n      [\"none\"],\n      setSuccessMessage\n    );\n    setCreatedTag(createdContract);\n  }\n\n  function handleSeedClick(index, seedAddress) {\n    if (index != seedIndex) {\n      setSeedSalesData(); // this needs to be here because of caching performance issue\n      setSeedIndex(index);\n      setCardVisible(true);\n      setDealsVisible(false);\n      setActiveContract(seedAddress);\n    } else {\n      setSeedIndex();\n    }\n  }\n  async function handleLauncherApprove() {\n    await approveContract(currentAccount, ERC20.abi, offeredTokenAddress, getAddress(chainId, \"seedFactoryAddress\"));\n  }\n\n  function getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) {\n    let count = 2;\n    if (accessMechanism != \"open\") {\n      count++;\n    }\n    if (distributionMechanism != \"instant\") {\n      count++;\n    }\n    if (visibility == \"public\") {\n      count++;\n    }\n    if (requireKyc) {\n      count++;\n    }\n    return count;\n  }\n\n  function getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1Cap) {\n    console.log(\"eligible \", accessMechanism);\n    if (accessMechanism == \"open\") {\n      return (\n        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n          <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Open Access</div>\n          {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n        </div>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      if (capPerAddressEnabled && capPerAddress > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"nft-gate\") {\n      if (nftBalance > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"ntt-gate\") {\n      if (nttBalance > 0 && hasValidNtt) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      if (fromWei(accessTokenBalance) > fromWei(tier1Cap)) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    }\n  }\n\n  function getVisibilityStatus(visiblityStatus, currentAccount) {\n    if (visiblityStatus == true) {\n      return <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Public</div>;\n    } else if (visiblityStatus == false) {\n      return <div style={{ background: \"#444444\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>;\n    }\n  }\n\n  function getAccessStatus(accessMechanism) {\n    if (accessMechanism == \"open\") {\n      return <span>Open to anyone</span>;\n    } else if (accessMechanism == \"whitelist\") {\n      return <span>Whitelisted addresses</span>;\n    } else if (accessMechanism == \"nft-gate\") {\n      return <span>NFT Gated</span>;\n    } else if (accessMechanism == \"ntt-gate\") {\n      return <span>NTT Gated</span>;\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      return <span>Token Gated With Tiers</span>;\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleOfferedTokenAddress(data) {\n    console.log(\"data \", data.target.getAttribute(\"data-token\"));\n    let offeredTokenKey = data.target.getAttribute(\"data-token\");\n    setSelectedTokenKey(offeredTokenKey);\n    if (offeredTokenKey == \"custom\") {\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(false);\n      setNativeTokenUsed(false);\n    } else if (offeredTokenKey == \"native\") {\n      setNativeTokenUsed(true);\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(true);\n    } else {\n      setIsListedCustomTokenUsed(true);\n      setAcceptedTokenAddress(getTokenAddressFromDealsConfig(chainId, offeredTokenKey));\n      setNativeTokenUsed(false);\n    }\n  }\n\n  function handleKycCheckbox(requireKyc) {\n    setNttCap(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn);\n    setRequireKyc(!requireKyc);\n  }\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {console.log(\"isVestingenabled  \", typeof vestingEnabled, vestingEnabled)}\n      {console.log(\"converted rate \", convertedRate)}\n      {console.log(\"trx- \", successMessage)}\n      {formVisible && (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n          <div onClick={() => setFormVisible(false)} style={{ cursor: \"pointer\", paddingBottom: 0 }}>\n            <h3>← Go Back</h3>\n          </div>\n          <div style={{ margin: \"0 auto\", width: \"70%\", marginTop: \"25px\", border: \"1px solid whitesmoke\" }}>\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                {\" \"}\n                <h2>Title</h2>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <input name=\"title\" onChange={target => typeof target.target.value !== \"undefined\" && setTitle(target.target.value)} value={title} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"80%\" }}></input>{\" \"}\n              </div>\n              <br></br>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Tokens</h2>\n                </div>\n\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <label for=\"offered-erc20-token-address\">Offered token address: (A)</label>\n                      </TableD>\n                      <TableD>\n                        <label for=\"emitted-token-amount\">Enter amount: </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input\n                          name=\"offered-erc20-token-address\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setOfferedTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={offeredTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}\n                        ></input>{\" \"}\n                      </TableD>\n                      <TableD>\n                        <input\n                          name=\"accepted-token-amount\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setTokenAMount(target.target.value.toLocaleLowerCase())}\n                          value={tokenAmount}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                        ></input>{\" \"}\n                      </TableD>\n                    </TableR>\n                    <br></br>\n                    <TableR>\n                      <TableD>\n                        <label for=\"accepted-token-address\">Token to accept payment in: (B)</label>\n                      </TableD>\n                      <TableD>\n                        <label for=\"\">Enter amount (Max Raise) </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      {\n                        <TableD visibility={isListedCustomTokenUsed ? \"hidden\" : \"visible\"} style={{ paddingLeft: 0 }}>\n                          <input name=\"accepted-token-address\" onChange={target => setAcceptedTokenAddress(target.target.value.toLocaleLowerCase())} value={acceptedTokenAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}></input>{\" \"}\n                        </TableD>\n                      }\n\n                      <TableD style={{ paddingLeft: 0 }}>\n                        <input name=\"max-raise\" onChange={target => setMaxRaise(target.target.value.toLocaleLowerCase())} value={maxRaise} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                          <TableLabel selected={selectedTokenKey == \"native\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"native\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight:3 }}>\n                            {nativeTokenName}\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"usdc\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"usdc\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight:3 }}>\n                            USDC\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"usdt\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"usdt\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            USDT\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"dai\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"dai\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight:3 }}>\n                            DAI\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"frax\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"frax\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            FRAX\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"shn\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"shn\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            SHN\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"custom\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"custom\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            Custom Address\n                          </TableLabel>\n                        </div>\n                      </TableD>\n                    </TableR>\n                  </table>\n\n                  <br></br>\n                </div>\n\n                <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\" }}>\n                  <label for=\"rate\">Token rate B/A </label>\n\n                  {false && (\n                    <input\n                      name=\"rate\"\n                      onChange={target => typeof target.target.value !== \"undefined\" && setRate(target.target.value.toLocaleLowerCase())}\n                      value={rate}\n                      style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"69%\", float: \"right\" }}\n                    ></input>\n                  )}\n                  <h4>{fromFixed(convertedRate)}</h4>\n                </div>\n                <br></br>\n              </div>\n\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Schedule</h2>\n                </div>\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        <label for=\"start-time\">Enter start timestamp:</label> \n                      </TableD>\n                      <TableD>\n                        <label for=\"end-time\">Enter end timestamp:</label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"start-time\" onChange={target => setStartTime(target.target.value.toLocaleLowerCase())} value={startTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"end-time\" onChange={target => setEndTime(target.target.value.toLocaleLowerCase())} value={endTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                    </TableR>\n                  </table>\n                </div>\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Access</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"open\"} value=\"open\" name=\"access\" /> Open\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"whitelist\"} value=\"whitelist\" name=\"access\" /> Whitelist\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"nft-gate\"} value=\"nft-gate\" name=\"access\" /> NFT Gate{\" \"}\n                      </td>\n\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"token-gate-tiers\"} value=\"token-gate-tiers\" name=\"access\" /> Token Gate + Tiers{\" \"}\n                      </td>\n\n                      <td>\n                        <input type=\"checkbox\" checked={requireKyc} onChange={() => handleKycCheckbox(requireKyc)} /> Require KYC{\" \"}\n                      </td>\n                    </div>\n                  </TableR>\n                  {accessMechanism == \"whitelist\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD> Whitelist Addresses (comma separated) </TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input name=\"whitelist-addresses\" onChange={target => setWhitelistedAddresses(target.target.value.toLocaleLowerCase())} value={whitelistedAddresses} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>Cap/Address (comma separated)</TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input\n                              name=\"whitelisted-addresses-cap\"\n                              onChange={target => setcapsForWhitelistedAddresses(target.target.value.toLocaleLowerCase())}\n                              value={capsForWhitelistedAddresses}\n                              style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                            ></input>\n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n                  {accessMechanism == \"nft-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <label for=\"NFT-address\">Enter NFT address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNftAddress(target.target.value.toLocaleLowerCase())} value={nftAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>NFT Cap</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-cap\" onChange={target => setNftCap(target.target.value.toLocaleLowerCase())} value={nftCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n                  {accessMechanism == \"ntt-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <label for=\"NFT-address\">Enter NTT address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNttAddress(target.target.value.toLocaleLowerCase())} value={nttAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>NTT Cap</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NTT-cap\" onChange={target => setNttCap(target.target.value.toLocaleLowerCase())} value={nttCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n\n                  {accessMechanism == \"token-gate-tiers\" && (\n                    <div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"access-token-address\">Enter access token address:</label>\n                        <input\n                          name=\"access-token-address\"\n                          onChange={target => setAccessTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"52%\", float: \"right\" }}\n                        ></input>{\" \"}\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-1-access-token\">Tier 1 needs: </label>\n                        <input\n                          name=\"tier-1-access-token\"\n                          onChange={target => setAccessTokenAmountTier1(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier1}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-1-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-1-max-contribution\" onChange={target => setTier1Cap(target.target.value.toLocaleLowerCase())} value={tier1Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-2-access-token\">Tier 2 needs: </label>\n                        <input\n                          name=\"tier-2-access-token\"\n                          onChange={target => setAccessTokenAmountTier2(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier2}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-2-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-2-max-contribution\" onChange={target => setTier2Cap(target.target.value.toLocaleLowerCase())} value={tier2Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-3-access-token\">Tier 3 needs: </label>\n                        <input\n                          name=\"tier-3-access-token\"\n                          onChange={target => setAccessTokenAmountTier3(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier3}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-3-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-3-max-contribution\" onChange={target => setTier3Cap(target.target.value.toLocaleLowerCase())} value={tier3Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-4-access-token\">Tier 4 needs:</label>\n                        <input\n                          name=\"tier-4-access-token\"\n                          onChange={target => setAccessTokenAmountTier4(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier4}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-4-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-4-max-contribution\" onChange={target => setTier4Cap(target.target.value.toLocaleLowerCase())} value={tier4Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                      </div>\n                    </div>\n                  )}\n                </table>\n              </div>\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Distribution</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }} onChange={event => setDistributionMechanism(event.target.value)}>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"instant\"} value=\"instant\" name=\"distribution\" /> Instant\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"lock\"} value=\"lock\" name=\"distribution\" /> Lock\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"linear-vesting\"} value=\"linear-vesting\" name=\"distribution\" /> Linear vesting\n                      </TableD>\n                    </div>\n                  </TableR>\n                </table>\n                {distributionMechanism == \"instant\" && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    All tokens are released instantly<br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"lock\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Seconds Locked</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"locked-until\" onChange={target => setLockedUntil(target.target.value.toLocaleLowerCase())} value={lockedUntil} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      {percentageVested}% of the tokens are going to be vested {percentageVested < 100 && <span>and {100 - percentageVested}% are going to be released immediatly.</span>}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"linear-vesting\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Cliff duration</TableD>\n                        <TableD>Vest duration</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider width=\"120px\" type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"cliff-timestamp\" onChange={target => setCliffDuration(target.target.value.toLocaleLowerCase())} value={cliffDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"vesting-duration\" onChange={target => setVestingDuration(target.target.value.toLocaleLowerCase())} value={vestingDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      {percentageVested}% of the tokens are going to be vested {percentageVested < 100 && <span>and {100 - percentageVested}% are going to be released immediatly.</span>}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Deal listed on the mainpage?</h2>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }} onChange={event => setVisibility(event.target.value)}>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"public\"} value=\"public\" name=\"visibility\" /> True\n                  </td>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"private\"} value=\"private\" name=\"visibility\" /> False\n                  </td>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>{visibility == \"public\" ? \"Deal is going to be listed on the main page\" : \"Deal is going to be accessible over a generated link\"}</div>\n              </div>\n\n              <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\", paddingBottom: 10, paddingTop: 8 }}>\n                <div style={{ marginBottom: \"15px\" }}> You have in total {getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) + 1} transactions to confirm:</div>\n                <div>\n                  {\" \"}\n                  <span>- transaction to deploy the deal contract</span> {console.log(\"loading indicator 321\", loadingIndicator, loadingIndicator.includes(\"deploy-0\"))}\n                  {loadingIndicator.includes(\"deploy-0\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-0-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {accessMechanism != \"open\" && <span>- transaction to set up the access mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-1\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-1-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {requireKyc && <span>- transaction to set up the kyc module</span>}\n                  {loadingIndicator.includes(\"deploy-2\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-2-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {distributionMechanism != \"instant\" && <span>- transaction to set up the distribution mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-3\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-3-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {visibility != \"private\" && <span>- transaction to set up the deal visibility</span>}\n                  {loadingIndicator.includes(\"deploy-4\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-4-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to approve the created contract</span>\n                  {loadingIndicator.includes(\"deploy-5\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-5-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to send tokens to a smart contract</span>\n                  {loadingIndicator.includes(\"deploy-6\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-6-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <br></br>\n                <div style={{ textAlign: \"center\" }}>\n                  {createdTag && (\n                    <Text color=\"white\" fontWeight={300} fontSize=\"18px\">\n                      Your deal has been created. You can visit the deal at the following link <a href={`https://app.shinedao.finance/seed?tag=${createdTag}`}>https://app.shinedao.finance/seed?tag={createdTag}</a>\n                    </Text>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {false && allowance == 0 && (\n        <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 20 }}>\n          <Button onClick={() => handleLauncherApprove()}>Approve Launcher</Button>\n          <br></br>\n          <br></br>\n        </div>\n      )}\n      <br></br>\n      <br></br>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {formVisible && <Button onClick={() => handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddress)}>Launch Deal</Button>}\n        {!salesLoading && !activeContract && isWalletEnabled && !formVisible && !cardVisible && <Button onClick={() => setFormVisible(true)}>New Deal</Button>}\n        {!isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n      </div>\n      {false && <Button onClick={() => loadSeedSales()}>Load seed sales</Button>}\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", marginTop: 60 }}>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n          {console.log(\"seed sales data \", seedSalesData)}\n          {console.log(\"seed sales mapper  \", !activeContract, dealsVisible, !formVisible, !cardVisible, seedSalesData)}\n          {salesLoading && (\n            <div>\n              {\" \"}\n              <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n              <Text>Loading...</Text>\n            </div>\n          )}\n          {!activeContract &&\n            dealsVisible &&\n            !formVisible &&\n            !cardVisible &&\n            seedSalesData &&\n            seedSalesData.map(\n              (\n                {\n                  name,\n                  seedAddress,\n                  rate,\n                  offeredTokenName,\n                  offeredTokenTotalSupply,\n                  offeredTokenSymbol,\n                  acceptedTokenSymbol,\n                  acceptedTokenBalance,\n                  weiRaised,\n                  dealVisibility,\n                  startTime,\n                  endTime,\n                  acceptedTokenAddress,\n                  accessMechanism,\n                  distributionMechanism,\n                  offeredTokenAddress,\n                  percentageVested,\n                  cliffDuration,\n                  vestingDuration,\n                  cliffPeriod,\n                  vestingPeriod,\n                  vestedBalance,\n                  capPerAddressEnabled,\n                  capPerAddress,\n                  accessNFT,\n                  accessNTT,\n                  accessToken,\n                  totalOffered,\n                  tier1,\n                  tier2,\n                  tier3,\n                  tier4,\n                  tier1Cap,\n                  tier2Cap,\n                  tier3Cap,\n                  tier4Cap,\n                  accessTokenSymbol,\n                  accessTokenBalance,\n                  capForNTT,\n                  capForNFT,\n                  nftBalance,\n                  nttBalance,\n                  hasValidNtt,\n                  kycEnabled,\n                },\n                index\n              ) => {\n                return (\n                  <Card\n                    key={index}\n                    flexDirection=\"column\"\n                    alignItems=\"flex-start\"\n                    margin=\"5px\"\n                    padding=\"0px 0px 0px 35px\"\n                    clickable=\"true\"\n                    border=\"1px solid white\"\n                    width=\"350px\"\n                    height=\"400px\"\n                    background={index == seedIndex ? \"#2f2f2f\" : \"black\"}\n                    index={index}\n                    onClick={() => handleSeedClick(index, seedAddress)}\n                  >\n                    <div>\n                      {getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1Cap)}\n                      {false && <div>{getVisibilityStatus(dealVisibility, currentAccount)} </div>}\n                    </div>\n                    <h1>{name}</h1>\n                    {false && (\n                      <div>\n                        - {offeredTokenName} - {acceptedTokenSymbol} - {fromWei(weiRaised)}\n                      </div>\n                    )}\n                    <div>\n                      <b>Tokens:</b>\n                      <SmallerText>\n                        {\" \"}\n                        {offeredTokenSymbol} for {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                      </SmallerText>\n                    </div>\n                    <div>\n                      {\" \"}\n                      <b>Deal size</b>{\" \"}\n                      <SmallerText>\n                        {fromWei(totalOffered)} {offeredTokenSymbol} for max {fromFixed(rate) * fromWei(totalOffered)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                      </SmallerText>\n                    </div>\n                    <div>\n                      {\" \"}\n                      <b>Rate</b>{\" \"}\n                      <SmallerText>\n                        {fromFixed(rate)} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                      </SmallerText>\n                    </div>\n                    <div>\n                      <b> Start time</b> <SmallerText>{timeConverter(startTime)}</SmallerText>\n                    </div>\n                    <div>\n                      <b>End time </b>\n                      <SmallerText> {timeConverter(endTime)}</SmallerText>\n                    </div>\n                    {false && (\n                      <div>\n                        <b>Offered Token Address</b> <SmallerText>{substringAddress(offeredTokenAddress)}</SmallerText>\n                      </div>\n                    )}\n                    {false && (\n                      <div>\n                        <b>Accepted Token Address</b>\n                        <SmallerText> {substringAddress(acceptedTokenAddress)}</SmallerText>\n                      </div>\n                    )}{\" \"}\n                    {false && (\n                      <div>\n                        <b>Visibility </b>\n                        <SmallerText> {dealVisibility ? \"Public\" : \"Private\"}</SmallerText>\n                      </div>\n                    )}\n                    <div>\n                      <b>Access Type </b>\n                      <SmallerText> {getAccessStatus(accessMechanism)}</SmallerText>\n                    </div>\n                    <div>\n                      <b>Distribution Type </b>\n                      <SmallerText> {distributionMechanism}</SmallerText>\n                    </div>\n                  </Card>\n                );\n              }\n            )}\n        </div>\n\n        {activeContract && seedSalesData && console.log(\"activeContract xxx\", activeContract, seedIndex, typeof seedIndex, seedSalesData, typeof seedSalesData)}\n        {activeContract && seedSalesData && (\n          <SeedCard\n            setSeedSalesData={setSeedSalesData}\n            setActiveContract={setActiveContract}\n            setCardVisible={setCardVisible}\n            setDealsVisible={setDealsVisible}\n            setRefetchData={setRefetchData}\n            refetchData={refetchData}\n            getEligibilityStatus={getEligibilityStatus}\n            seedSaleData={seedSalesData && seedSalesData[activeContract ? 0 : seedIndex]}\n          ></SeedCard>\n        )}\n      </div>\n    </div>\n  );\n}\n","// inspiration from https://janosh.dev/blog/use-query-param\nimport { useState } from \"react\";\n\nconst handleParam = (key, value, options = {}) => {\n  // Required for SSR. Do nothing if location object is not available.\n  if (typeof location !== `undefined`) {\n    // historyMethod: push or replace (https://developer.mozilla.org/docs/Web/API/History)\n    // to either add to the browser history or replace the last item\n    const { historyMethod = `replace`, nullDeletes = true } = options;\n    // Parse current query string using the browser's URLSearchParams API.\n    const params = new URLSearchParams(location.search);\n    // If the passed value is undefined, check if the URL already contains\n    // a value for it. This is important on initial page load.\n    if (value === undefined) value = params.get(key);\n    // If the passed value is null and the nullDeletes option is\n    // set to true, delete the corresponding query parameter.\n    else if (value === null && nullDeletes) params.delete(key);\n    // Else use the provided key and value to set a new query parameter.\n    else params.set(key, value);\n    // Construct URL containing the updated query parameter(s).\n    let target = location.pathname + `?` + params.toString();\n    target = target.replace(/\\/?\\?$/, ``); // remove ? if search string is empty\n    history[historyMethod + `State`]({ path: value }, ``, target); // update the browser URL\n    return value;\n  }\n};\nexport const useQueryParam = (key, value, options) => {\n  // Relies on useState to trigger component rerenders on calls to setParam.\n  const [param, setParam] = useState(handleParam(key, value, options));\n  // override allows changing options for individual setQueryParam calls\n  const setter = (newValue, override) => setParam(handleParam(key, newValue, { ...options, ...override }));\n  return [param, setter];\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text, MobileDiv } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport { VeShnContainer } from \"../components/common/subpages/veShnContainer\";\nimport { StakingContainer } from \"components/common/subpages/stakingContainer\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { ControllerPanel } from \"components/common/subpages/controllerPanel\";\nimport { SeedContainer } from \"components/common/subpages/seed/seedContainer\";\nimport { useQueryParam } from \"../hooks/useQueryParam\";\n\nexport default ({}) => {\n  const [activeContract, setActiveContract] = useQueryParam(`tag`);\n  const { isWalletEnabled, chainId } = useContext(WalletContext);\n\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\" height=\"60px\">\n      <SEO title=\"seed\" description=\"Launch seed\" />\n      <Header />\n      <MobileDiv mobileWidth=\"100%\" width=\"90%\" background=\"\" style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\", paddingBottom: \"200px\" }}>\n        {!isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n\n        {chainId == \"0x13881\" || (process.env.NODE_ENV == \"development\" && chainId == \"0x7a69\") ? (\n          <SeedContainer activeContract={activeContract} setActiveContract={setActiveContract}></SeedContainer>\n        ) : (\n          isWalletEnabled && (\n            <div style={{ textAlign: \"center\" }}>\n              <br></br>\n              <Text style={{ marginTop: 80 }} fontWeight=\"600\">\n                Chain unsupported\n              </Text>\n              <br></br>\n              <p style={{ marginLeft: 80, marginRight: 80 }}>App is only available on Mumbai Network.</p>\n            </div>\n          )\n        )}\n      </MobileDiv>\n    </Layout>\n  );\n};\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\nimport { Layout, SEO } from 'components/common';\nimport { Sale, SaleDetails } from 'components/landing';\n\nexport default () => (\n  <Layout>\n    <SEO />\n    <Sale />\n    <SaleDetails />\n  </Layout>\n);\n"],"sourceRoot":""}