{"version":3,"sources":["webpack:///./src/pages/seed-sale.js","webpack:///./src/components/common/Table/index.js","webpack:///./src/components/common/subpages/seed/SeedCard.js","webpack:///./src/components/common/subpages/seed/seedContainer.js","webpack:///./src/hooks/useQueryParam","webpack:///./src/pages/deals.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["TableD","styled","td","visibility","TableR","tr","TableLabel","div","selected","SeedCard","setSeedSalesData","setActiveContract","setCardVisible","setDealsVisible","refetchData","isWalletEnabled1111","setRefetchData","getEligibilityStatus","loadingIndicator","setLoadingIndicator","seedSaleData","name","seedAddress","rate","offeredTokenSymbol","offeredTokenName","offeredTokenTotalSupply","acceptedTokenSymbol","acceptedTokenBalance","weiRaised","startTime","dealVisibility","endTime","acceptedTokenAddress","accessMechanism","distributionMechanism","offeredTokenAddress","percentageVested","cliffDuration","vestingDuration","cliffPeriod","vestingPeriod","vestedBalance","capPerAddressEnabled","capPerAddress","totalOffered","accessNFT","accessNTT","accessToken","tier1","tier2","tier3","tier4","tier1Cap","tier2Cap","tier3Cap","tier4Cap","accessTokenSymbol","capForNTT","capForNFT","nftBalance","nttBalance","kycEnabled","hasValidNtt","accessTokenBalance","theme","useContext","ThemeContext","WalletContext","isWalletEnabled","chainId","setWalletStatus","currentAccount","setChainId","nativeBalance","setCurrentAccount","nativeTokenName","setNativeBalance","console","log","useState","approveLoading","setApproveLoading","shineBalance","currentStatus","tokenContractAddress","setTokenContractAddress","projectBalance","setProjectBalance","seedSaleShnBalance","setSeedSaleShnBalance","metamaskErrorCode","setMetamaskErrorCode","relativeCap","contributions","isShineBought","setShineBought","isTokenWithdrawn","setIsTokenWithdrawn","shineBoughtAmount","setShineBoughtAmount","isTransactionBeingProcessed","setTransactionBeingProcessed","amountToSpend","setAmountToSpend","currentEthPrice","setCurrentEthPrice","saleContractAddress","setSaleContractAddress","setRateInUsd","vestedSoFar","setVestedSoFar","secondsSinceEpoch","setSecondsSinceEpoch","approvalStatus","setApprovalStatus","useEffect","a","utils","ERC20","abi","getNativeTokenPrice","getRateInUsd","Math","round","Date","now","rewardPerSecond","getLocked","timer","setTimeout","clearTimeout","checkApprovalStatus","axios","get","getCoingeckoName","then","response","data","current_price","catch","error","project","title","image","frontendDetails","totalRaise","incubationStage","totalSupply","chain","roundAllocation","technicalDetails","seed","date","metamaskDetails","sybmol","network","caps","amount","saleAbi","Seed","approveContract","style","display","flexDirection","paddingTop","alignItems","onClick","cursor","justifyContent","background","border","margin","fontSize","fontWeight","color","paddingBottom","fromWei","fromFixed","ZERO_ADDRESS","calculatedTier","getCustomTier","flexWrap","paddingRight","getAccessStatus","getDistributionInfo","href","target","substring","length","width","Number","parseFloat","toLocaleString","undefined","maximumFractionDigits","getNetworkName","ProgressBar","animated","striped","variant","label","htmlFor","autoComplete","type","id","value","onChange","e","minimumFractionDigits","replace","loading","size","handleApprove","handleSwapButton","marginTop","SeedContainer","activeContract","createdTag","setCreatedTag","salesLoading","setSalesLoading","successMessage","setSuccessMessage","cardVisible","dealsVisible","formVisible","setFormVisible","setTitle","setNativeTokenUsed","isListedCustomTokenUsed","setIsListedCustomTokenUsed","selectedTokenKey","setSelectedTokenKey","maxRaise","setMaxRaise","setVisibility","setAcceptedTokenAddress","requireKyc","setRequireKyc","setOfferedTokenAddress","tokenAmount","setTokenAMount","convertedRate","setConvertedRate","seedSalesData","seedIndex","setSeedIndex","allowance","setAllowance","vestingEnabled","setAccessMechanism","setDistributionMechanism","lockedUntil","setLockedUntil","whitelistedAddresses","setWhitelistedAddresses","capsForWhitelistedAddresses","setcapsForWhitelistedAddresses","nftCap","setNftCap","nttCap","setNttCap","nftAddress","setAccessNftAddress","nttAddress","setAccessNttAddress","accessTokenAddress","setAccessTokenAddress","accessTokenAmountTier1","setAccessTokenAmountTier1","accessTokenAmountTier2","setAccessTokenAmountTier2","accessTokenAmountTier3","setAccessTokenAmountTier3","accessTokenAmountTier4","setAccessTokenAmountTier4","setTier1Cap","setTier2Cap","setTier3Cap","setTier4Cap","setStartTime","setEndTime","setCliffDuration","setVestingDuration","setPercentageVested","acceptedTokenAddressArg","deployNewSeed","SeedFactory","getAddress","toWei","createdContract","paddingLeft","marginBottom","handleOfferedTokenAddress","getAttribute","offeredTokenKey","getTokenAddressFromDealsConfig","getIndex","getSeedSales","loadSeedSales","getAllowance","getTokenRatio","borderRadius","boder","for","toLocaleLowerCase","data-token","borderRight","marginRight","event","checked","handleKycCheckbox","float","marginLeft","min","max","count","getTransactionCount","includes","textAlign","handleNewSeedDeploy","map","index","key","padding","clickable","height","handleSeedClick","timeConverter","handleParam","options","location","historyMethod","nullDeletes","params","URLSearchParams","search","delete","set","pathname","toString","history","path","obj","TypeError","param","setParam","newValue","override","useQueryParam","position","bottom","description","mobileWidth"],"mappings":"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","file":"component---src-pages-deals-js-a7c1d1601af7cfaefef9.js","sourcesContent":["import React from 'react';\nimport { Layout, SEO } from 'components/common';\nimport { Sale, SaleDetails } from 'components/landing';\n\nexport default () => (\n  <Layout>\n    <SEO />\n    <Sale />\n    <SaleDetails />\n  </Layout>\n);\n","import styled from \"styled-components\";\n\nexport const TableD = styled.td`\n  text-align: center;\n  horizontal-align: center;\n  border: none;\n  padding-bottom: 0px;\n  padding-top: 0px;\n  visibility: ${({ visibility }) => visibility || \"visible\"};\n`;\n\nexport const TableR = styled.tr`\n  border: none;\n`;\n\nexport const TableLabel = styled.div`\n  border-radius: 5px;\n  background: ${({ selected }) => (selected ? \"green\" : \"black\")};\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\n\nimport { getOnlyUserAddress, deployNewSeed, getSeedSales, getCoingeckoName, getNetworkName, getRateInUsd, getNativeTokenPrice, ZERO_ADDRESS } from \"../../../templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport axios from \"axios\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { SmallerText } from \"components/common/Text\";\n\nimport { Text, Card } from \"components/common\";\nimport * as utils from \"../../../templates/utils\";\nimport { fromWei, fromFixed, getCustomTier, approveContract, checkApprovalStatus } from \"../../../templates/utils\";\nimport { WalletContext } from \"providers/WalletProvider\";\n\nimport {\n  Wrapper,\n  ProjectsWrapper,\n  Heading,\n  HeadingText,\n  InfoCards,\n  CardHeaderWrapper,\n  ProjectNameWrapper,\n  Details,\n  ConnectButton,\n  Thumbnail,\n  Link,\n  SaleCard,\n  StatusContainer,\n  EthInput,\n  ColorTitle,\n  UnderlinedTitle,\n  ConnectWalletCard,\n  LitepaperCard,\n  StatsCard,\n  TokenCard,\n  CardHeaderTextWrapper,\n  CardBottomWrapper,\n  FirstStatsCard,\n  RightStatsCard,\n  LeftStatsCard,\n  TierWrapper,\n  TitleText,\n  StatsCardHeading,\n  FlexBox,\n  JoinCard,\n  Cards,\n  TBAText,\n} from \"../../..//templates/styles\";\n\nimport { Avatar } from \"../../../common/Avatar\";\nimport seedSale from \"pages/seed-sale.js\";\n\nexport function SeedCard({\n  setSeedSalesData,\n  setActiveContract,\n  setCardVisible,\n  setDealsVisible,\n  isWalletEnabled1111,\n  refetchData,\n  setRefetchData,\n  loadingIndicator,\n  setLoadingIndicator,\n  getEligibilityStatus,\n  seedSaleData: {\n    name,\n    seedAddress,\n    rate,\n    offeredTokenName,\n    offeredTokenSymbol,\n    offeredTokenTotalSupply,\n    acceptedTokenSymbol,\n    acceptedTokenBalance,\n    weiRaised,\n    dealVisibility,\n    startTime,\n    endTime,\n    acceptedTokenAddress,\n    accessMechanism,\n    distributionMechanism,\n    offeredTokenAddress,\n    percentageVested,\n    cliffDuration,\n    vestingDuration,\n    cliffPeriod,\n    vestingPeriod,\n    vestedBalance,\n    capPerAddressEnabled,\n    capPerAddress,\n    accessNFT,\n    accessNTT,\n    accessToken,\n    totalOffered,\n    tier1,\n    tier2,\n    tier3,\n    tier4,\n    tier1Cap,\n    tier2Cap,\n    tier3Cap,\n    tier4Cap,\n    accessTokenSymbol,\n    capForNTT,\n    capForNFT,\n    nftBalance,\n    nttBalance,\n    kycEnabled,\n    hasValidNtt,\n    accessTokenBalance,\n  },\n}) {\n  const { theme } = useContext(ThemeContext);\n  const { isWalletEnabled, setWalletStatus, chainId, setChainId, currentAccount, setCurrentAccount, nativeBalance, setNativeBalance, nativeTokenName } = useContext(WalletContext);\n  //replace balance with context nativeBalance and currentNetwork with chainId from context\n\n  {\n    console.log(\"native token name 123 \", nativeTokenName);\n  }\n  const [approveLoading, setApproveLoading] = useState(false);\n  const [shineBalance, setShineBalance] = useState(23232);\n  const [currentStatus, setCurrentStatus] = useState(\"seed\");\n  const [tokenContractAddress, setTokenContractAddress] = useState(\"0x00184f7E750Db6D16118597d18b79AAeCE26E5f2\"); // random address initially\n\n  const [isSaleOpenForAll, setIsSaleOpenForAll] = useState();\n  const [projectBalance, setProjectBalance] = useState();\n  //const [weiRaised, setWeiRaised] = useState();\n\n  const [seedSaleShnBalance, setSeedSaleShnBalance] = useState();\n  const [metamaskErrorCode, setMetamaskErrorCode] = useState();\n  const [saleProgress, setSaleProgress] = useState();\n  const [relativeCap, setRelativeCap] = useState();\n  const [newRelativeCap, setNewRelativeCap] = useState(); // used for updating the new relative cap through the UI\n  const [contributions, setContributions] = useState();\n  const [currentMigration, setCurrentMigration] = useState();\n\n  const [isShineBought, setShineBought] = useState(false);\n  const [isTokenWithdrawn, setIsTokenWithdrawn] = useState(false);\n  const [shineBoughtAmount, setShineBoughtAmount] = useState(false);\n  const [isTransactionBeingProcessed, setTransactionBeingProcessed] = useState(false);\n  const [amountToSpend, setAmountToSpend] = useState(0);\n  const [shnReference, setShnReference] = useState(\"\");\n  const [currentEthPrice, setCurrentEthPrice] = useState();\n  const [ethRaised, setEthRaised] = useState();\n  const [saleContractAddress, setSaleContractAddress] = useState(\"0xC7E7D5B322cEa8FEFb388Eb19463737C3468f30D\"); //random address initially\n  //const [rate, setRate] = useState();\n  const [rateInUsd, setRateInUsd] = useState();\n\n  const [vestedSoFar, setVestedSoFar] = useState();\n  const [secondsSinceEpoch, setSecondsSinceEpoch] = useState();\n\n  const [approvalStatus, setApprovalStatus] = useState(false);\n  console.log(\"refetch data\", refetchData);\n\n  useEffect(() => {\n    console.log(\"Refetch data 123\", refetchData);\n\n    if (isWalletEnabled == true && typeof name != \"undefined\") {\n      async function getLocked() {\n        setTokenContractAddress(offeredTokenAddress);\n        setSaleContractAddress(seedAddress);\n        //setRate(rate);\n        utils.getProjectBalance(setProjectBalance, currentAccount, ERC20.abi, offeredTokenAddress);\n        utils.getSeedSaleShnBalance(setSeedSaleShnBalance, ERC20.abi, seedAddress, offeredTokenAddress);\n        console.log(\"sale data 1\", await getNativeTokenPrice(\"0x89\"));\n        setRateInUsd(getRateInUsd(utils.fromFixed(rate), await getNativeTokenPrice(chainId)));\n        setSecondsSinceEpoch(Math.round(Date.now() / 1000));\n        //console.log(\"vested so far \", secondsSinceEpoch <= vestingPeriod, secondsSinceEpoch, cliffPeriod, vestedBalance);\n        if (Math.round(Date.now() / 1000) <= cliffPeriod) {\n          setVestedSoFar(0);\n        } else if (Math.round(Date.now() / 1000) <= vestingPeriod) {\n          setVestedSoFar(rewardPerSecond * (Math.round(Date.now() / 1000) - cliffPeriod));\n        } else {\n          setVestedSoFar(vestedBalance);\n        }\n      }\n      getLocked();\n    }\n  }, [isWalletEnabled, name, refetchData]);\n\n  useEffect(() => {\n    //https://stackoverflow.com/a/70068404 setting refetch back to false, in case if there are multiple swaps one after other\n    if (refetchData == true) {\n      const timer = setTimeout(() => {\n        setRefetchData(false);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [refetchData]);\n\n  useEffect(() => {\n    checkApprovalStatus(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, amountToSpend, setApprovalStatus);\n  }, [amountToSpend, name]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        setCurrentEthPrice(response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [amountToSpend, chainId]);\n\n  function getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration) {\n    if (distributionMechanism == \"lock\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n            {100 - percentageVested}% of the tokens are unlocked immediatly, and the rest after {vestingDuration / 86400} days\n          </Text>\n        </div>\n      );\n    } else if (distributionMechanism == \"linear-vesting\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            {100 - percentageVested}% of the tokens are unlocked immediatly, then distributed linearly over {vestingDuration / 86400} days with a cliff period of {cliffDuration / 86400} days\n          </Text>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            All tokens are unlocked immediatly\n          </Text>\n        </div>\n      );\n    }\n  }\n\n  const project = {\n    title: \"EXAMPLE\",\n    image: \"test\",\n    frontendDetails: { totalRaise: \"200k\", incubationStage: \"seed\", totalSupply: \"500M\", chain: \"Matic\", rate: \"$0.02\", roundAllocation: \"200k\" },\n    technicalDetails: {\n      seed: {\n        rate: 203333,\n        date: \"Fri, 14 Jan 2022 15:00:00 GMT\",\n        metamaskDetails: { sybmol: \"SYMBOL\" },\n        network: \"0x7a69\",\n        caps: { tier1: { amount: 400 }, tier2: { amount: 400 }, tier3: { amount: 400 }, tier4: { amount: 400 } },\n      },\n    },\n  };\n  const saleAbi = Seed.abi;\n\n  function getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4) {\n    if (accessMechanism == \"open\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Open to anyone\n        </Text>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Whitelist, {fromWei(capPerAddress)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"nft-gate\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          NFT Gated, {fromWei(capForNFT)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"ntt-gate\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          NTT Gated {fromWei(capForNTT)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      let calculatedTier = getCustomTier(fromWei(accessTokenBalance), fromWei(tier1), fromWei(tier2), fromWei(tier3), fromWei(tier4));\n      return (\n        <div>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Token Gated With Tiers\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Your Balance - {fromWei(accessTokenBalance)} {accessTokenSymbol} {calculatedTier}\n          </Text>\n          <div style={{ display: \"flex\", paddingTop: 10, paddingBottom: 10, flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 1\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 1\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier1)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier1Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 2\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 2\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier2)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier2Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 3\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 3\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier3)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                {fromWei(tier3Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 4\" ? \"#322ad1\" : \"red\"} fontWeight={700} fontSize=\"16px\">\n                TIER 4\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                &#62; {fromWei(tier4)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier4Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n          </div>{\" \"}\n        </div>\n      );\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleSwapButton(acceptedTokenAddress, amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus) {\n    if (acceptedTokenAddress == utils.ZERO_ADDRESS) {\n      utils.buyShineTokens(amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus, setRefetchData);\n    } else {\n      utils.swapTokenWithToken(amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus, setRefetchData);\n    }\n  }\n\n  async function handleApprove() {\n    setApproveLoading(true);\n    await approveContract(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, utils.toWei(amountToSpend), setApprovalStatus);\n    setApproveLoading(false);\n  }\n\n  function setExpansionDetails() {\n    setSeedSalesData();\n    setActiveContract(null);\n    setCardVisible(false);\n    setDealsVisible(true);\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n      <div onClick={() => setExpansionDetails()} style={{ cursor: \"pointer\" }}>\n        <h3>← Go Back</h3>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 50 }}>\n        <StatsCard background=\"black\" border=\"1px solid white\">\n          <div>{getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1Cap)}</div>\n\n          <CardHeaderWrapper>\n            <ProjectNameWrapper>\n              {false && <Avatar imageUrl={project.image} alt=\"Defi options logo\" width=\"60px\" height=\"60px\" />}\n              <StatsCardHeading margin=\"0 0 40px 0px\" fontSize=\"30px\" fontWeight={800} color=\"white\">\n                {name}\n              </StatsCardHeading>\n            </ProjectNameWrapper>\n          </CardHeaderWrapper>\n\n          <Text color=\"white\" style={{ margin: \"0 auto\" }}>\n            <i>{false && \"Please Note: for Tier1 and Tier 2 sale is opening 15 mins after\"}</i>\n          </Text>\n\n          <CardBottomWrapper background=\"black\">\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Total Deal\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {fromWei(totalOffered)} {offeredTokenSymbol} for max {fromFixed(rate) * fromWei(totalOffered)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Deal avaibility\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.timeConverter(startTime)} to {utils.timeConverter(endTime)}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Total supply for offered token\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.fromWei(offeredTokenTotalSupply)} {offeredTokenSymbol}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={300} fontSize=\"20px\">\n                Rate\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"20px\">\n                {fromFixed(rate)} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Access Mechanism\n              </Text>\n\n              {getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4)}\n            </div>\n            <div>{getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration)}</div>\n\n            {isWalletEnabled && false && (\n              <Card onClick={() => utils.addToWatchlist(project.technicalDetails[currentStatus].metamaskDetails)} borderRadius=\"4px\" background=\"white\" clickable width=\"100%\" height=\"48px\">\n                <Text fontWeight={800}>ADD {project.technicalDetails[currentStatus].metamaskDetails.symbol} TO METAMASK</Text>\n              </Card>\n            )}\n\n            <Text color=\"red\" fontWeight={800}>\n              {endTime && secondsSinceEpoch > endTime && \"Sale closed!\"}\n            </Text>\n            <br></br>\n            <br></br>\n          </CardBottomWrapper>\n        </StatsCard>\n\n        <TokenCard>\n          <TitleText fontWeight={800} fontSize=\"24px\" color=\"white\">\n            Offered Token Address{\" \"}\n            <Link href={`${chainId}== \"0x1\" ? \"etherscan.io\" : \"polygonscan.com\"}/address/${tokenContractAddress}`} target=\"_blank\">\n              {tokenContractAddress.substring(0, 6)}...{tokenContractAddress.substring(tokenContractAddress.length - 4)}\n            </Link>\n          </TitleText>\n\n          {false && isWalletEnabled && project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The {currentStatus} offering has finished.\n            </Text>\n          )}\n          {false && isWalletEnabled && utils.getTier(shineBalance) === \"No Tier\" && !project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The amount of SHN that you have is below a minimum threshold to be placed in a tier. In order to participate in the sale, please consider getting some SHN on{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://info.quickswap.exchange/#/token/0x53d76f967de13e7f95e90196438dce695ecfa957\", \"_blank\", \"noopener\")}>\n                Quickswap.\n              </b>\n            </Text>\n          )}\n          {false && isWalletEnabled && (utils.getTier(shineBalance) === \"Tier 1\" || utils.getTier(shineBalance) === \"Tier 2\") && !isSaleOpenForAll && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              Seed sale is not yet open for Tier 1 and Tier 2. To get priority access please consider upgrading your tier{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://v2.info.uniswap.org/pair/0x165c6e50ed0ced21c0192fac26c1affb0dea5c28\", \"_blank\", \"noopener\")}>\n                here.\n              </b>\n            </Text>\n          )}\n          <br></br>\n          {isWalletEnabled && (\n            <Details theme={theme}>\n              <div style={{ width: \"100%\" }}>\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {false && <span>Current Network: {getNetworkName(chainId)}</span>}\n                  <br />\n                  {false && (\n                    <span>\n                      Connected account: {window.ethereum.selectedAddress.substring(0, 6)}...\n                      {window.ethereum.selectedAddress.substring(window.ethereum.selectedAddress.length - 4)}\n                    </span>\n                  )}\n                  <br />\n                  {false && isWalletEnabled && (\n                    <Text color=\"#aeaeae\">\n                      {\" \"}\n                      Access token balance: {Number.parseFloat(shineBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} SHN <b style={{ color: \"#f2df96\" }}>{utils.getTier(shineBalance)}</b>\n                    </Text>\n                  )}\n                  {acceptedTokenAddress != utils.ZERO_ADDRESS ? (\n                    <span>\n                      Accepted Token Balance: {Number.parseFloat(fromWei(acceptedTokenBalance)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {acceptedTokenSymbol}\n                    </span>\n                  ) : (\n                    <span>\n                      {getNetworkName(chainId)} Balance: {Number.parseFloat(nativeBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {nativeTokenName}\n                    </span>\n                  )}\n\n                  <br />\n                  {console.log(\"vestedSoFar \", vestedSoFar)}\n                  <span>\n                    Offered token balance: {Number.parseFloat(projectBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}\n                  </span>\n                  <br />\n                \n                  <br />\n                  {weiRaised && (\n                    <div>\n                      <br></br>\n                      <span>Sale progress: {((weiRaised * fromFixed(rate)) / totalOffered) * 100}% </span>\n                      <ProgressBar animated striped variant=\"success\" now={((weiRaised * fromFixed(rate)) / totalOffered) * 100} label={`${((weiRaised * fromFixed(rate)) / totalOffered) * 100}%`} />\n                    </div>\n                    \n                  )}\n                  {true && (\n                    <span>\n                      Remaining Deal Balance: {Number.parseFloat(seedSaleShnBalance).toLocaleString()} {offeredTokenSymbol}\n                    </span>\n                  )}\n\n                  {false && isWalletEnabled && !(new Date().getTime() > new Date(project.technicalDetails[currentStatus].date).getTime()) && (\n                    <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                      Sale is not open yet!\n                    </Text>\n                  )}\n                  {false && isWalletEnabled && chainId !== project.technicalDetails[currentStatus].network && (\n                    <div>\n                      <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                        You are on the wrong network. To access {currentStatus} please change your network to {getNetworkName(project.technicalDetails[currentStatus].network)}.\n                      </Text>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                      <Text color=\"gold\" fontSize=\"14px\" fontWeight={500}>\n                        <i>\n                          {\" \"}\n                          {false && !project.title.includes(\"Kassandra\") && (\n                            <div>\n                              Note: if you want to access vested balances from the seed stage please click{\" \"}\n                              <b style={{ color: \"tomato\", cursor: \"pointer\" }} onClick={() => setCurrentStatus(\"seed\")}>\n                                here\n                              </b>\n                              .\n                            </div>\n                          )}\n                        </i>\n                      </Text>\n                    </div>\n                  )}\n                </Text>\n\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {metamaskErrorCode && <ColorTitle>{metamaskErrorCode} </ColorTitle>}\n\n                  {isWalletEnabled && !isTransactionBeingProcessed && (\n                    <div>\n                      <div>\n                        <br></br>\n                        {acceptedTokenAddress == utils.ZERO_ADDRESS ? <label htmlFor=\"eth_amount\">Enter {nativeTokenName} amount:</label> : <label htmlFor=\"eth_amount\">Enter {acceptedTokenSymbol} amount:</label>}\n                        <br />\n                        <EthInput autoComplete=\"off\" type=\"number\" id=\"eth_amount\" value={amountToSpend} onChange={e => utils.handleChangeOfEthAmountToSpend(e.target.value, setAmountToSpend)} />\n                        {console.log(\"debug\", currentEthPrice, amountToSpend, Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString())}\n                        {amountToSpend && (\n                          <span>\n                            {acceptedTokenAddress == utils.ZERO_ADDRESS && (\n                              <span>\n                                {\" \"}\n                                <span> ≈ {Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString()} USD</span> <br />{\" \"}\n                              </span>\n                            )}\n                            <span>\n                              <br></br>\n                              Estimated tokens to receive: {utils.estimateReceivedTokens(amountToSpend, fromFixed(rate))} {offeredTokenSymbol}\n                            </span>\n                            {false && utils.getTier(shineBalance) !== \"No Tier\" && <span>Current contribution: {contributions}</span>}\n                          </span>\n                        )}\n                        <br /> <br />\n                        {// relativeCap && shineBalance needed below because it takes few hundred miliseconds to load the state variables\n                        console.log(\"sshhnn\", shineBalance, contributions)}\n                        {relativeCap && shineBalance && amountToSpend > utils.getMaximumContribution(relativeCap, shineBalance) - contributions && utils.getTier(shineBalance) !== \"No Tier\" && (\n                          <Text color=\"tomato\">\n                            The amount that you are trying to buy exceeds the maximum contribution cap for your current tier which is {utils.getTier(shineBalance)}. Your remaining maximum contribution is:{\" \"}\n                            <span\n                              onClick={e =>\n                                setAmountToSpend(\n                                  Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001)\n                                    .toLocaleString(undefined, {\n                                      minimumFractionDigits: 5,\n                                      maximumFractionDigits: 5,\n                                    })\n                                    .replace(\",\", \"\")\n                                )\n                              }\n                              style={{ cursor: \"pointer\", color: \"#007bff\" }}\n                            >\n                              {Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001).toLocaleString(undefined, {\n                                minimumFractionDigits: 5,\n                                maximumFractionDigits: 5,\n                              })}{\" \"}\n                            </span>{\" \"}\n                            {nativeTokenName}\n                          </Text>\n                        )}\n                        <br />\n                        <br />\n                        <FlexBox>\n                          {approvalStatus &&\n                            (!approveLoading ? (\n                              <ConnectButton theme={theme} onClick={() => handleApprove()}>\n                                Approve\n                              </ConnectButton>\n                            ) : (\n                              <span style={{ paddingRight: 15 }}>\n                                <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n                                <SmallerText>Confirming...</SmallerText>\n                              </span>\n                            ))}\n\n                          <ConnectButton\n                            theme={theme}\n                            onClick={() =>\n                              handleSwapButton(acceptedTokenAddress, amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus)\n                            }\n                          >\n                            Swap\n                          </ConnectButton>\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            {false && \"Note: 25% of the bought tokens are released immediatly, 75% is vested for 100 days.\"}\n                          </Text>\n                        </FlexBox>\n                      </div>\n\n                      <br />\n                      <br />\n                    </div>\n                  )}\n                  {isWalletEnabled && vestedBalance && console.log(\"vested balances \", utils.fromWei(vestedBalance))}\n                  {vestedBalance && vestedBalance > 0 && (\n                    <div>\n                      <FlexBox>\n                        {cliffPeriod != vestingPeriod && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Cliff start time: {utils.timeConverter(cliffPeriod)}\n                          </Text>\n                        )}\n\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Unlock time: {utils.timeConverter(vestingPeriod)}\n                        </Text>\n                      </FlexBox>\n                      <br></br>\n\n                      <FlexBox>\n                        <ConnectButton theme={theme} onClick={() => utils.withdrawTokens(saleAbi, saleContractAddress, currentAccount, setTransactionBeingProcessed, setMetamaskErrorCode, setIsTokenWithdrawn, setShineBought)}>\n                          Widthdraw tokens\n                        </ConnectButton>\n                        {typeof vestedSoFar != \"undefined\" && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Available: {Number.parseFloat(utils.fromWei(vestedSoFar)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                          </Text>\n                        )}\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Remaining vest: {Number.parseFloat(utils.fromWei(vestedBalance)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                        </Text>\n                      </FlexBox>\n                    </div>\n                  )}\n                  {isShineBought && !isTransactionBeingProcessed && (\n                    <div style={{ marginTop: 20 }}>\n                      <h4>\n                        You just successfully bought {Number.parseFloat(shineBoughtAmount).toLocaleString()} {offeredTokenSymbol} tokens! {false && \"(Note: 75% is vested)\"}{\" \"}\n                      </h4>\n                    </div>\n                  )}\n\n                  {isTokenWithdrawn && !isTransactionBeingProcessed && (\n                    <div>\n                      <h4>You have successfully claimed portion of your {offeredTokenSymbol} tokens!</h4>\n                    </div>\n                  )}\n\n                  {isTransactionBeingProcessed && (\n                    <div>\n                      {\" \"}\n                      <h5>Processing </h5>\n                      <PulseLoader color={\"yellow\"} loading={true} size={15} margin={2} /> <br /> <br />\n                      <h5>\n                        <i>(Can take up to few minutes, so please wait patiently)</i>\n                      </h5>\n                    </div>\n                  )}\n                </Text>\n              </div>\n            </Details>\n          )}\n          {console.log(\"current network \", chainId, project.technicalDetails[currentStatus].network)}\n\n          {console.log(\"shine balance\", shineBalance)}\n        </TokenCard>\n      </div>\n    </div>\n  );\n}\n","//note both ntt address and seed factory address have to be updates\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { Card, Text } from \"components/common\";\n\nimport { TableD, TableR, TableLabel } from \"components/common/Table\";\nimport { SmallerText } from \"components/common/Text\";\nimport { Slider } from \"components/common/Container/index\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport {\n  getOnlyUserAddress,\n  deployNewSeed,\n  getSeedSales,\n  toWei,\n  approveContract,\n  getTokenRate,\n  getTokenRatio,\n  fromFixed,\n  getCoingeckoName,\n  getNetworkName,\n  getAllowance,\n  fromWei,\n  setAccessToken,\n  timeConverter,\n  substringAddress,\n  getTokenBalance,\n  getNftBalance,\n  erc721Abi,\n  erc4671Abi,\n  ZERO_ADDRESS,\n  getTokenAddressFromDealsConfig,\n  retrieveIndex,\n  getAddress\n} from \"../../../../../src/components/templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport { SeedCard } from \"./SeedCard.js\";\nimport axios from \"axios\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { Tab } from \"react-bootstrap\";\nimport { families } from \"detect.js\";\n\nexport function SeedContainer({ activeContract, setActiveContract }) {\n  const { currentAccount, setCurrentAccount, isWalletEnabled, chainId, nativeTokenName, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator } = useContext(WalletContext);\n  const [createdTag, setCreatedTag] = useState();\n\n  const [salesLoading, setSalesLoading] = useState(false);\n\n  //const [userAddress, setUserAddress] = useState();\n  const [successMessage, setSuccessMessage] = useState([\"none\"]);\n  const [cardVisible, setCardVisible] = useState(false);\n  const [dealsVisible, setDealsVisible] = useState(true);\n  const [formVisible, setFormVisible] = useState(false);\n\n  const [title, setTitle] = useState(\"\");\n\n  const [nativeTokenUsed, setNativeTokenUsed] = useState(true);\n  const [isListedCustomTokenUsed, setIsListedCustomTokenUsed] = useState(true); // for example if USDC, USDT are used\n  const [selectedTokenKey, setSelectedTokenKey] = useState();\n  const [stablesUsed, setStablesUsed] = useState(true);\n  const [maxRaise, setMaxRaise] = useState();\n  const [visibility, setVisibility] = useState(\"private\");\n\n  const [acceptedTokenAddress, setAcceptedTokenAddress] = useState();\n  const [requireKyc, setRequireKyc] = useState(false);\n\n  const [offeredTokenAddress, setOfferedTokenAddress] = useState();\n  const [tokenAmount, setTokenAMount] = useState();\n  const [rate, setRate] = useState();\n  const [convertedRate, setConvertedRate] = useState();\n  const [seedSalesData, setSeedSalesData] = useState();\n  const [seedIndex, setSeedIndex] = useState();\n  const [allowance, setAllowance] = useState();\n  const [vestingEnabled, setVestingEnabled] = useState(false);\n\n  const [accessMechanism, setAccessMechanism] = useState(\"open\");\n  const [distributionMechanism, setDistributionMechanism] = useState(\"instant\");\n  const [lockedUntil, setLockedUntil] = useState();\n\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState();\n  const [capsForWhitelistedAddresses, setcapsForWhitelistedAddresses] = useState();\n  const [nftCap, setNftCap] = useState(0);\n  const [nttCap, setNttCap] = useState(0);\n\n  const [nftAddress, setAccessNftAddress] = useState();\n  const [nttAddress, setAccessNttAddress] = useState();\n\n  const [accessTokenAddress, setAccessTokenAddress] = useState();\n  const [accessTokenAmountTier1, setAccessTokenAmountTier1] = useState(0);\n  const [accessTokenAmountTier2, setAccessTokenAmountTier2] = useState(0);\n  const [accessTokenAmountTier3, setAccessTokenAmountTier3] = useState(0);\n  const [accessTokenAmountTier4, setAccessTokenAmountTier4] = useState(0);\n  const [tier1Cap, setTier1Cap] = useState(0); //needs to be initialized to zero as toWei fails because of undefined\n  const [tier2Cap, setTier2Cap] = useState(0);\n  const [tier3Cap, setTier3Cap] = useState(0);\n  const [tier4Cap, setTier4Cap] = useState(0);\n\n  const [startTime, setStartTime] = useState(\"0\");\n  const [endTime, setEndTime] = useState(\"1678768277\");\n\n  const [cliffDuration, setCliffDuration] = useState(5184000);\n  const [vestingDuration, setVestingDuration] = useState(5184000);\n  const [percentageVested, setPercentageVested] = useState(100);\n\n\n  useEffect(() => {\n    if (isWalletEnabled == true && activeContract != null && currentAccount != null && typeof seedIndex == \"undefined\") {\n      async function getIndex() {\n        //setSeedIndex(await retrieveIndex(SeedFactory.abi, seedFactoryAddress, activeContract.toLocaleLowerCase()));\n      }\n      getIndex();\n    }\n  }, [isWalletEnabled, currentAccount, activeContract]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && currentAccount != null) {\n      async function loadSeedSales() {\n        console.log(\"active acc dds\", activeContract, seedIndex, typeof activeContract, typeof seedIndex, activeContract);\n\n        if (!activeContract) {\n          console.log(\"active acc 1\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract));\n          setSalesLoading(false);\n        } else if (activeContract) {\n          console.log(\"active acc 2\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract));\n          setSalesLoading(false);\n        }\n      }\n      loadSeedSales();\n    }\n  }, [isWalletEnabled, currentAccount, refetchData, chainId, seedIndex, activeContract]);\n\n  useEffect(() => {\n    console.log(\"allowance \", allowance, offeredTokenAddress);\n    if (typeof offeredTokenAddress !== \"undefined\" && offeredTokenAddress !== \"\") {\n      getAllowance(setAllowance, getAddress(chainId, \"seedFactoryAddress\"), currentAccount, ERC20.abi, offeredTokenAddress);\n    }\n  }, [offeredTokenAddress]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        //setConvertedRate(getTokenRate(response.data[0].current_price, rate));\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [rate]);\n\n  useEffect(() => {\n    setConvertedRate(getTokenRatio(tokenAmount, maxRaise));\n  }, [tokenAmount, maxRaise]);\n\n  async function handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddressArg) {\n    let acceptedTokenAddress;\n\n    if (acceptedTokenAddressArg == \"\" || typeof acceptedTokenAddressArg == \"undefined\") {\n      acceptedTokenAddress = ZERO_ADDRESS;\n    } else {\n      acceptedTokenAddress = acceptedTokenAddressArg;\n    }\n\n    console.log(\"convertedRate\", rate, convertedRate, fromFixed(convertedRate), offeredTokenAddress, tokenAmount, acceptedTokenAddress);\n    setSuccessMessage([\"none\"]);\n    let createdContract = await deployNewSeed(\n      currentAccount,\n      offeredTokenAddress,\n      acceptedTokenAddress,\n      SeedFactory.abi,\n      Seed.abi,\n      getAddress(chainId, \"seedFactoryAddress\"),\n      toWei(tokenAmount),\n      convertedRate,\n      cliffDuration,\n      vestingDuration,\n      percentageVested,\n      startTime,\n      endTime,\n      accessTokenAddress,\n      toWei(accessTokenAmountTier1),\n      toWei(accessTokenAmountTier2),\n      toWei(accessTokenAmountTier3),\n      toWei(accessTokenAmountTier4),\n      toWei(tier1Cap),\n      toWei(tier2Cap),\n      toWei(tier3Cap),\n      toWei(tier4Cap),\n      title,\n      accessMechanism,\n      whitelistedAddresses,\n      capsForWhitelistedAddresses,\n      nftAddress,\n      toWei(nftCap),\n      requireKyc,\n      getAddress(chainId, \"nttAddress\"),\n      nttCap,\n      distributionMechanism,\n      visibility,\n      [\"none\"],\n      setLoadingIndicator,\n      [\"none\"],\n      setSuccessMessage\n    );\n    setCreatedTag(createdContract);\n  }\n\n  function handleSeedClick(index, seedAddress) {\n    if (index != seedIndex) {\n      setSeedSalesData(); // this needs to be here because of caching performance issue\n      setSeedIndex(index);\n      setCardVisible(true);\n      setDealsVisible(false);\n      setActiveContract(seedAddress);\n    } else {\n      setSeedIndex();\n    }\n  }\n  async function handleLauncherApprove() {\n    await approveContract(currentAccount, ERC20.abi, offeredTokenAddress, getAddress(chainId, \"seedFactoryAddress\"));\n  }\n\n  function getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) {\n    let count = 2;\n    if (accessMechanism != \"open\") {\n      count++;\n    }\n    if (distributionMechanism != \"instant\") {\n      count++;\n    }\n    if (visibility == \"public\") {\n      count++;\n    }\n    if (requireKyc) {\n      count++;\n    }\n    return count;\n  }\n\n  function getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1Cap) {\n    console.log(\"eligible \", accessMechanism);\n    if (accessMechanism == \"open\") {\n      return (\n        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n          <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Open Access</div>\n          {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n        </div>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      if (capPerAddressEnabled && capPerAddress > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"nft-gate\") {\n      if (nftBalance > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"ntt-gate\") {\n      if (nttBalance > 0 && hasValidNtt) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      if (fromWei(accessTokenBalance) > fromWei(tier1Cap)) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    }\n  }\n\n  function getVisibilityStatus(visiblityStatus, currentAccount) {\n    if (visiblityStatus == true) {\n      return <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Public</div>;\n    } else if (visiblityStatus == false) {\n      return <div style={{ background: \"#444444\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>;\n    }\n  }\n\n  function getAccessStatus(accessMechanism) {\n    if (accessMechanism == \"open\") {\n      return <span>Open to anyone</span>;\n    } else if (accessMechanism == \"whitelist\") {\n      return <span>Whitelisted addresses</span>;\n    } else if (accessMechanism == \"nft-gate\") {\n      return <span>NFT Gated</span>;\n    } else if (accessMechanism == \"ntt-gate\") {\n      return <span>NTT Gated</span>;\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      return <span>Token Gated With Tiers</span>;\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleOfferedTokenAddress(data) {\n    console.log(\"data \", data.target.getAttribute(\"data-token\"));\n    let offeredTokenKey = data.target.getAttribute(\"data-token\");\n    setSelectedTokenKey(offeredTokenKey);\n    if (offeredTokenKey == \"custom\") {\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(false);\n      setNativeTokenUsed(false);\n    } else if (offeredTokenKey == \"native\") {\n      setNativeTokenUsed(true);\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(true);\n    } else {\n      setIsListedCustomTokenUsed(true);\n      setAcceptedTokenAddress(getTokenAddressFromDealsConfig(chainId, offeredTokenKey));\n      setNativeTokenUsed(false);\n    }\n  }\n\n  function handleKycCheckbox(requireKyc) {\n    setNttCap(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn);\n    setRequireKyc(!requireKyc);\n  }\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {console.log(\"isVestingenabled  \", typeof vestingEnabled, vestingEnabled)}\n      {console.log(\"converted rate \", convertedRate)}\n      {console.log(\"trx- \", successMessage)}\n      {formVisible && (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n          <div onClick={() => setFormVisible(false)} style={{ cursor: \"pointer\", paddingBottom: 0 }}>\n            <h3>← Go Back</h3>\n          </div>\n          <div style={{ margin: \"0 auto\", width: \"70%\", marginTop: \"25px\", border: \"1px solid whitesmoke\" }}>\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                {\" \"}\n                <h2>Title</h2>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <input name=\"title\" onChange={target => typeof target.target.value !== \"undefined\" && setTitle(target.target.value)} value={title} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"80%\" }}></input>{\" \"}\n              </div>\n              <br></br>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Tokens</h2>\n                </div>\n\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <label for=\"offered-erc20-token-address\">Offered token address: (A)</label>\n                      </TableD>\n                      <TableD>\n                        <label for=\"emitted-token-amount\">Enter amount: </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input\n                          name=\"offered-erc20-token-address\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setOfferedTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={offeredTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}\n                        ></input>{\" \"}\n                      </TableD>\n                      <TableD>\n                        <input\n                          name=\"accepted-token-amount\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setTokenAMount(target.target.value.toLocaleLowerCase())}\n                          value={tokenAmount}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                        ></input>{\" \"}\n                      </TableD>\n                    </TableR>\n                    <br></br>\n                    <TableR>\n                      <TableD>\n                        <label for=\"accepted-token-address\">Token to accept payment in: (B)</label>\n                      </TableD>\n                      <TableD>\n                        <label for=\"\">Enter amount (Max Raise) </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      {\n                        <TableD visibility={isListedCustomTokenUsed ? \"hidden\" : \"visible\"} style={{ paddingLeft: 0 }}>\n                          <input name=\"accepted-token-address\" onChange={target => setAcceptedTokenAddress(target.target.value.toLocaleLowerCase())} value={acceptedTokenAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}></input>{\" \"}\n                        </TableD>\n                      }\n\n                      <TableD style={{ paddingLeft: 0 }}>\n                        <input name=\"max-raise\" onChange={target => setMaxRaise(target.target.value.toLocaleLowerCase())} value={maxRaise} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                          <TableLabel selected={selectedTokenKey == \"native\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"native\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight:3 }}>\n                            {nativeTokenName}\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"usdc\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"usdc\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight:3 }}>\n                            USDC\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"usdt\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"usdt\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            USDT\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"dai\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"dai\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight:3 }}>\n                            DAI\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"frax\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"frax\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            FRAX\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"shn\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"shn\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            SHN\n                          </TableLabel>\n                          <TableLabel selected={selectedTokenKey == \"custom\"} onClick={e => handleOfferedTokenAddress(e)} data-token=\"custom\" style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 , marginRight:3}}>\n                            Custom Address\n                          </TableLabel>\n                        </div>\n                      </TableD>\n                    </TableR>\n                  </table>\n\n                  <br></br>\n                </div>\n\n                <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\" }}>\n                  <label for=\"rate\">Token rate B/A </label>\n\n                  {false && (\n                    <input\n                      name=\"rate\"\n                      onChange={target => typeof target.target.value !== \"undefined\" && setRate(target.target.value.toLocaleLowerCase())}\n                      value={rate}\n                      style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"69%\", float: \"right\" }}\n                    ></input>\n                  )}\n                  <h4>{fromFixed(convertedRate)}</h4>\n                </div>\n                <br></br>\n              </div>\n\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Schedule</h2>\n                </div>\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        <label for=\"start-time\">Enter start timestamp:</label> \n                      </TableD>\n                      <TableD>\n                        <label for=\"end-time\">Enter end timestamp:</label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"start-time\" onChange={target => setStartTime(target.target.value.toLocaleLowerCase())} value={startTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"end-time\" onChange={target => setEndTime(target.target.value.toLocaleLowerCase())} value={endTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                    </TableR>\n                  </table>\n                </div>\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Access</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"open\"} value=\"open\" name=\"access\" /> Open\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"whitelist\"} value=\"whitelist\" name=\"access\" /> Whitelist\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"nft-gate\"} value=\"nft-gate\" name=\"access\" /> NFT Gate{\" \"}\n                      </td>\n\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"token-gate-tiers\"} value=\"token-gate-tiers\" name=\"access\" /> Token Gate + Tiers{\" \"}\n                      </td>\n\n                      <td>\n                        <input type=\"checkbox\" checked={requireKyc} onChange={() => handleKycCheckbox(requireKyc)} /> Require KYC{\" \"}\n                      </td>\n                    </div>\n                  </TableR>\n                  {accessMechanism == \"whitelist\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD> Whitelist Addresses (comma separated) </TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input name=\"whitelist-addresses\" onChange={target => setWhitelistedAddresses(target.target.value.toLocaleLowerCase())} value={whitelistedAddresses} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>Cap/Address (comma separated)</TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input\n                              name=\"whitelisted-addresses-cap\"\n                              onChange={target => setcapsForWhitelistedAddresses(target.target.value.toLocaleLowerCase())}\n                              value={capsForWhitelistedAddresses}\n                              style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                            ></input>\n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n                  {accessMechanism == \"nft-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <label for=\"NFT-address\">Enter NFT address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNftAddress(target.target.value.toLocaleLowerCase())} value={nftAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>NFT Cap</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-cap\" onChange={target => setNftCap(target.target.value.toLocaleLowerCase())} value={nftCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n                  {accessMechanism == \"ntt-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <label for=\"NFT-address\">Enter NTT address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNttAddress(target.target.value.toLocaleLowerCase())} value={nttAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>NTT Cap</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NTT-cap\" onChange={target => setNttCap(target.target.value.toLocaleLowerCase())} value={nttCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n\n                  {accessMechanism == \"token-gate-tiers\" && (\n                    <div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"access-token-address\">Enter access token address:</label>\n                        <input\n                          name=\"access-token-address\"\n                          onChange={target => setAccessTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"52%\", float: \"right\" }}\n                        ></input>{\" \"}\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-1-access-token\">Tier 1 needs: </label>\n                        <input\n                          name=\"tier-1-access-token\"\n                          onChange={target => setAccessTokenAmountTier1(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier1}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-1-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-1-max-contribution\" onChange={target => setTier1Cap(target.target.value.toLocaleLowerCase())} value={tier1Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-2-access-token\">Tier 2 needs: </label>\n                        <input\n                          name=\"tier-2-access-token\"\n                          onChange={target => setAccessTokenAmountTier2(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier2}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-2-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-2-max-contribution\" onChange={target => setTier2Cap(target.target.value.toLocaleLowerCase())} value={tier2Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-3-access-token\">Tier 3 needs: </label>\n                        <input\n                          name=\"tier-3-access-token\"\n                          onChange={target => setAccessTokenAmountTier3(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier3}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-3-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-3-max-contribution\" onChange={target => setTier3Cap(target.target.value.toLocaleLowerCase())} value={tier3Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-4-access-token\">Tier 4 needs:</label>\n                        <input\n                          name=\"tier-4-access-token\"\n                          onChange={target => setAccessTokenAmountTier4(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier4}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-4-max-contribution\"> access tokens and max contribution is: </label>\n                        <input name=\"tier-4-max-contribution\" onChange={target => setTier4Cap(target.target.value.toLocaleLowerCase())} value={tier4Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                      </div>\n                    </div>\n                  )}\n                </table>\n              </div>\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Distribution</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }} onChange={event => setDistributionMechanism(event.target.value)}>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"instant\"} value=\"instant\" name=\"distribution\" /> Instant\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"lock\"} value=\"lock\" name=\"distribution\" /> Lock\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"linear-vesting\"} value=\"linear-vesting\" name=\"distribution\" /> Linear vesting\n                      </TableD>\n                    </div>\n                  </TableR>\n                </table>\n                {distributionMechanism == \"instant\" && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    All tokens are released instantly<br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"lock\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Seconds Locked</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"locked-until\" onChange={target => setLockedUntil(target.target.value.toLocaleLowerCase())} value={lockedUntil} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      {percentageVested}% of the tokens are going to be vested {percentageVested < 100 && <span>and {100 - percentageVested}% are going to be released immediatly.</span>}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"linear-vesting\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Cliff duration</TableD>\n                        <TableD>Vest duration</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider width=\"120px\" type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"cliff-timestamp\" onChange={target => setCliffDuration(target.target.value.toLocaleLowerCase())} value={cliffDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"vesting-duration\" onChange={target => setVestingDuration(target.target.value.toLocaleLowerCase())} value={vestingDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      {percentageVested}% of the tokens are going to be vested {percentageVested < 100 && <span>and {100 - percentageVested}% are going to be released immediatly.</span>}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Deal listed on the mainpage?</h2>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }} onChange={event => setVisibility(event.target.value)}>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"public\"} value=\"public\" name=\"visibility\" /> True\n                  </td>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"private\"} value=\"private\" name=\"visibility\" /> False\n                  </td>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>{visibility == \"public\" ? \"Deal is going to be listed on the main page\" : \"Deal is going to be accessible over a generated link\"}</div>\n              </div>\n\n              <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\", paddingBottom: 10, paddingTop: 8 }}>\n                <div style={{ marginBottom: \"15px\" }}> You have in total {getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) + 1} transactions to confirm:</div>\n                <div>\n                  {\" \"}\n                  <span>- transaction to deploy the deal contract</span> {console.log(\"loading indicator 321\", loadingIndicator, loadingIndicator.includes(\"deploy-0\"))}\n                  {loadingIndicator.includes(\"deploy-0\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-0-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {accessMechanism != \"open\" && <span>- transaction to set up the access mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-1\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-1-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {requireKyc && <span>- transaction to set up the kyc module</span>}\n                  {loadingIndicator.includes(\"deploy-2\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-2-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {distributionMechanism != \"instant\" && <span>- transaction to set up the distribution mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-3\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-3-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {visibility != \"private\" && <span>- transaction to set up the deal visibility</span>}\n                  {loadingIndicator.includes(\"deploy-4\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-4-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to approve the created contract</span>\n                  {loadingIndicator.includes(\"deploy-5\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-5-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to send tokens to a smart contract</span>\n                  {loadingIndicator.includes(\"deploy-6\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-6-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <br></br>\n                <div style={{ textAlign: \"center\" }}>\n                  {createdTag && (\n                    <Text color=\"white\" fontWeight={300} fontSize=\"18px\">\n                      Your deal has been created. You can visit the deal at the following link <a href={`https://app.shinedao.finance/deals?tag=${createdTag}`}>https://app.shinedao.finance/deals?tag={createdTag}</a>\n                    </Text>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {false && allowance == 0 && (\n        <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 20 }}>\n          <Button onClick={() => handleLauncherApprove()}>Approve Launcher</Button>\n          <br></br>\n          <br></br>\n        </div>\n      )}\n      <br></br>\n      <br></br>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {formVisible && <Button onClick={() => handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddress)}>Launch Deal</Button>}\n        {!salesLoading && !activeContract && isWalletEnabled && !formVisible && !cardVisible && <Button onClick={() => setFormVisible(true)}>New Deal</Button>}\n        {!isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n      </div>\n      {false && <Button onClick={() => loadSeedSales()}>Load seed sales</Button>}\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", marginTop: 60 }}>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n          {console.log(\"seed sales data \", seedSalesData)}\n          {console.log(\"seed sales mapper  \", !activeContract, dealsVisible, !formVisible, !cardVisible, seedSalesData)}\n          {salesLoading && (\n            <div>\n              {\" \"}\n              <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n              <Text>Loading...</Text>\n            </div>\n          )}\n          {!activeContract &&\n            dealsVisible &&\n            !formVisible &&\n            !cardVisible &&\n            seedSalesData &&\n            seedSalesData.map(\n              (\n                {\n                  name,\n                  seedAddress,\n                  rate,\n                  offeredTokenName,\n                  offeredTokenTotalSupply,\n                  offeredTokenSymbol,\n                  acceptedTokenSymbol,\n                  acceptedTokenBalance,\n                  weiRaised,\n                  dealVisibility,\n                  startTime,\n                  endTime,\n                  acceptedTokenAddress,\n                  accessMechanism,\n                  distributionMechanism,\n                  offeredTokenAddress,\n                  percentageVested,\n                  cliffDuration,\n                  vestingDuration,\n                  cliffPeriod,\n                  vestingPeriod,\n                  vestedBalance,\n                  capPerAddressEnabled,\n                  capPerAddress,\n                  accessNFT,\n                  accessNTT,\n                  accessToken,\n                  totalOffered,\n                  tier1,\n                  tier2,\n                  tier3,\n                  tier4,\n                  tier1Cap,\n                  tier2Cap,\n                  tier3Cap,\n                  tier4Cap,\n                  accessTokenSymbol,\n                  accessTokenBalance,\n                  capForNTT,\n                  capForNFT,\n                  nftBalance,\n                  nttBalance,\n                  hasValidNtt,\n                  kycEnabled,\n                },\n                index\n              ) => {\n                return (\n                  <Card\n                    key={index}\n                    flexDirection=\"column\"\n                    alignItems=\"flex-start\"\n                    margin=\"5px\"\n                    padding=\"0px 0px 0px 35px\"\n                    clickable=\"true\"\n                    border=\"1px solid white\"\n                    width=\"350px\"\n                    height=\"400px\"\n                    background={index == seedIndex ? \"#2f2f2f\" : \"black\"}\n                    index={index}\n                    onClick={() => handleSeedClick(index, seedAddress)}\n                  >\n                    <div>\n                      {getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1Cap)}\n                      {false && <div>{getVisibilityStatus(dealVisibility, currentAccount)} </div>}\n                    </div>\n                    <h1>{name}</h1>\n                    {false && (\n                      <div>\n                        - {offeredTokenName} - {acceptedTokenSymbol} - {fromWei(weiRaised)}\n                      </div>\n                    )}\n                    <div>\n                      <b>Tokens:</b>\n                      <SmallerText>\n                        {\" \"}\n                        {offeredTokenSymbol} for {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                      </SmallerText>\n                    </div>\n                    <div>\n                      {\" \"}\n                      <b>Deal size</b>{\" \"}\n                      <SmallerText>\n                        {fromWei(totalOffered)} {offeredTokenSymbol} for max {fromFixed(rate) * fromWei(totalOffered)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                      </SmallerText>\n                    </div>\n                    <div>\n                      {\" \"}\n                      <b>Rate</b>{\" \"}\n                      <SmallerText>\n                        {fromFixed(rate)} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                      </SmallerText>\n                    </div>\n                    <div>\n                      <b> Start time</b> <SmallerText>{timeConverter(startTime)}</SmallerText>\n                    </div>\n                    <div>\n                      <b>End time </b>\n                      <SmallerText> {timeConverter(endTime)}</SmallerText>\n                    </div>\n                    {false && (\n                      <div>\n                        <b>Offered Token Address</b> <SmallerText>{substringAddress(offeredTokenAddress)}</SmallerText>\n                      </div>\n                    )}\n                    {false && (\n                      <div>\n                        <b>Accepted Token Address</b>\n                        <SmallerText> {substringAddress(acceptedTokenAddress)}</SmallerText>\n                      </div>\n                    )}{\" \"}\n                    {false && (\n                      <div>\n                        <b>Visibility </b>\n                        <SmallerText> {dealVisibility ? \"Public\" : \"Private\"}</SmallerText>\n                      </div>\n                    )}\n                    <div>\n                      <b>Access Type </b>\n                      <SmallerText> {getAccessStatus(accessMechanism)}</SmallerText>\n                    </div>\n                    <div>\n                      <b>Distribution Type </b>\n                      <SmallerText> {distributionMechanism}</SmallerText>\n                    </div>\n                  </Card>\n                );\n              }\n            )}\n        </div>\n\n        {activeContract && seedSalesData && console.log(\"activeContract xxx\", activeContract, seedIndex, typeof seedIndex, seedSalesData, typeof seedSalesData)}\n        {activeContract && seedSalesData && (\n          <SeedCard\n            setSeedSalesData={setSeedSalesData}\n            setActiveContract={setActiveContract}\n            setCardVisible={setCardVisible}\n            setDealsVisible={setDealsVisible}\n            setRefetchData={setRefetchData}\n            refetchData={refetchData}\n            getEligibilityStatus={getEligibilityStatus}\n            seedSaleData={seedSalesData && seedSalesData[activeContract ? 0 : seedIndex]}\n          ></SeedCard>\n        )}\n      </div>\n    </div>\n  );\n}\n","// inspiration from https://janosh.dev/blog/use-query-param\nimport { useState } from \"react\";\n\nconst handleParam = (key, value, options = {}) => {\n  // Required for SSR. Do nothing if location object is not available.\n  if (typeof location !== `undefined`) {\n    // historyMethod: push or replace (https://developer.mozilla.org/docs/Web/API/History)\n    // to either add to the browser history or replace the last item\n    const { historyMethod = `replace`, nullDeletes = true } = options;\n    // Parse current query string using the browser's URLSearchParams API.\n    const params = new URLSearchParams(location.search);\n    // If the passed value is undefined, check if the URL already contains\n    // a value for it. This is important on initial page load.\n    if (value === undefined) value = params.get(key);\n    // If the passed value is null and the nullDeletes option is\n    // set to true, delete the corresponding query parameter.\n    else if (value === null && nullDeletes) params.delete(key);\n    // Else use the provided key and value to set a new query parameter.\n    else params.set(key, value);\n    // Construct URL containing the updated query parameter(s).\n    let target = location.pathname + `?` + params.toString();\n    target = target.replace(/\\/?\\?$/, ``); // remove ? if search string is empty\n    history[historyMethod + `State`]({ path: value }, ``, target); // update the browser URL\n    return value;\n  }\n};\nexport const useQueryParam = (key, value, options) => {\n  // Relies on useState to trigger component rerenders on calls to setParam.\n  const [param, setParam] = useState(handleParam(key, value, options));\n  // override allows changing options for individual setQueryParam calls\n  const setter = (newValue, override) => setParam(handleParam(key, newValue, { ...options, ...override }));\n  return [param, setter];\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text, MobileDiv } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport { VeShnContainer } from \"../components/common/subpages/veShnContainer\";\nimport { StakingContainer } from \"components/common/subpages/stakingContainer\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { ControllerPanel } from \"components/common/subpages/controllerPanel\";\nimport { SeedContainer } from \"components/common/subpages/seed/seedContainer\";\nimport { useQueryParam } from \"../hooks/useQueryParam\";\n\nexport default ({}) => {\n  const [activeContract, setActiveContract] = useQueryParam(`tag`);\n  const { isWalletEnabled, chainId } = useContext(WalletContext);\n\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\" height=\"60px\">\n      <SEO title=\"seed\" description=\"Launch seed\" />\n      <Header />\n      <MobileDiv mobileWidth=\"100%\" width=\"90%\" background=\"\" style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\", paddingBottom: \"200px\" }}>\n        {!isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n\n        {chainId == \"0x13881\" || (process.env.NODE_ENV == \"development\" && chainId == \"0x7a69\") ? (\n          <SeedContainer activeContract={activeContract} setActiveContract={setActiveContract}></SeedContainer>\n        ) : (\n          isWalletEnabled && (\n            <div style={{ textAlign: \"center\" }}>\n              <br></br>\n              <Text style={{ marginTop: 80 }} fontWeight=\"600\">\n                Chain unsupported\n              </Text>\n              <br></br>\n              <p style={{ marginLeft: 80, marginRight: 80 }}>App is only available on Mumbai Network.</p>\n            </div>\n          )\n        )}\n      </MobileDiv>\n    </Layout>\n  );\n};\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}