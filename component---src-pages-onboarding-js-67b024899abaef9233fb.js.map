{"version":3,"sources":["webpack:///./src/utils/pagesUtils.js","webpack:///./src/pages/onboarding.js"],"names":["axios","require","decodeUrlFragment","hash","setAccessCode","setUsername","setAccId","setAvatarId","setTokenReward","result","split","reduce","item","parts","console","log","accessCode","get","process","SERVER_ADDRESS","then","response","data","username","id","avatar","catch","error","verifyAcc","access_token","setAddedToMetamask","currentPage","setCurrentPage","metamaskDetails","a","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","wasAdded","baseTokenReward","chainId","code","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","name","loadWeb3","setWalletStatus","setChainId","currentAccount","setCurrentAccount","web3","Web3","enable","on","handleChainChanged","accounts","initiateAccount","err","handleAccountsChanged","currentProvider","alert","_chainId","location","reload","length","authorizeAccountLink","REDIRECT_URI","useState","isWalletEnabled","contributorDetected","setContributorDetected","contributorError","setContributorError","registrationSuccess","setRegistrationSuccess","txnHash","setTxnHash","loading","setLoading","addedToMetamask","tokenReward","serverVerified","setServerVerified","messageVerified","setMessageVerified","setChainName","accId","avatarId","useEffect","pagesUtils","position","bottom","width","style","display","alignItems","flexDirection","justifyContent","borderRadius","boxShadow","src","onClick","textAlign","open","marginRight","marginLeft","userJoinedServer","href","target","margin","userIntroduced","marginTop","color","size","renderPage","correctNetwork","background","backgroundHover","colorOnHover","border","clickable","height","fontWeight","shineLogoV7","ProgressBar","animated","striped","variant","now","label"],"mappings":"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","file":"component---src-pages-onboarding-js-67b024899abaef9233fb.js","sourcesContent":["const axios = require(\"axios\");\nimport Web3 from \"web3\";\nconst baseTokenReward = 125;\n\nexport function isBackButtonVisible(currentPage, isWalletEnabled, username, serverVerified, correctNetwork) {\n  return false; //always hide the back button for now\n  if (isWalletEnabled && username && correctNetwork && currentPage > 1) {\n    return true;\n  }\n}\n\nexport function isNextButtonVisible(currentPage, isWalletEnabled, username, serverVerified, correctNetwork) {\n  console.log(\"server verified \", serverVerified);\n\n  if (currentPage == 1) {\n    return isWalletEnabled && username && correctNetwork;\n  } else if (currentPage == 2) {\n    return isWalletEnabled && username && correctNetwork && serverVerified;\n  } else if (currentPage == 3) {\n  }\n}\n\nexport function decodeUrlFragment(hash, setAccessCode, setUsername, setAccId, setAvatarId, setTokenReward) {\n  var result = hash.split(\"&\").reduce(function(result, item) {\n    var parts = item.split(\"=\");\n    result[parts[0]] = parts[1];\n    return result;\n  }, {});\n  console.log(result);\n  verifyAcc(result.access_token, setUsername, setAccId, setAvatarId, setTokenReward);\n  setAccessCode(result.access_token);\n}\nexport function claimReward(accessCode, setContributorDetected, currentAccount, username, accId, avatarId, setContributorError, setRegistrationSuccess,setLoading, setTxnHash) {\n  setLoading(true);\n  axios\n    .get(`${process.env.SERVER_ADDRESS}/claimReward?authorization=${accessCode}&address=${currentAccount}&username=${username}&discordId=${accId}&avatarId=${avatarId}`)\n    .then(function(response) {\n      if (response.data.contributorDetected == true) {\n        setContributorDetected(true);\n      } else if (response.data.registrationSuccess == false) {\n        setContributorError(true);\n      } else if (response.data.registrationSuccess == true) {\n        setRegistrationSuccess(true);\n        setTxnHash(response.data.txnHash)\n      }\n      setLoading(false);\n      console.log(\"claim \", response.data);\n    })\n    .catch(function(error) {\n      setLoading(false);\n\n      console.log(\"err5,\", error);\n    });\n}\n\nexport async function addToWatchlist(setAddedToMetamask, currentPage, setCurrentPage, setTokenReward, metamaskDetails) {\n  try {\n    // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n    const wasAdded = await window.ethereum.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n        options: {\n          address: metamaskDetails.address, // The address that the token is at.\n          symbol: metamaskDetails.symbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: metamaskDetails.decimals, // The number of decimals in the token\n          image: metamaskDetails.image, // A string url of the token logo\n        },\n      },\n    });\n\n    if (wasAdded) {\n      console.log(\"Thanks for your interest!\", wasAdded);\n      setAddedToMetamask(true);\n      setTokenReward(baseTokenReward * 4)\n      setCurrentPage(currentPage + 1);\n    } else {\n      console.log(\"Your loss!\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n\n  //\n}\nexport async function switchChain() {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0x89\" }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    console.log(\"code error \", switchError.code);\n    if (switchError.code === 4902) {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: \"0x89\",\n              chainName: \"Matic(Polygon) Mainnet\",\n              rpcUrls: [\"https://rpc-mainnet.matic.network\"],\n              blockExplorerUrls: [\"https://polygonscan.com\"],\n              nativeCurrency: { name: \"MATIC\", symbol: \"MATIC\", decimals: 18 } /* ... */,\n            },\n          ],\n        });\n      } catch (addError) {\n        // handle \"add\" error\n      }\n    }\n    // handle other \"switch\" errors\n  }\n}\n\nexport function verifyServer(accessCode, setTokenReward, setServerVerified) {\n  axios\n    .get(`${process.env.SERVER_ADDRESS}/verifyServer?authorization=${accessCode}`)\n    .then(function(response) {\n      console.log(response.data);\n      setTokenReward(baseTokenReward * 2);\n      console.log(\"type \", typeof response.data.userJoinedServer);\n      if (response.data.userJoinedServer == true) {\n        setServerVerified(true);\n      } else {\n        setServerVerified(false);\n      }\n    })\n    .catch(function(error) {\n      console.log(\"err5,\", error);\n    });\n}\n\nexport function verifyMessage(accessCode, setTokenReward, setMessageVerified) {\n  axios\n    .get(`${process.env.SERVER_ADDRESS}/verifyMessage?authorization=${accessCode}`)\n    .then(function(response) {\n      console.log(response.data);\n      setTokenReward(baseTokenReward * 3);\n      if (response.data.userIntroduced == true) {\n        setMessageVerified(true);\n      } else {\n        setMessageVerified(false);\n      }\n    })\n    .catch(function(error) {\n      console.log(\"err5,\", error);\n    });\n}\n\nexport function chainIdToName(chainId) {\n  console.log(\"chain id is \", chainId);\n  if (chainId === \"0x1\") {\n    return \"Ethereum\";\n  } else if (chainId === \"0x89\") {\n    return \"Polygon\";\n  } else {\n    return \"Unrecognized Chain\";\n  }\n}\n\nexport async function loadWeb3(setWalletStatus, setChainId, currentAccount, setCurrentAccount) {\n  let chainId;\n  if (window.ethereum) {\n    console.log(\"load 1\", window.web3);\n    window.web3 = new Web3(window.ethereum);\n    await window.ethereum.enable();\n\n    //await getEthBalance(setBalance);\n    setWalletStatus(true);\n\n    chainId = await ethereum.request({ method: \"eth_chainId\" });\n    setChainId(chainId);\n    ethereum.on(\"chainChanged\", handleChainChanged);\n\n    ethereum\n      .request({ method: \"eth_accounts\" })\n      .then(accounts => initiateAccount(accounts, currentAccount, setCurrentAccount))\n      .catch(err => {\n        // Some unexpected error.\n        // For backwards compatibility reasons, if no accounts are available,\n        // eth_accounts will return an empty array.\n        console.error(err);\n      });\n    ethereum.on(\"accountsChanged\", handleAccountsChanged);\n\n    console.log(\"load 1\", window.web3);\n  } else if (window.web3) {\n    // https://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8\n    window.web3 = new Web3(window.web3.currentProvider);\n    setWalletStatus(true);\n\n    chainId = await ethereum.request({ method: \"eth_chainId\" });\n    handleChainChanged(chainId);\n    ethereum.on(\"chainChanged\", handleChainChanged);\n\n    console.log(\"load 2\");\n  } else {\n    setWalletStatus(false);\n    window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    console.log(\"load 3\");\n  }\n}\n// No need to export as the function is only used in this file\nfunction handleChainChanged(_chainId) {\n  // We recommend reloading the page, unless you must do otherwise\n  window.location.reload(true);\n}\n// No need to export as the function is only used in this file\nfunction handleAccountsChanged(accounts, currentAccount) {\n  console.log(\"current account called 321\", accounts);\n  window.location.reload(true);\n}\n// No need to export as the function is only used in this file\nfunction initiateAccount(accounts, currentAccount, setCurrentAccount) {\n  if (accounts.length === 0) {\n    // MetaMask is locked or the user has not connected any accounts\n    console.log(\"Please connect to MetaMask.\");\n  } else if (accounts[0] !== currentAccount) {\n    setCurrentAccount(accounts[0]);\n    console.log(\"current account \", accounts[0], currentAccount);\n    // Do any other work!\n  }\n}\n// No need to export as the function is only used in this file\nfunction verifyAcc(accessCode, setUsername, setAccId, setAvatarId, setTokenReward) {\n  axios\n    .get(`${process.env.SERVER_ADDRESS}/verifyAcc?authorization=${accessCode}`)\n    .then(function(response) {\n      console.log(response.data);\n      setUsername(response.data.username);\n      setAccId(response.data.id);\n      setAvatarId(response.data.avatar);\n      setTokenReward(baseTokenReward);\n    })\n    .catch(function(error) {\n      console.log(\"err1,\", error);\n    });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport * as pagesUtils from \"../utils/pagesUtils\";\n\nimport shineLogoV7 from \"assets/illustrations/shine-logo-v7.png\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst introductionsChannel = \"https://discord.com/channels/785582893572948060/868084312455651348\";\nconst inviteLink = \"https://discord.com/invite/QkhbP7bZrj\";\nconst authorizeAccountLink = `https://discord.com/api/oauth2/authorize?response_type=token&client_id=893462659737985114&state=15773059ghq9183habn&scope=identify&redirect_uri=${process.env.REDIRECT_URI}`;\n\nexport default ({ location }) => {\n  const [isWalletEnabled, setWalletStatus] = useState();\n  const [contributorDetected, setContributorDetected] = useState();\n  const [contributorError, setContributorError] = useState();\n  const [registrationSuccess, setRegistrationSuccess] = useState(); // if user managed to register as contributor\n  const [txnHash, setTxnHash] = useState();\n\n  const [loading, setLoading] = useState(false); // if user managed to register as contributor\n\n  const [addedToMetamask, setAddedToMetamask] = useState();\n\n  const [tokenReward, setTokenReward] = useState();\n  const [serverVerified, setServerVerified] = useState();\n  const [messageVerified, setMessageVerified] = useState();\n\n  const [chainId, setChainId] = useState(1);\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const [chainName, setChainName] = useState(1);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [accessCode, setAccessCode] = useState();\n  const [username, setUsername] = useState();\n  const [accId, setAccId] = useState();\n  const [avatarId, setAvatarId] = useState();\n  useEffect(() => {\n    if (typeof accessCode !== \"undefined\") {\n      console.log(\"acc code 623\", accessCode);\n      pagesUtils.loadWeb3(setWalletStatus, setChainId, currentAccount, setCurrentAccount);\n    }\n  }, [accessCode]);\n\n  useEffect(() => {\n    pagesUtils.decodeUrlFragment(location.hash, setAccessCode, setUsername, setAccId, setAvatarId, setTokenReward);\n    console.log(\"acces code set\", accessCode);\n  }, [location.hash]);\n\n  useEffect(() => {\n    console.log(\"recognzied\", chainId);\n    setChainName(pagesUtils.chainIdToName(chainId));\n  }, [chainId]);\n\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\">\n      <SEO />\n      <Header />\n      <div style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}>\n        {false && (\n          <h1>\n            Contributor Onboarding/ Chain id : {chainId} and name : {chainName}\n          </h1>\n        )}\n        <br></br> <br></br>\n        {isWalletEnabled &&\n        username && ( //if wallet connected and user identified\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <p>\n                  Welcome onboard <b>{username}</b> !\n                </p>\n              </div>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <img style={{ borderRadius: \"10%\", boxShadow: \"0 0 7px 1px\" }} src={`https://cdn.discordapp.com/avatars/${accId}/${avatarId}.png`}></img>\n                <br></br> <br></br>\n                <br></br>\n              </div>\n            </div>\n          )}\n        {renderPage(\n          isWalletEnabled,\n          username,\n          accId,\n          avatarId,\n          accessCode,\n          setTokenReward,\n          serverVerified,\n          setServerVerified,\n          messageVerified,\n          setMessageVerified,\n          chainId,\n          addedToMetamask,\n          setAddedToMetamask,\n          contributorDetected,\n          setContributorDetected,\n          currentAccount,\n          contributorError,\n          setContributorError,\n          registrationSuccess,\n          setRegistrationSuccess,\n          currentPage,\n          setCurrentPage,\n          loading,\n          setLoading,\n          txnHash,\n          setTxnHash\n        )}\n        <br></br>\n        <br></br>\n        <br></br>\n        {false && isWalletEnabled && username && <p>Current page {currentPage}</p>}\n        <div style={{ display: \"flex\" }}>\n          {pagesUtils.isBackButtonVisible(currentPage, isWalletEnabled, username, serverVerified, chainId == \"0x89\") && (\n            <Button style={{ marginRight: 15 }} background=\"#dc3545\" backgroundHover=\"#f50f25\" colorOnHover=\"#fff\" onClick={() => setCurrentPage(currentPage - 1)}>\n              Back{\" \"}\n            </Button>\n          )}\n          {pagesUtils.isNextButtonVisible(currentPage, isWalletEnabled, username, serverVerified, chainId == \"0x89\") && (\n            <Button style={{ marginLeft: 15 }} background=\"#17a2b8\" backgroundHover=\"#04d4f5\" colorOnHover=\"#fff\" onClick={() => setCurrentPage(currentPage + 1)}>\n              Next{\" \"}\n            </Button>\n          )}\n        </div>\n        {!isWalletEnabled && (\n          <div style={{ width: \"220px\" }}>\n            <Card\n              onClick={() => pagesUtils.loadWeb3(setWalletStatus, setChainId, currentAccount, setCurrentAccount)}\n              borderRadius=\"4px\"\n              border=\"1px solid white\"\n              color=\"white\"\n              background=\"#1E1E1E\"\n              clickable\n              width=\"100%\"\n              height=\"48px\"\n              margin=\"5px 0 0 0\"\n            >\n              <Text fontWeight={800} color=\"white\">\n                CONNECT WALLET\n              </Text>\n            </Card>\n          </div>\n        )}\n        {isWalletEnabled && username && (\n          <p>\n            <br></br>\n            <br></br>\n            <b>Tokens earned: </b>\n            {tokenReward} <img style={{ height: \"23px\" }} src={shineLogoV7}></img>\n            {\" (SHN)\"}\n          </p>\n        )}\n        {isWalletEnabled && (\n          <div>\n            \n            <ProgressBar style={{ width: \"300px\" }} animated striped variant=\"success\" now={(currentPage / 4) * 100} label={` Step ${currentPage}`} />\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nfunction renderPage(\n  isWalletEnabled,\n  username,\n  accId,\n  avatarId,\n  accessCode,\n  setTokenReward,\n  serverVerified,\n  setServerVerified,\n  messageVerified,\n  setMessageVerified,\n  chainId,\n  addedToMetamask,\n  setAddedToMetamask,\n  contributorDetected,\n  setContributorDetected,\n  currentAccount, //eth address\n  contributorError,\n  setContributorError,\n  registrationSuccess,\n  setRegistrationSuccess,\n  currentPage,\n  setCurrentPage,\n  loading,\n  setLoading,\n  txnHash,\n  setTxnHash\n) {\n  if (currentPage == 1) {\n    return (\n      <div>\n        {console.log(\"ccc \", chainId)}\n        {isWalletEnabled && chainId != \"0x89\" && (\n          <div>\n            Chain Unsupported\n            <br></br>\n            <Button onClick={() => pagesUtils.switchChain()}>Switch to Polygon</Button>\n          </div>\n        )}\n        <br></br>\n        {isWalletEnabled && chainId == \"0x89\" && username && (\n          <div>Just by verifying discord you got yourself some free SHN. You can redeem them at the end. Please, continue with the next steps.</div>\n        ) //if wallet connected and user identified\n        }\n\n        {isWalletEnabled &&\n        chainId == \"0x89\" &&\n        !username && ( //if wallet connected but no user verified\n            <div>\n              <div>\n                <h2 style={{ textAlign: \"center\" }}>Your Discord Account</h2>\n                <br></br>\n                <p style={{ width: 900, textAlign: \"left\" }}>\n                  We need to pair your ETH address with your Discord account, so we can create an identity for you. This will enable contribution tracking and reward distribution\n                  process. Just by being active in the discord, you will earn some SHN tokens on weekly basis.\n                </p>\n              </div>\n              <br></br>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                {\" \"}\n                <Button onClick={() => window.open(authorizeAccountLink, \"_self\")}>Verify Discord</Button>\n              </div>\n            </div>\n          )}\n\n        {!isWalletEnabled && (\n          <p style={{ textAlign: \"center\" }}>\n            {\" \"}\n            {accessCode ? (\n              <div> \"Welcome back, please connect your wallet again\" </div>\n            ) : (\n              <div>\n                <h2>Become a contributor</h2>\n                <br></br>\n\n                <p style={{ width: 900 }}>\n                  In this onboarding process we are going to set up your contributor profile, so that you can start earning SHN automatically. We will introduce you to our tool\n                  stack and share recourses that will allow you to understand how you can <b>get involved regardless of your background, skill level, or availability.</b>\n                  <br></br>\n                  <br></br> If you’re successful in completing all the steps, you’ll earn your first 500 SHN 🌟\n                </p>\n              </div>\n            )}{\" \"}\n          </p>\n        )}\n      </div>\n    );\n  } else if (currentPage == 2) {\n    return (\n      <div>\n        {!serverVerified ? (\n          <div>\n            <div>\n              <h2 style={{ textAlign: \"center\" }}>Join ShineDAO Discord</h2>\n              <br></br>\n              <p>\n                If you haven’t yet, join our Discord server. This is our main communication tool. Once you read through <b>#🏁start-here channel</b>, please verify.\n                <br></br>\n                <br></br>\n                If you’re in the server already, you can just press verify.\n              </p>\n              <br></br>\n              <br></br>\n              <br></br>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button style={{ marginRight: 15 }} onClick={() => window.open(inviteLink, \"_blank\")}>\n                Join discord\n              </Button>\n              <Button style={{ marginLeft: 15 }} onClick={() => pagesUtils.verifyServer(accessCode, setTokenReward, setServerVerified)}>\n                Verify{\" \"}\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <p>Hoooray!!! You just won some more SHN. Please continue with the next steps.</p>\n        )}\n\n        <br></br>\n        <br></br>\n      </div>\n    );\n  } else if (currentPage == 3) {\n    return (\n      <div>\n        {(typeof messageVerified == \"undefined\" || messageVerified === false) && ( //type is undefined if request hasn't been sent. This is needed to handle the case of unsuccessful verification.\n          <div>\n            <h2 style={{ textAlign: \"center\" }}>Introduce Yourself</h2>\n            <br></br>\n            <div>\n              Its time to introduce yourself in the{\" \"}\n              <a href={introductionsChannel} target=\"_blank\">\n                {\" \"}\n                #introductions channel\n              </a>\n              . When you introduce yourself in the channel, come back to this page and click verify.\n              <br></br>\n              <br></br>\n              <div style={{ width: 900, textAlign: \"left\", margin: \"0 auto\" }}>\n                {\" \"}\n                <b>Please add the following info:</b>\n                <br></br>\n                <b>- Experience:</b> (Content / Marketing / Algorithms and Data Structures / Operations / etc)\n                <br></br>\n                <b>- Where do you see yourself contributing:</b> (Backend / Frontend / Business / Marketing / Project Management etc)\n                <br></br>\n                <b>- Specific Skills:</b> (Java, JS, HTML, CSS, Python, Solidity, Scheme, Prolog, C/C++, Dune Analytics, The Graph, etc)\n                <br></br>\n                <b>- Bandwidth:</b> (~10 hours / week) Let us know if you wish to have 1-1 introduction to ShineDAO. We'd also suggest joining our weekly community call every\n                Monday 5:30 pm UTC.\n              </div>\n              <br></br> <br></br>\n              <div style={{ textAlign: \"center\" }}>\n                <h4> Here are ShineDAO's intro resources if you need more information:</h4>\n                <br></br>\n                To be able to understand what how ShineDAO works please read our documentation{\" \"}\n                <a href=\"https://docs.shinedao.finance/\" target=\"_blank\">\n                  https://docs.shinedao.finance/\n                </a>\n                <br></br>\n                To be able to understand how to get involved please check out our notion board{\" \"}\n                <a href=\"https://forum.shinedao.finance/t/community-covenant/17\" target=\"_blank\">\n                  https://forum.shinedao.finance/t/community-covenant/17\n                </a>\n              </div>\n              <br></br>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button onClick={() => pagesUtils.verifyMessage(accessCode, setTokenReward, setMessageVerified)}>Verify </Button>\n            </div>\n          </div>\n        )}\n        {console.log(\"messageVerified\", messageVerified)}\n        {console.log(\"type of message\", typeof messageVerified)}\n        {console.log(\"type of messag1e\", typeof messageVerified === \"undefined\")}\n        {messageVerified === false && (\n          <div>\n            {\" \"}\n            <br></br>\n            <p style={{ textAlign: \"center\" }}>We could not detect your post. Please try again or post a message on discord by asking for help. </p>\n          </div>\n        )}\n        {messageVerified === true && (\n          <div>\n            <div>\n              {!addedToMetamask && (\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n                  <p>Before you can claim your tokens, lets add the tokens to Metamask.</p>\n\n                  <Button\n                    style={{ width: \"200px\" }}\n                    onClick={() =>\n                      pagesUtils.addToWatchlist(setAddedToMetamask, currentPage, setCurrentPage, setTokenReward, {\n                        address: \"0x53D76f967De13E7F95e90196438DCe695eCFA957\",\n                        symbol: \"SHN\",\n                        decimals: 18,\n                        image: \"https://i.ibb.co/mRKYzwB/shine-logo-256.png\",\n                      })\n                    }\n                  >\n                    Add SHN to Metamask{\" \"}\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  } else if ((currentPage = 4)) {\n    return (\n      <div>\n        {addedToMetamask && (\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <div>\n              <p style={{ textAlign: \"center\" }}>\n                Nice job! You are almost there! <br></br> After claiming your reward, you will be an official ShineDAO's contributor. The reward will be airdropped to your address\n                on Polygon/Matic chain in few minutes.\n              </p>\n            </div>\n            <div>\n              {registrationSuccess !== true && !loading && (\n                <Button\n                  style={{ width: \"200px\" }}\n                  onClick={() =>\n                    pagesUtils.claimReward(\n                      accessCode,\n                      setContributorDetected,\n                      currentAccount,\n                      username,\n                      accId,\n                      avatarId,\n                      setContributorError,\n                      setRegistrationSuccess,\n                      setLoading,\n                      setTxnHash\n                    )\n                  }\n                >\n                  Claim your SHN tokens{\" \"}\n                </Button>\n              )}\n              <br></br>\n              <div style={{ marginTop: 20, display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n                {\" \"}\n                <PulseLoader style={{}} color={\"#3f3d56\"} loading={loading} size={15} margin={2} />\n                {loading && (\n                  <p style={{ textAlign: \"center\" }}>\n                    <br></br>This may take few minutes. Please don't close the screen.\n                  </p>\n                )}\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            {contributorDetected && !loading && (\n              <p style={{ textAlign: \"center\" }}>It seems you are already a contributor. Only people who are not contributors can become contributors.</p>\n            )}\n\n            {contributorError === true && <p style={{ textAlign: \"center\" }}>Something went wrong. Plese try again later.</p>}\n\n            {registrationSuccess === true && <p style={{ textAlign: \"center\" }}>Congrats! Your tokens are on the way!</p>}\n            {txnHash && (\n              <p style={{ textAlign: \"center\" }}>\n                Transaction hash:{\" \"}\n                <a target=\"_blank\" href={`https://polygonscan.com/tx/${txnHash}`}>\n                  {txnHash}\n                </a>\n              </p>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}