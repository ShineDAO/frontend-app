{"version":3,"sources":["webpack:///./src/components/common/subpages/veShnContainer.js","webpack:///./src/components/common/HorizontalRuler/index.js","webpack:///./src/components/common/subpages/stakingContainer.js","webpack:///./src/components/common/subpages/controllerPanel.js"],"names":["axios","require","VeShnContainer","isWalletEnabled","chainId","refetchData","setRefetchData","loadingIndicator","setLoadingIndicator","useContext","ThemeContext","theme","console","log","getAddress","UNIX_timestamp","a","year","month","useState","locked","setLocked","shnBalance","setShnBalance","amountToLock","setAmountToLock","sliderValue","setSliderValue","desiredLockTimestamp","setDesiredLockTimestamp","allowance","setAllowance","lockError","setLockError","epoch","setEpoch","userPointHistory","setUserPointHistory","setEstimatedSlope","estimatedBias","setEstimatedBias","userAddress","setUserAddress","shinePrice","setShinePrice","getUsdValue","get","then","response","data","current_price","catch","error","handleChange","e","target","value","concat","createVeShnLock","veSHN","abi","veShnApprove","ShineToken","increaseAmountOfLockedShn","increaseUnlockTimeForLockedShn","veShnCheckpoint","withdrawShnFromVeShn","checkIsValidNumber","str","match","useEffect","getUserPointHistory","getOnlyUserAddress","updateHistory","slope","toWei","bias","Date","getTime","end","checkLocked","lockedBalance","getShineBalance","getAllowance","getEpoch","getLocked","toTimestamp","strDate","parse","targetDate","now","process","style","textAlign","width","margin","fontSize","fontWeight","fontFamily","href","roundTo2Decimals","onChange","amount","handleAmountToLock","filteredString","substring","filterAmountToLock","borderRadius","boder","marginLeft","onClick","cursor","includes","color","loading","size","handleAmountIncrease","type","min","max","handleApprove","handleUnlockTimeIncrease","handleCreateLock","parseInt","fromWei","toFixed","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","handleWithdraw","marginBottom","handleCheckpoint","HorizontalRuler","styled","hr","marginTop","height","opacity","StakingContainer","setRewardAddressesDropdown","setTokenSymbolsForDropdown","totalShnSupply","setTotalShnSupply","setPeriodFinish","setLastUpdateTime","setYieldRate","setYieldPerVeShnStored","setTotalVeShnParticipating","setTotalVeShnSupplyStored","setUserVeShnCheckpointed","setUserVeShnEndpointCheckpointed","setFractionParticipating","setYieldPerVeShn","setEarned","tvl","setTvl","location","text","successMessage","setSuccessMessage","rewardAddresses","setRewardAddresses","tokenSymbols","setTokenSymbols","dataForAdminPanel","setDataForAdminPanel","tokenPrices","setTokenPrices","url","audio","Audio","playing","setPlaying","play","pause","addEventListener","removeEventListener","useAudio","toggle","getTotalShnSupply","shnSupply","getPeriodFinish","veShnYieldDistributor","getLastUpdateTime","getYieldRate","getyieldPerVeFXSStored","getTotalVeFXSParticipating","getTotalVeFXSSupplyStored","getUserVeShnCheckpointed","getUserVeShnEndpointCheckpointed","getFractionParticipating","getYieldPerVeShn","getRewardAddresses","GeneralCheckpoint","getEarned","getRewardTokenSymbols","getDataForControlPanel","getSupply","coingeckoConfig","id","hardcodedPrice","rewardCheckpoint","rewardAddress","index","getYield","temp_arr","push","forEach","element","fetchData","yieldRate_arr","map","item","key","totalVeShnParticipating_arr","userVeShnCheckpointed_arr","handleRewardCheckpoint","earned_arr","display","justifyContent","alignItems","handleClaim","ControllerPanel","rewardAddressesDropdown","tokenSymbolsForDropdown","rewardToAdd","setRewardToAdd","selectedRewardAddress","setSelectedRewardAddress","emittedTokenAddress","setEmittedTokenAddress","userAddressToCheck","setUserAddressToCheck","lockedBalanceOfUser","setLockedBalanceOfUser","depositForAmount","setDepositForAmount","address","sync","handleRewardContractDeploy","ownerAddress","timelockAddress","veShnAddress","deployNewRewardContract","depositAddress","depositFor","generalCheckpointApprove","SHN","marginRight","handleSync","periodFinish_arr","timeConverter","lastUpdateTime_arr","yieldRate","yieldPerVeShnStored_arr","yieldPerVeShnStored","totalVeShnParticipating","totalVeShnSupplyStored_arr","totalVeShnSupplyStored","userVeShnCheckpointed","fractionParticipating_arr","fractionParticipating","yieldPerVeShn_arr","yieldPerVeShn","userVeShnEndpointCheckpointed_arr","userVeShnEndpointCheckpointed","addressToRemove","confirm","removeRewardContract","addressToApprove","veShnYieldDistributorApprove","name","notifyRewardAmount","rewardContractAddress","notifyReward","flexDirection","toLocaleLowerCase","for","getUserLockDetails","dateDiff","handleCheckpointApprove","handleDepositFor"],"mappings":"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","file":"b7728a38d80ca03629cec56a9087687761288620-6db5a88017a2fe6d4b1c.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\n\nimport { SliderContainer, Slider } from \"components/common/Container/index\";\nimport { MobileDiv, Button, Card, Text } from \"components/common\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nconst axios = require(\"axios\");\n\nimport {\n  createVeShnLock,\n  veShnApprove,\n  increaseUnlockTimeForLockedShn,\n  increaseAmountOfLockedShn,\n  withdrawShnFromVeShn,\n  getOnlyUserAddress,\n  veShnCheckpoint,\n  getShineBalance,\n  toWei,\n  fromWei,\n  getAllowance,\n  getEpoch,\n  getUserPointHistory,\n  getAddress,\n  checkLocked,\n  roundTo2Decimals,\n} from \"../../templates/utils\";\nimport veSHN from \"../../../../static/abi/veFXS\";\nimport ShineToken from \"../../../../static/abi/ShineToken\";\nimport { FontStyles } from \"components/common\";\n\nconst MAXTIME = 4 * 365 * 86400; // 4 years\nconst VOTE_WEIGHT_MULTIPLIER = 4 - 1; // 4x gives 300% boost at 4 years\n\nexport function VeShnContainer({ isWalletEnabled, chainId, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator }) {\n  //const [shnAddress, setShnAddress] = useState(getAddress(chainId,\"shnAddress\")); //not used becuase it doesnt work\n  //const [veShnAddress, setVeShnAddress] = useState(getAddress(chainId,\"veShnAddress\"));\n  const { theme } = useContext(ThemeContext);\n\n  console.log(\"chainxxx \", chainId, getAddress(chainId, \"shnAddress\"));\n\n  const [locked, setLocked] = useState();\n  const [shnBalance, setShnBalance] = useState(0);\n  const [amountToLock, setAmountToLock] = useState(0);\n  const [sliderValue, setSliderValue] = useState(90);\n  const [desiredLockTimestamp, setDesiredLockTimestamp] = useState();\n  const [allowance, setAllowance] = useState();\n  const [lockError, setLockError] = useState(false);\n  const [epoch, setEpoch] = useState();\n  const [userPointHistory, setUserPointHistory] = useState();\n\n  const [estimatedSlope, setEstimatedSlope] = useState();\n  const [estimatedBias, setEstimatedBias] = useState();\n  const [userAddress, setUserAddress] = useState();\n\n  const [shinePrice, setShinePrice] = useState(0);\n\n\n  //useEffect(() => {\n  //    setShnAddress(getAddress(chainId,\"shnAddress\"))\n  //    setVeShnAddress(getAddress(chainId,\"veShnAddress\"))\n  //}, [chainId]); not used because it didnt work as expected\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      async function updateHistory() {\n        getUserPointHistory(setUserPointHistory, await getOnlyUserAddress(), getAddress(chainId, \"veShnAddress\"), veSHN.abi);\n      }\n      updateHistory();\n    }\n  }, [epoch]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      let slope = toWei(amountToLock) / MAXTIME;\n      setEstimatedSlope(slope);\n      let bias = slope * (desiredLockTimestamp - new Date().getTime() / 1000);\n      setEstimatedBias(bias);\n      //console.log(\"estimated Slope and bias \", slope, bias, toWei(amountToLock), amountToLock, desiredLockTimestamp);\n      //console.log(\"lower timestamp \",new Date(desiredLockTimestamp* 1000).getTime(), new Date(locked.end * 1000).getTime(), locked.end, locked.end != 0 && new Date(desiredLockTimestamp*1000).getTime()  <= new Date(locked.end * 1000).getTime())\n      if (locked.end != 0 && new Date(desiredLockTimestamp * 1000).getTime()  <= new Date(locked.end * 1000).getTime()) {\n        setLockError(\"The time on the lock can only be increased.\");\n      }\n    }\n  }, [desiredLockTimestamp, amountToLock]);\n\n  async function getUsdValue(setShinePrice){\n    axios\n    .get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=shinedao\")\n    .then(function(response) {\n      // handle success\n      //console.log(\"priceeee \", response.data[0].current_price)\n      setShinePrice(response.data[0].current_price);\n    })\n    .catch(function(error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function() {\n      // always executed\n    });\n  }\n  useEffect(() => {\n    console.log(\"data \", isWalletEnabled, chainId, getAddress(chainId, \"veShnAddress\"));\n    if (isWalletEnabled == true) {\n      async function getLocked() {\n        setUserAddress(await getOnlyUserAddress());\n        const lockedBalance = await checkLocked(await getOnlyUserAddress(), getAddress(chainId, \"veShnAddress\"), veSHN.abi);\n        console.log(\"queried balance\", lockedBalance);\n        console.log(\"refetchData \", refetchData);\n        console.log(\"chainY \", getAddress(chainId, \"shnAddress\"));\n        setLocked(lockedBalance);\n        getShineBalance(setShnBalance, await getOnlyUserAddress(), ShineToken.abi, getAddress(chainId, \"shnAddress\"));\n        getAllowance(setAllowance, getAddress(chainId, \"veShnAddress\"), await getOnlyUserAddress(), ShineToken.abi, getAddress(chainId, \"shnAddress\"));\n        getEpoch(setEpoch, getAddress(chainId, \"veShnAddress\"), veSHN.abi);\n        await getUsdValue(setShinePrice)\n      }\n      getLocked();\n    }\n  }, [isWalletEnabled, refetchData, chainId]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=shinedao\")\n      .then(function(response) {\n        // handle success\n        //console.log(\"shine price \", response.data[0].current_price, fromWei(totalShnSupply));\n        setShinePrice(response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [refetchData]);\n\n  useEffect(() => {\n    function toTimestamp(strDate) {\n      var datum = Date.parse(strDate);\n      return datum / 1000;\n    }\n    if (sliderValue >= 7) {\n      let targetDate = new Date(Date.now() + sliderValue * 24 * 60 * 60 * 1000);\n      setDesiredLockTimestamp(toTimestamp(targetDate));\n      setLockError(false);\n    } else {\n      setLockError(\"Minimum lock duration is 7 days\");\n      let targetDate = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);\n      setDesiredLockTimestamp(toTimestamp(targetDate));\n    }\n  }, [sliderValue]);\n\n  function handleChange(e) {\n    setSliderValue(e.target.value);\n  }\n\n  async function handleCreateLock() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"createLock\"]));\n    await createVeShnLock(userAddress, veSHN.abi, getAddress(chainId, \"veShnAddress\"), amountToLock, desiredLockTimestamp, loadingIndicator, setLoadingIndicator, setLockError, setRefetchData);\n  }\n\n  function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  }\n\n  console.log(\"process env \", process.env.NODE_ENV);\n\n  async function handleApprove() {\n    setLoadingIndicator(loadingIndicator.concat([\"approve\"]));\n    await veShnApprove(userAddress, getAddress(chainId, \"veShnAddress\"), setAllowance, loadingIndicator, setLoadingIndicator, ShineToken.abi, getAddress(chainId, \"shnAddress\"));\n  }\n\n  async function handleAmountIncrease() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"increaseLockAmount\"]));\n    await increaseAmountOfLockedShn(userAddress, amountToLock, getAddress(chainId, \"veShnAddress\"), veSHN.abi, setLockError, setLocked, loadingIndicator, setLoadingIndicator, setShnBalance, setRefetchData, ShineToken.abi, getAddress(chainId, \"shnAddress\"));\n  }\n\n  async function handleUnlockTimeIncrease() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"increaseLockTime\"]));\n    await increaseUnlockTimeForLockedShn(userAddress, desiredLockTimestamp, getAddress(chainId, \"veShnAddress\"), veSHN.abi, setLockError, setLocked, loadingIndicator, setLoadingIndicator, setRefetchData);\n  }\n  async function handleCheckpoint() {\n    setLoadingIndicator(loadingIndicator.concat([\"veShnCheckpoint\"]));\n    await veShnCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"veShnAddress\"), veSHN.abi);\n  }\n\n  async function handleWithdraw() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"withdraw\"]));\n    await withdrawShnFromVeShn(userAddress, loadingIndicator, setLoadingIndicator, getAddress(chainId, \"veShnAddress\"), veSHN.abi, setLockError);\n  }\n\n  function checkIsValidNumber(str) {\n    var numberRegex = /^[0-9.]*$/;\n    if (str == \"\") {\n      return false;\n    } else if (str.match(numberRegex)) {\n      return true;\n      console.log(\"**Its Valid number\");\n    } else {\n      return false;\n      console.log(\"Its not Valid number\");\n    }\n  }\n  function handleAmountToLock(amount, setAmountToLock) {\n    console.log(\"typee \", checkIsValidNumber(amount), amount);\n    if (checkIsValidNumber(amount)) {\n      setAmountToLock(amount);\n    } else {\n      setAmountToLock(\"0\");\n    }\n  }\n\n  function filterAmountToLock(amountToLock) {\n    console.log(\"filteredAmount \", amountToLock, typeof amountToLock);\n    let filteredString = amountToLock;\n    while (filteredString[0] == \"0\") {\n      filteredString = filteredString.substring(1);\n    }\n    return filteredString;\n  }\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ width: \"85%\", margin:\"0 auto\" }}>\n        <div>\n          <div>\n            <br></br>\n            <Text fontSize=\"26px\" fontWeight=\"600\" fontFamily=\"ClashGrotesk-Regular\">veSHN Locking</Text>\n            <br></br>\n            <p>\n            veSHN contract allows users to lock & stake their SHN to get SEED access, SHN yield, project token distribution and governance rights. Benefits are proportional to the lock time. Find more info here:{\" \"}\n              <a href=\"https://docs.shinedao.finance/community/shn-token/veshn\" target=\"_self\">\n                docs\n              </a>\n              .\n            </p>\n          </div>\n          <div>\n            <SliderContainer>\n              <span>Balance:</span> {roundTo2Decimals(shnBalance)} SHN 🌟  ($ { roundTo2Decimals(shinePrice*shnBalance)})  { false && allowance}  <br></br> <br></br>\n              <span>{\"Enter amount to lock\"} </span>\n              <input onChange={target => handleAmountToLock(target.target.value, setAmountToLock)} value={filterAmountToLock(amountToLock)} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20 }}></input>{\" \"}\n              <b onClick={() => setAmountToLock(shnBalance)} style={{ cursor: \"pointer\" }}>\n                MAX\n              </b>\n              <br></br>\n              <br></br>\n              {locked &&\n                locked.amount > 0 &&\n                (loadingIndicator.includes(\"increaseLockAmount\") ? (\n                  <div>\n                    <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                    <br></br>\n                    <i>Confirming transaction, please wait.</i>\n                  </div>\n                ) : (\n                  allowance != 0 && <Button onClick={() => handleAmountIncrease()}>Increase Amount</Button>\n                ))}\n              <br></br>\n              <br></br>\n              <br></br><br></br>\n              <Slider type=\"range\" min=\"7\" max=\"1460\" value={sliderValue} onChange={handleChange}></Slider>\n              <input onChange={handleChange} value={sliderValue} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 35 }}></input>\n              <span>{\" Days \"} </span>\n              {sliderValue > 1460 && <Text color=\"#4F4FC8\">Maximum allowed lock time is 4 Years / 1460 days</Text>}\n              {lockError && <Text color=\"#4F4FC8\"> {lockError}</Text>}\n            </SliderContainer>{\" \"}\n            <Text >Please select the lock time:</Text>\n            <br></br>\n            {console.log(\"loading indicator \", loadingIndicator)}\n            {allowance == 0 &&\n              (loadingIndicator.includes(\"approve\") ? (\n                <div>\n                  <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                  <br></br>\n                  <i>Confirming transaction, please wait.</i>\n                </div>\n              ) : (\n                <div>\n                  <Button onClick={() => handleApprove()}>Approve</Button><br></br><br></br>\n                </div>\n              ))}\n            \n            {locked && locked.amount > 0 ? (\n              <div>\n                {loadingIndicator.includes(\"increaseLockTime\") ? (\n                  <div>\n                    <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                    <br></br>\n                    <i>Confirming transaction, please wait.</i>\n                  </div>\n                ) : (\n                  allowance != 0 &&  <Button onClick={() => handleUnlockTimeIncrease()}>Increase Lock Time</Button>\n                )}\n              </div>\n            ) : allowance != 0 && loadingIndicator.includes(\"createLock\") ? (\n              <div>\n                <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                <br></br>\n                <i>Confirming transaction, please wait.</i>\n              </div>\n            ) : (\n              isWalletEnabled && <Button onClick={() => handleCreateLock()}>Create Lock</Button>\n            )}\n            <br></br>\n            {console.log(\"amount to lock \", amountToLock, typeof amountToLock, amountToLock == 0, amountToLock == \"0\", amountToLock != \"0\")}\n            {amountToLock != \"0\" && estimatedBias && <Text > = {(parseInt(amountToLock) + VOTE_WEIGHT_MULTIPLIER * fromWei(estimatedBias)).toFixed(2)} veSHN</Text>}\n            {true && (\n              <div>\n                {locked && (\n                  <div>\n                    {console.log(\"locked end \", locked.end, typeof locked.end, locked.end == 0)}\n                    <br></br>Locked amount: <b>{roundTo2Decimals(fromWei(locked.amount))} SHN</b>\n                    {locked.end != 0 && (\n                      <div>\n                        Lock end:<b> {timeConverter(locked.end)}</b>\n                      </div>\n                    )}\n                    {userPointHistory && (\n                      <Text>\n                        <div>\n                          <span>Current locked weight</span> <b>{(parseInt(fromWei(locked.amount)) + VOTE_WEIGHT_MULTIPLIER * fromWei(userPointHistory.bias)).toFixed(2)} veSHN</b>\n                        </div>\n                        <i>Sometimes you need to refresh the page to see the latest data.</i>\n                      </Text>\n                    )}\n                    {console.log(\"time now in seconds\", new Date().getTime(), new Date(locked.end * 1000).getTime(), new Date().getTime() >= new Date(locked.end * 1000).getTime(), locked.end * 1000)}\n                    {locked.end != 0 && new Date().getTime() >= new Date(locked.end * 1000).getTime() && (\n                      <div>\n                        <br></br>\n                        {loadingIndicator.includes(\"withdraw\") ? (\n                          <div>\n                            <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                            <br></br>\n                            <i>Confirming transaction, please wait.</i>\n                          </div>\n                        ) : (\n                          <Button onClick={() => handleWithdraw()}>Withdraw</Button>\n                        )}\n                      </div>\n                    )}\n                    {false && (\n                      <div>\n                        <br></br>Epoch {epoch}\n                        <br></br> <br></br>User point history <br></br>\n                        <br></br>bias {userPointHistory && userPointHistory.bias} <br></br>slope {userPointHistory && userPointHistory.slope} <br></br>ts {userPointHistory && userPointHistory.ts} <br></br>blk {userPointHistory && userPointHistory.blk}{\" \"}\n                        <br></br>\n                        fxs_amt {userPointHistory && userPointHistory.fxs_amt} <br></br>estimatedSlope {estimatedSlope}\n                      </div>\n                    )}\n                    {\n                      //object with keys {0, 1, 2, 3, 4, bias, slope, ts, blk, fxs_amt}\n                    }\n                  </div>\n                )}\n                <br></br>\n                {loadingIndicator.includes(\"veShnCheckpoint\") ? (\n                  <div>\n                    <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                    <br></br>\n                    <i>Confirming transaction, please wait.</i>\n                  </div>\n                ) : (\n                  isWalletEnabled && userAddress === getAddress(chainId, \"controllerAddress\") && <Button style={{marginBottom:10}} onClick={() => handleCheckpoint()}>Checkpoint</Button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const HorizontalRuler = styled.hr`\n  width: ${({ width }) => width || \"90%\"};\n  color: ${({ theme }) => (theme === \"light\" ? \"#3F3D56\" : \"#fff\")};\n  background-color: ${({ color,theme }) => color || (theme === \"light\" ? \"#3F3D56\" : \"#fff\")};\n  border-color: ${({ theme }) => (theme === \"light\" ? \"#3F3D56\" : \"#fff\")};\n  margin-top: ${({ marginTop }) => marginTop || \"50px\"};\n  margin: 0 auto;\n  height: ${({ height }) => height || \"\"};\n  opacity: ${({ opacity }) => opacity || \"\"};\n  margin-bottom: ${({ marginBottom }) => marginBottom || \"\"};\n\n`;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  getYield,\n  getOnlyUserAddress,\n  getEarned,\n  getYieldPerVeShn,\n  getUserVeShnEndpointCheckpointed,\n  getFractionParticipating,\n  getUserVeShnCheckpointed,\n  rewardCheckpoint,\n  getTotalVeFXSSupplyStored,\n  getTotalVeFXSParticipating,\n  getyieldPerVeFXSStored,\n  getYieldRate,\n  getLastUpdateTime,\n  getPeriodFinish,\n  getTotalShnSupply,\n  fromWei,\n  getAddress,\n  roundTo2Decimals,\n  getRewardAddresses,\n  getRewardTokenSymbols,\n  //getUserVeShnCheckpointedInAllAddresses,\n  getDataForControlPanel,\n} from \"../../templates/utils\";\nimport { MobileDiv, Button, Card, Text } from \"components/common\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport veSHN from \"../../../../static/abi/veFXS\";\nimport ShineToken from \"../../../../static/abi/ShineToken\";\nimport veShnYieldDistributor from \"../../../../static/abi/veFXSYieldDistributorV4\";\nimport GeneralCheckpoint from \"../../../../static/abi/GeneralCheckpoint\";\nconst axios = require(\"axios\");\n\nexport function StakingContainer({ isWalletEnabled, chainId, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator, setRewardAddressesDropdown, setTokenSymbolsForDropdown }) {\n  //const [veShnYieldDistributorAddress, setVeShnYieldDistributorAddress] = useState(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  //const [veShnAddress, setVeShnAddress] = useState(getAddress(chainId, \"veShnAddress\")); //didnt work as expected\n\n  const [totalShnSupply, setTotalShnSupply] = useState(\"0\");\n  const [periodFinish, setPeriodFinish] = useState(\"\");\n  const [lastUpdateTime, setLastUpdateTime] = useState(\"\");\n  const [yieldRate, setYieldRate] = useState(\"\");\n  const [yieldPerVeShnStored, setYieldPerVeShnStored] = useState(\"\");\n  const [totalVeShnParticipating, setTotalVeShnParticipating] = useState(\"\");\n  const [totalVeShnSupplyStored, setTotalVeShnSupplyStored] = useState(\"\");\n  const [userVeShnCheckpointed, setUserVeShnCheckpointed] = useState(\"\");\n  //const [userVeShnCheckpointedAllAddresses, setUserVeShnCheckpointedAllAddresses] = useState(\"\");\n  const [userVeShnEndpointCheckpointed, setUserVeShnEndpointCheckpointed] = useState(\"\");\n  const [fractionParticipating, setFractionParticipating] = useState(\"\");\n  const [yieldPerVeShn, setYieldPerVeShn] = useState(\"\");\n  const [earned, setEarned] = useState(\"\");\n  const [userAddress, setUserAddress] = useState();\n  const [tvl, setTvl] = useState();\n  const [successMessage, setSuccessMessage] = useState({ location: \"\", text: \"\" }); //location rewardClaim/\n  const [rewardAddresses, setRewardAddresses] = useState();\n  const [tokenSymbols, setTokenSymbols] = useState();\n\n  const [dataForAdminPanel, setDataForAdminPanel] = useState();\n  const [tokenPrices, setTokenPrices] = useState([]);\n\n  //useEffect(() => {\n  //  setVeShnYieldDistributorAddress(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  //  setVeShnAddress(getAddress(chainId, \"veShnAddress\"));\n  //}, [chainId]);\n\n  const useAudio = url => {\n    const [audio] = useState(new Audio(url));\n    const [playing, setPlaying] = useState(false);\n\n    const toggle = () => setPlaying(!playing);\n\n    useEffect(() => {\n      playing ? audio.play() : audio.pause();\n    }, [playing]);\n\n    useEffect(() => {\n      audio.addEventListener(\"ended\", () => setPlaying(false));\n      return () => {\n        audio.removeEventListener(\"ended\", () => setPlaying(false));\n      };\n    }, []);\n\n    return [playing, toggle];\n  };\n  const [playing, toggle] = useAudio(\"https://themushroomkingdom.net/sounds/wav/sm64/sm64_exit_course_pause_menu.wav\");\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      async function getSupply() {\n        const shnSupply = await getTotalShnSupply(veSHN.abi, getAddress(chainId, \"veShnAddress\"));\n        console.log(\"shnSupply balance\", shnSupply);\n        setTotalShnSupply(shnSupply);\n        setUserAddress(await getOnlyUserAddress());\n        setPeriodFinish(await getPeriodFinish(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setLastUpdateTime(await getLastUpdateTime(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldRate(await getYieldRate(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldPerVeShnStored(await getyieldPerVeFXSStored(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTotalVeShnParticipating(await getTotalVeFXSParticipating(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTotalVeShnSupplyStored(await getTotalVeFXSSupplyStored(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setUserVeShnCheckpointed(await getUserVeShnCheckpointed(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setUserVeShnEndpointCheckpointed(await getUserVeShnEndpointCheckpointed(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setFractionParticipating(await getFractionParticipating(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldPerVeShn(await getYieldPerVeShn(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setRewardAddresses(await getRewardAddresses(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi));\n        setEarned(await getEarned(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTokenSymbols(await getRewardTokenSymbols(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi, veShnYieldDistributor.abi, ShineToken.abi));\n        //setUserVeShnCheckpointedAllAddresses(await getUserVeShnCheckpointedInAllAddresses(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi));\n        setDataForAdminPanel(await getDataForControlPanel(await getOnlyUserAddress(), getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi, veShnYieldDistributor.abi));\n      }\n      getSupply();\n    }\n  }, [isWalletEnabled, refetchData, chainId]);\n\n  useEffect(() => {\n    if (typeof rewardAddresses != \"undefined\") {\n      setRewardAddressesDropdown(rewardAddresses); //dropdown is used for notifying reward in the control panel\n    }\n  }, [rewardAddresses]);\n\n  useEffect(() => {\n    if (typeof tokenSymbols != \"undefined\") {\n      setTokenSymbolsForDropdown(tokenSymbols); //used to show symbols in dropdown\n    }\n  }, [tokenSymbols]);\n\n  const coingeckoConfig = {\n    // we already have a template for 10 reward tokens. Fill them out when new yield distributor is launched.\n    \"1\": { id: \"fill_in_when_known\", hardcodedPrice: 0.0039 },\n    \"2\": { id: \"fill_in_when_known\", hardcodedPrice: 323 },\n    \"3\": { id: \"fill_in_when_known\", hardcodedPrice: 4242 },\n    \"4\": { id: \"fill_in_when_known\", hardcodedPrice: 5523 },\n    \"5\": { id: \"fill_in_when_known\", hardcodedPrice: 1 },\n    \"6\": { id: \"fill_in_when_known\", hardcodedPrice: 1 },\n    \"7\": { id: \"fill_in_when_known\", hardcodedPrice: 1 },\n    \"8\": { id: \"fill_in_when_known\", hardcodedPrice: 1 },\n    \"9\": { id: \"fill_in_when_known\", hardcodedPrice: 1 },\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=shinedao`)\n      .then(function(response) {\n        // handle success\n        console.log(\"shine price \", response.data[0].current_price, fromWei(totalShnSupply));\n        setTvl(fromWei(totalShnSupply) * response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [totalShnSupply, refetchData]);\n\n  useEffect(() => {\n    if (typeof tokenSymbols != \"undefined\") {\n      async function fetchData() {\n        let temp_arr = [];\n        axios\n          .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=shinedao`)\n          .then(function(response) {\n            // handle success\n            console.log(\"shine price \", response.data[0].current_price, fromWei(totalShnSupply));\n            console.log(\"token symbols\", tokenSymbols);\n            temp_arr.push(response.data[0].current_price);\n          })\n          .catch(function(error) {\n            // handle error\n            console.log(error);\n          })\n          .then(function() {\n            // always executed\n\n            tokenSymbols.forEach((element, index) => {\n              if (index != 0) {\n                temp_arr.push(coingeckoConfig[index].hardcodedPrice);\n              }\n            });\n\n            setTokenPrices(temp_arr);\n            // note that first emmited token should always be SHN and here its excluded\n          });\n      }\n      fetchData();\n    }\n  }, [tokenSymbols]);\n\n  async function handleRewardCheckpoint() {\n    setLoadingIndicator(loadingIndicator.concat([\"rewardCheckpoint\"]));\n    await rewardCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi);\n  }\n  async function handleRewardCheckpoint_DEPRECATED() {\n    setLoadingIndicator(loadingIndicator.concat([\"rewardCheckpoint\"]));\n    await rewardCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"veShnYieldDistributorAddress\"), veShnYieldDistributor.abi);\n  }\n  async function handleClaim(rewardAddress, index) {\n    setLoadingIndicator(loadingIndicator.concat([`claim-${index}`]));\n    await getYield(rewardAddress, userAddress, loadingIndicator, setLoadingIndicator, index, setRefetchData, getAddress(chainId, \"veShnYieldDistributorAddress\"), veShnYieldDistributor.abi, setSuccessMessage, toggle);\n  }\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ width: \"85%\", margin: \"0 auto\" }}>\n        <div>\n          <div>\n            <br></br>\n            <Text fontSize=\"26px\" fontWeight=\"600\" fontFamily=\"ClashGrotesk-Regular\">\n              veSHN Staking\n            </Text>\n            <br></br>\n            <p>If you have locked your SHN and got veSHN, you are eligible for veSHN staking.</p>\n          </div>\n          {isWalletEnabled ? <div style={{fontSize:\"large\", color:\"#5f7bcc\"}}>\n            <span>Total Value Locked: ${roundTo2Decimals(tvl)}</span>\n            <br></br>\n            <span>% of SHN locked: {roundTo2Decimals((fromWei(totalShnSupply) / 21000000) * 100)}%</span><br></br><br></br>\n          </div>:<span style={{color:\"#5f7bcc\"}}>Connect your wallet to see the stats.</span>}\n          <div>\n            <table>\n              <tbody>\n                <tr>\n                  {console.log(\"token prices \", tokenPrices)}\n                  <th>APR Base/Max</th>\n                  {false && isWalletEnabled && (\n                    <td>\n                      {roundTo2Decimals((((fromWei(yieldRate) * 365 * 86400) / fromWei(totalVeShnParticipating)) * 100) / 4)}% / {roundTo2Decimals(((fromWei(yieldRate) * 365 * 86400) / fromWei(totalVeShnParticipating)) * 100)}%\n                    </td>\n                  )}\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    typeof dataForAdminPanel.yieldRate_arr != \"undefined\" &&\n                    dataForAdminPanel.yieldRate_arr.map((item, index) => {\n                      return (\n                        <td key={`apr-${index}`}>\n                          {roundTo2Decimals((((fromWei(dataForAdminPanel.yieldRate_arr[index]) * 365 * 86400 * tokenPrices[index]) / (fromWei(dataForAdminPanel.totalVeShnParticipating_arr[index] )* tokenPrices[0])) * 100) / 4)}% /{\" \"}\n                          {roundTo2Decimals(((fromWei(dataForAdminPanel.yieldRate_arr[index]) * 365 * 86400 * tokenPrices[index]) / (fromWei(dataForAdminPanel.totalVeShnParticipating_arr[index] )* tokenPrices[0])) * 100)}%\n                          {\n                            //{false && roundTo2Decimals((((fromWei(dataForAdminPanel.yieldRate_arr[index]) * 365 * 86400) / fromWei(dataForAdminPanel.totalVeShnParticipating_arr[index])) * 100) / 4)}% /{\" \"}\n                          }\n                          {\n                            //{false && roundTo2Decimals(((fromWei(dataForAdminPanel.yieldRate_arr[index]) * 365 * 86400) / fromWei(dataForAdminPanel.totalVeShnParticipating_arr[index])) * 100)}%\n                          }{\" \"}\n                        </td>\n                      );\n                    })}\n                </tr>\n\n                <tr>\n                  <td>User veSHN Staked</td>\n                  {\n                    //<td>{isWalletEnabled && roundTo2Decimals(fromWei(userVeShnCheckpointed))}</td>\n                  }\n                  {false && isWalletEnabled && userVeShnCheckpointedAllAddresses && userVeShnCheckpointedAllAddresses.map(userVeShnCheckpointed => <td>{roundTo2Decimals(fromWei(userVeShnCheckpointed))}</td>)}\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    typeof dataForAdminPanel.userVeShnCheckpointed_arr != \"undefined\" &&\n                    dataForAdminPanel.userVeShnCheckpointed_arr.map((item, index) => {\n                      return <td key={`total-staked-${index}`}>{roundTo2Decimals(fromWei(item))}</td>;\n                    })}\n                </tr>\n                <tr>\n                  <td>Reward token Symbol</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    typeof dataForAdminPanel.userVeShnCheckpointed_arr != \"undefined\" &&\n                    dataForAdminPanel.userVeShnCheckpointed_arr.map((item, index) => {\n                      return <td key={`token-symbol-${index}`}>{tokenSymbols[index]}</td>;\n                    })}\n                </tr>\n                <tr></tr>\n                <tr></tr>\n              </tbody>\n            </table>\n            {loadingIndicator.includes(\"rewardCheckpoint\") ? (\n              <div>\n                <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                <br></br>\n                <i>Confirming transaction, please wait.</i>\n              </div>\n            ) : (\n              isWalletEnabled && <Button onClick={() => handleRewardCheckpoint()}>Stake</Button>\n            )}\n            <br></br>\n            <span>\n              {\" \"}\n              {isWalletEnabled && (\n                <i>\n                  After you create, add or increase the timelock you need to <b>stake</b> again in order to account the new amount for the reward.\n                </i>\n              )}{\" \"}\n            </span>\n            <br></br> <br></br> <br></br>\n            {isWalletEnabled && <Text fontWeight=\"800\">Earned so far:</Text>}\n            <br></br>\n            <div>\n              {isWalletEnabled &&\n                (successMessage.location != \"rewardClaim\" ? (\n                  typeof dataForAdminPanel != \"undefined\" &&\n                  typeof dataForAdminPanel.earned_arr != \"undefined\" &&\n                  dataForAdminPanel.earned_arr.map((item, index) => {\n                    return (\n                      <div key={`reward-claim-${index}`} style={{ marginBottom: 10, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <Text fontWeight=\"600\">\n                          {roundTo2Decimals(fromWei(dataForAdminPanel.earned_arr[index]))} {tokenSymbols[index]} 🌟 (${roundTo2Decimals(tokenPrices[index] * fromWei(dataForAdminPanel.earned_arr[index]))})\n                        </Text>\n                        {loadingIndicator.includes(`claim-${index}`) ? (\n                          <div>\n                            <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                            <br></br>\n                            <i>Confirming transaction, please wait.</i>\n                          </div>\n                        ) : (\n                          isWalletEnabled &&\n                          successMessage.location != \"rewardClaim\" && (\n                            <Button style={{ width: 150 }} onClick={() => handleClaim(rewardAddresses[index], index)}>\n                              Claim\n                            </Button>\n                          )\n                        )}\n                      </div>\n                    );\n                  })\n                ) : (\n                  <Text color=\"green\" fontWeight=\"600\">\n                    Reward claimed!\n                  </Text>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { MobileDiv, Button, Card, Text } from \"components/common\";\nimport {\n  timeConverter,\n  getTotalShnSupply,\n  fromWei,\n  toWei,\n  getOnlyUserAddress,\n  sync,\n  getAddress,\n  notifyReward,\n  veShnYieldDistributorApprove,\n  getDataForControlPanel,\n  removeRewardContract,\n  deployNewRewardContract,\n  checkLocked,\n  dateDiff,\n  depositFor,\n  roundTo2Decimals,\n  generalCheckpointApprove\n} from \"../../templates/utils\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport veShnYieldDistributor from \"../../../../static/abi/veFXSYieldDistributorV4\";\nimport veSHN from \"../../../../static/abi/veFXS\";\nimport SHN from \"../../../../static/abi/ShineToken\";\nimport GeneralCheckpoint from \"../../../../static/abi/GeneralCheckpoint\";\n\nexport function ControllerPanel({ isWalletEnabled, chainId, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator, rewardAddressesDropdown, tokenSymbolsForDropdown }) {\n  const { theme } = useContext(ThemeContext);\n  const [totalShnSupply, setTotalShnSupply] = useState(\"0\");\n\n  const [userAddress, setUserAddress] = useState();\n  const [rewardToAdd, setRewardToAdd] = useState();\n  const [successMessage, setSuccessMessage] = useState();\n\n  const [amountToApprove, setAmountToApprove] = useState();\n  const [selectedRewardAddress, setSelectedRewardAddress] = useState();\n  const [dataForAdminPanel, setDataForAdminPanel] = useState();\n\n  const [emittedTokenAddress, setEmittedTokenAddress] = useState();\n  const [userAddressToCheck, setUserAddressToCheck] = useState();\n  const [lockedBalanceOfUser, setLockedBalanceOfUser] = useState();\n  const [depositForAmount, setDepositForAmount] = useState(0);\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      async function getSupply() {\n        const shnSupply = await getTotalShnSupply(veSHN.abi, getAddress(chainId, \"veShnAddress\"));\n        console.log(\"shnSupply balance\", shnSupply);\n        setTotalShnSupply(shnSupply);\n        setUserAddress(await getOnlyUserAddress());\n        setSelectedRewardAddress(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n        setDataForAdminPanel(await getDataForControlPanel(await getOnlyUserAddress(), getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi, veShnYieldDistributor.abi));\n      }\n      getSupply();\n    }\n  }, [isWalletEnabled, refetchData, chainId]);\n\n  async function handleSync(address) {\n    setLoadingIndicator(loadingIndicator.concat([\"sync\"]));\n    await sync(await getOnlyUserAddress(), setRefetchData, loadingIndicator, setLoadingIndicator, veShnYieldDistributor.abi, address);\n  }\n\n  function handleRewardChange(notifyRewardAmount) {\n    setRewardToAdd(notifyRewardAmount);\n  }\n\n  function handleNotifyReward(notifyRewardAmount, rewardContractAddress) {\n    notifyReward(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, rewardContractAddress, veShnYieldDistributor.abi, setSuccessMessage, notifyRewardAmount);\n  }\n\n  function handleApprove(amountToApprove) {\n    setAmountToApprove(amountToApprove);\n  }\n\n  function handleAmountToApprove(addressToApprove) {\n    veShnYieldDistributorApprove(userAddress, veShnYieldDistributor.abi, addressToApprove, loadingIndicator, setLoadingIndicator, SHN.abi);\n  }\n\n  function handleRewardContractRemoval(addressToRemove) {\n    if (confirm(\"Are you sure that you want to remove the reward contract address? Note that this action disables the people to claim the reward from the UI, however, if there are any rewards remaining they can be claimed over the smart contract.\")) {\n      removeRewardContract(userAddress, addressToRemove, getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi, veShnYieldDistributor.abi);\n    }\n  }\n  function handleDropdownAddressChange(address) {\n    console.log(\"handleDropdownAddressChange \", address);\n    setSelectedRewardAddress(address);\n  }\n\n  function handleRewardContractDeploy(ownerAddress, emittedTokenAddress, timelockAddress, veShnAddress) {\n    deployNewRewardContract(ownerAddress, emittedTokenAddress, timelockAddress, veShnAddress, GeneralCheckpoint.abi, getAddress(chainId, \"GeneralCheckpointAddress\"));\n  }\n\n  async function getUserLockDetails(address) {\n    setUserAddressToCheck(address);\n    const lockedBalance = await checkLocked(address, getAddress(chainId, \"veShnAddress\"), veSHN.abi);\n    setLockedBalanceOfUser(lockedBalance);\n  }\n\n  async function handleDepositFor(depositAddress, amount) {\n    await depositFor(userAddress, depositAddress, amount, getAddress(chainId, \"veShnAddress\"), getAddress(chainId, \"GeneralCheckpointAddress\"), GeneralCheckpoint.abi, getAddress(chainId, \"shnAddress\"));\n  }\n  async function handleCheckpointApprove() {\n    await generalCheckpointApprove(userAddress, getAddress(chainId, \"GeneralCheckpointAddress\"), SHN.abi, getAddress(chainId, \"shnAddress\"))\n  }\n\n  \n  return (\n    <div>\n      {\" \"}\n      <br></br>\n      <HorizontalRuler theme={theme}></HorizontalRuler>\n      {console.log(\"controllerAddress \", getAddress(chainId, \"controllerAddress\"))}\n      {console.log(\"dataForAdminPanel \", dataForAdminPanel)}\n      {userAddress === getAddress(chainId, \"controllerAddress\") && (\n        <div style={{ textAlign: \"center\" }}>\n          {rewardAddressesDropdown &&\n            rewardAddressesDropdown.map((address, index) => {\n              return (\n                <div key={`address-${index}`} style={{ display: \"inline-block\", marginRight: 10, marginTop: 10 }}>\n                  {loadingIndicator.includes(\"sync\") ? (\n                    <div>\n                      <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                      <br></br>\n                      <i>Confirming transaction, please wait.</i>\n                    </div>\n                  ) : (\n                    <Button onClick={() => handleSync(address)}>Sync</Button>\n                  )}\n                </div>\n              );\n            })}\n          <div style={{ width: \"86%\", margin: \"0px auto\" }}>\n            <table>\n              <tbody>\n                <tr>\n                  <td>Period finish</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.periodFinish_arr != \"undefined\" &&\n                    dataForAdminPanel.periodFinish_arr.map((item, index) => {\n                      return <td key={`period-finish-${index}`}>{timeConverter(item)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>Last update time</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.lastUpdateTime_arr != \"undefined\" &&\n                    dataForAdminPanel.lastUpdateTime_arr.map((item, index) => {\n                      return <td key={`last-update-time-${index}`}>{timeConverter(item)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>Yield Rate</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.yieldRate_arr != \"undefined\" &&\n                    dataForAdminPanel.yieldRate_arr.map((yieldRate, index) => {\n                      return <td key={`yieldRate-${index}`}>{fromWei(yieldRate)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>Yield Per veSHN Stored</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.yieldPerVeShnStored_arr != \"undefined\" &&\n                    dataForAdminPanel.yieldPerVeShnStored_arr.map((yieldPerVeShnStored, index) => {\n                      return <td key={`yield-per-veSHN-${index}`}>{fromWei(yieldPerVeShnStored)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>Total veSHN Participating</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.totalVeShnParticipating_arr != \"undefined\" &&\n                    dataForAdminPanel.totalVeShnParticipating_arr.map((totalVeShnParticipating, index) => {\n                      return <td key={`total-veSHN-participating-${index}`}>{fromWei(totalVeShnParticipating)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>Total veSHN Supply Stored</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.totalVeShnSupplyStored_arr != \"undefined\" &&\n                    dataForAdminPanel.totalVeShnSupplyStored_arr.map((totalVeShnSupplyStored, index) => {\n                      return <td key={`total-veShn-supply-stored-${index}`}>{fromWei(totalVeShnSupplyStored)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>User veSHN Staked</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.userVeShnCheckpointed_arr != \"undefined\" &&\n                    dataForAdminPanel.userVeShnCheckpointed_arr.map((userVeShnCheckpointed, index) => {\n                      return <td key={`user-staked-${index}`}>{fromWei(userVeShnCheckpointed)}</td>;\n                    })}\n                </tr>\n                <tr>\n                  <td>Fraction Participating</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.fractionParticipating_arr != \"undefined\" &&\n                    dataForAdminPanel.fractionParticipating_arr.map((fractionParticipating, index) => {\n                      return <td key={`fraction-participating-${index}`}>{fractionParticipating / 10000}%</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>Yield Per VeShn</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.yieldPerVeShn_arr != \"undefined\" &&\n                    dataForAdminPanel.yieldPerVeShn_arr.map((yieldPerVeShn, index) => {\n                      return <td key={`yield-per-veSHN-${index}`}>{fromWei(yieldPerVeShn)}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>userVeShnEndpointCheckpointed</td>\n                  {isWalletEnabled &&\n                    typeof dataForAdminPanel != \"undefined\" &&\n                    dataForAdminPanel.userVeShnEndpointCheckpointed_arr != \"undefined\" &&\n                    dataForAdminPanel.userVeShnEndpointCheckpointed_arr.map((userVeShnEndpointCheckpointed, index) => {\n                      return <td key={`user-endpoint-checkpointed-${index}`}>{userVeShnEndpointCheckpointed}</td>;\n                    })}\n                </tr>\n\n                <tr>\n                  <td>User Address</td>\n                  <td>{isWalletEnabled && userAddress}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <br></br> <Button onClick={() => handleRewardContractRemoval(selectedRewardAddress)}>Remove contract from the UI</Button>\n          <br></br>\n          <br></br> <Button onClick={() => handleAmountToApprove(selectedRewardAddress)}>Approve Contract</Button> <br></br>\n          <br></br>\n          <select onChange={target => handleDropdownAddressChange(target.target.value)} name=\"reward-addresses\" id=\"reward-addresses\">\n            {rewardAddressesDropdown &&\n              tokenSymbolsForDropdown &&\n              rewardAddressesDropdown.map((item, index) => {\n                return <option key={`dropdown-address-${index}`} value={item}>{`${item}-${tokenSymbolsForDropdown[index]}`}</option>;\n              })}\n          </select>\n          <input onChange={target => handleRewardChange(target.target.value)} value={rewardToAdd} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20 }}></input> <br></br>\n          <br></br> <Button onClick={() => handleNotifyReward(rewardToAdd, selectedRewardAddress)}>Notify Reward</Button>\n          <br></br>\n          <br></br>\n          <HorizontalRuler theme={theme}></HorizontalRuler>\n          <br></br>\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <Text fontSize=\"26px\" fontWeight=\"600\" fontFamily=\"ClashGrotesk-Regular\">\n              New Reward Contract\n            </Text>\n            <br></br>\n            <br></br>\n            <input name=\"emitted-token-address\" onChange={target => setEmittedTokenAddress(target.target.value.toLocaleLowerCase())} value={emittedTokenAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"69%\" }}></input>{\" \"}\n            <label for=\"emitted-token-address\">Enter address of the reward token: </label>\n            <br></br>\n            <Button onClick={async () => handleRewardContractDeploy(await getOnlyUserAddress(), emittedTokenAddress, await getOnlyUserAddress(), getAddress(chainId, \"veShnAddress\"))}>Deploy new reward contract</Button>\n            <br></br>\n            <i>Note that you need to notify the reward into the deployed contract soon after deploying. Otherwise the UI will be broken.</i>\n          </div>\n          <div>\n            <HorizontalRuler theme={theme}></HorizontalRuler>\n            <br></br>\n            <Text fontSize=\"26px\" fontWeight=\"600\" fontFamily=\"ClashGrotesk-Regular\">\n              Deposit veSHN for someone else\n            </Text>\n            <br></br>\n            <br></br>\n            <label for=\"deposit-for-address\">Address:</label>\n            <input name=\"deposit-for-address\" onChange={target => getUserLockDetails(target.target.value.toLocaleLowerCase())} value={userAddressToCheck} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"40%\" }}></input>{\" \"}\n            {lockedBalanceOfUser && lockedBalanceOfUser.end != 0 && (\n              <div>\n                Lock amount:<b> {roundTo2Decimals(fromWei(lockedBalanceOfUser.amount))}</b>\n                <br></br>\n                Lock end:<b> {timeConverter(lockedBalanceOfUser.end)}</b>\n                <br></br>\n                Lock end in years from now: {dateDiff(new Date(), new Date(timeConverter(lockedBalanceOfUser.end)))} years <br></br> <br></br>\n                <label for=\"deposit-for-amount\">SHN Amount:</label>\n                <input name=\"deposit-for-amount\" onChange={target => setDepositForAmount(toWei(target.target.value))} value={fromWei(depositForAmount)} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"40%\" }}></input>\n                <br></br> <br></br>\n                <Button onClick={() => handleCheckpointApprove()}>Approve</Button>\n                <br></br> <br></br>\n                <Button onClick={() => handleDepositFor(userAddressToCheck, depositForAmount)}>Deposit veSHN For</Button>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}