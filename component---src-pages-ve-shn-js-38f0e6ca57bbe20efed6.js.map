{"version":3,"sources":["webpack:///./src/components/common/subpages/veShnContainer.js","webpack:///./src/components/common/subpages/stakingContainer.js","webpack:///./src/components/common/HorizontalRuler/index.js","webpack:///./src/components/common/subpages/controllerPanel.js","webpack:///./src/pages/veSHN.js"],"names":["VeShnContainer","isWalletEnabled","chainId","refetchData","setRefetchData","loadingIndicator","setLoadingIndicator","console","log","getAddress","UNIX_timestamp","a","year","month","useState","locked","setLocked","shnBalance","setShnBalance","amountToLock","setAmountToLock","sliderValue","setSliderValue","desiredLockTimestamp","setDesiredLockTimestamp","allowance","setAllowance","lockError","setLockError","epoch","setEpoch","userPointHistory","setUserPointHistory","setEstimatedSlope","estimatedBias","setEstimatedBias","userAddress","setUserAddress","handleChange","e","target","value","concat","createVeShnLock","veSHN","abi","veShnApprove","ShineToken","increaseAmountOfLockedShn","increaseUnlockTimeForLockedShn","veShnCheckpoint","withdrawShnFromVeShn","useEffect","getUserPointHistory","getOnlyUserAddress","updateHistory","slope","toWei","bias","Date","getTime","checkLocked","lockedBalance","getShineBalance","getAllowance","getEpoch","getLocked","strDate","targetDate","now","parse","process","style","textAlign","width","fontWeight","href","roundTo2Decimals","onChange","borderRadius","boder","marginLeft","onClick","cursor","type","min","max","color","includes","loading","size","margin","handleApprove","amount","handleAmountIncrease","handleUnlockTimeIncrease","handleCreateLock","parseInt","fromWei","toFixed","end","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","handleWithdraw","handleCheckpoint","axios","require","StakingContainer","totalShnSupply","setTotalShnSupply","setPeriodFinish","setLastUpdateTime","yieldRate","setYieldRate","setYieldPerVeShnStored","totalVeShnParticipating","setTotalVeShnParticipating","setTotalVeShnSupplyStored","userVeShnCheckpointed","setUserVeShnCheckpointed","setUserVeShnEndpointCheckpointed","setFractionParticipating","setYieldPerVeShn","earned","setEarned","shinePrice","setShinePrice","tvl","setTvl","rewardCheckpoint","veShnYieldDistributor","getYield","getTotalShnSupply","shnSupply","getPeriodFinish","getLastUpdateTime","getYieldRate","getyieldPerVeFXSStored","getTotalVeFXSParticipating","getTotalVeFXSSupplyStored","getUserVeShnCheckpointed","getUserVeShnEndpointCheckpointed","getFractionParticipating","getYieldPerVeShn","getEarned","getSupply","get","then","response","data","current_price","catch","error","handleRewardCheckpoint","handleClaim","HorizontalRuler","styled","hr","theme","marginTop","ControllerPanel","useContext","ThemeContext","periodFinish","lastUpdateTime","yieldPerVeShnStored","totalVeShnSupplyStored","userVeShnEndpointCheckpointed","fractionParticipating","yieldPerVeShn","sync","handleSync","timeConverter","location","WalletContext","setWalletStatus","setChainId","currentAccount","setCurrentAccount","position","bottom","height","title","description","mobileWidth","background","display","alignItems","flexDirection","paddingBottom","marginRight"],"mappings":"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","file":"component---src-pages-ve-shn-js-38f0e6ca57bbe20efed6.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n\nimport { SliderContainer, Slider } from \"components/common/Container/index\";\nimport { MobileDiv, Button, Card, Text } from \"components/common\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport {\n  createVeShnLock,\n  veShnApprove,\n  increaseUnlockTimeForLockedShn,\n  increaseAmountOfLockedShn,\n  withdrawShnFromVeShn,\n  getOnlyUserAddress,\n  veShnCheckpoint,\n  getShineBalance,\n  toWei,\n  fromWei,\n  getAllowance,\n  getEpoch,\n  getUserPointHistory,\n  getAddress,\n  checkLocked,\n  roundTo2Decimals\n} from \"../../templates/utils\";\nimport veSHN from \"../../../../static/abi/veFXS\";\nimport ShineToken from \"../../../../static/abi/ShineToken\";\n\nconst MAXTIME = 4 * 365 * 86400; // 4 years\nconst VOTE_WEIGHT_MULTIPLIER = 4 - 1; // 4x gives 300% boost at 4 years\n\n\n\nexport function VeShnContainer({ isWalletEnabled,chainId, refetchData, setRefetchData,loadingIndicator,setLoadingIndicator }) {\n  //const [shnAddress, setShnAddress] = useState(getAddress(chainId,\"shnAddress\")); //not used becuase it doesnt work\n  //const [veShnAddress, setVeShnAddress] = useState(getAddress(chainId,\"veShnAddress\"));\n\n\n  console.log(\"chainxxx \", chainId, getAddress(chainId,\"shnAddress\"))\n  \n  const [locked, setLocked] = useState();\n  const [shnBalance, setShnBalance] = useState(0);\n  const [amountToLock, setAmountToLock] = useState(0);\n  const [sliderValue, setSliderValue] = useState(90);\n  const [desiredLockTimestamp, setDesiredLockTimestamp] = useState();\n  const [allowance, setAllowance] = useState();\n  const [lockError, setLockError] = useState(false);\n  const [epoch, setEpoch] = useState();\n  const [userPointHistory, setUserPointHistory] = useState();\n\n  const [estimatedSlope, setEstimatedSlope] = useState();\n  const [estimatedBias, setEstimatedBias] = useState();\n  const [userAddress, setUserAddress] = useState();\n\n  //useEffect(() => {\n  //    setShnAddress(getAddress(chainId,\"shnAddress\"))\n  //    setVeShnAddress(getAddress(chainId,\"veShnAddress\"))\n  //}, [chainId]); not used because it didnt work as expected\n\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      async function updateHistory() {\n        getUserPointHistory(setUserPointHistory, await getOnlyUserAddress(), getAddress(chainId,\"veShnAddress\"), veSHN.abi);\n      }\n      updateHistory();\n    }\n  }, [epoch]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      let slope = toWei(amountToLock) / MAXTIME;\n      setEstimatedSlope(slope);\n      let bias = slope * (desiredLockTimestamp - new Date().getTime() / 1000);\n      setEstimatedBias(bias);\n      console.log(\"estimated Slope and bias \", slope, bias, toWei(amountToLock), amountToLock, desiredLockTimestamp);\n    }\n  }, [desiredLockTimestamp, amountToLock]);\n\n  useEffect(() => {\n    console.log(\"data \", isWalletEnabled, chainId, getAddress(chainId,\"veShnAddress\"));\n    if (isWalletEnabled == true) {\n      async function getLocked() {\n        setUserAddress(await getOnlyUserAddress());\n        const lockedBalance = await checkLocked(await getOnlyUserAddress(),getAddress(chainId,\"veShnAddress\"), veSHN.abi);\n        console.log(\"queried balance\", lockedBalance);\n        console.log(\"refetchData \", refetchData);\n        console.log(\"chainY \", getAddress(chainId,\"shnAddress\"));\n        setLocked(lockedBalance);\n        getShineBalance(setShnBalance, await getOnlyUserAddress(), ShineToken.abi, getAddress(chainId,\"shnAddress\"));\n        getAllowance(setAllowance, getAddress(chainId,\"veShnAddress\"), await getOnlyUserAddress(), ShineToken.abi, getAddress(chainId,\"shnAddress\"));\n        getEpoch(setEpoch, getAddress(chainId,\"veShnAddress\"), veSHN.abi);\n      }\n      getLocked();\n    }\n  }, [isWalletEnabled, refetchData, chainId]);\n\n  useEffect(() => {\n    function toTimestamp(strDate) {\n      var datum = Date.parse(strDate);\n      return datum / 1000;\n    }\n    let targetDate = new Date(Date.now() + sliderValue * 24 * 60 * 60 * 1000);\n    setDesiredLockTimestamp(toTimestamp(targetDate));\n  }, [sliderValue]);\n\n  function handleChange(e) {\n    setSliderValue(e.target.value);\n  }\n\n  \n\n  async function handleCreateLock() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"createLock\"]));\n    await createVeShnLock(userAddress, veSHN.abi, getAddress(chainId,\"veShnAddress\"), amountToLock, desiredLockTimestamp, loadingIndicator, setLoadingIndicator, setLockError, setRefetchData);\n  }\n\n  function timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  }\n\n  console.log(\"process env \", process.env.NODE_ENV);\n\n  async function handleApprove() {\n    setLoadingIndicator(loadingIndicator.concat([\"approve\"]));\n    await veShnApprove(userAddress, getAddress(chainId,\"veShnAddress\"), setAllowance, loadingIndicator, setLoadingIndicator, ShineToken.abi, getAddress(chainId,\"shnAddress\"));\n  }\n\n  async function handleAmountIncrease() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"increaseLockAmount\"]));\n    await increaseAmountOfLockedShn(userAddress, amountToLock, getAddress(chainId,\"veShnAddress\"), veSHN.abi, setLockError, setLocked, loadingIndicator, setLoadingIndicator, setShnBalance, setRefetchData, ShineToken.abi, getAddress(chainId,\"shnAddress\"));\n  }\n\n  async function handleUnlockTimeIncrease() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"increaseLockTime\"]));\n    await increaseUnlockTimeForLockedShn(userAddress, desiredLockTimestamp, getAddress(chainId,\"veShnAddress\"), veSHN.abi, setLockError, setLocked, loadingIndicator, setLoadingIndicator, setRefetchData);\n  }\n  async function handleCheckpoint() {\n    setLoadingIndicator(loadingIndicator.concat([\"veShnCheckpoint\"]));\n    await veShnCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId,\"veShnAddress\"), veSHN.abi);\n  }\n\n  async function handleWithdraw() {\n    setLockError(false);\n    setLoadingIndicator(loadingIndicator.concat([\"withdraw\"]));\n    await withdrawShnFromVeShn(userAddress,loadingIndicator, setLoadingIndicator, getAddress(chainId,\"veShnAddress\"), veSHN.abi, setLockError);\n  }\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ width: \"80%\" }}>\n        <div>\n          <div>\n            <br></br>\n            <Text fontWeight=\"600\">veSHN</Text>\n            <p>\n              veSHN is a governance modelled after Curve's veCRV and Frax's veFXS vote escrow model where the users with longer lock time receive higher weighted voting power. For more info please check the{\" \"}\n              <a href=\"https://docs.shinedao.finance/community/shn-token/veshn\" target=\"_self\">\n                docs\n              </a>\n              .\n            </p>\n          </div>\n          <div>\n            <SliderContainer>\n              <span>Balance:</span> {roundTo2Decimals(shnBalance)} SHN 🌟 (allowance {allowance} {allowance > 0 ? \"true\" : \"false\"}) <br></br> <br></br>\n              <span>{\"Enter amount to lock\"} </span>\n              <input onChange={target => setAmountToLock(target.target.value)} value={amountToLock} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20 }}></input>{\" \"}\n              <b onClick={() => setAmountToLock(shnBalance)} style={{ cursor: \"pointer\" }}>\n                MAX\n              </b>{\" \"}\n              <br></br>\n              <br></br>\n              <Slider type=\"range\" min=\"7\" max=\"1460\" value={sliderValue} onChange={handleChange}></Slider>\n              <input onChange={handleChange} value={sliderValue} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 35 }}></input>\n              <span>{\" Days \"} </span>\n              {sliderValue > 1460 && <Text color=\"red\">Maximum allowed lock time is 4 Years / 1460 days</Text>}\n              {lockError && <Text color=\"red\"> {lockError}</Text>}\n            </SliderContainer>{\" \"}\n            <Text>Please select the lock time:</Text>\n            <br></br>\n            {console.log(\"loading indicator \", loadingIndicator)}\n            {allowance == 0 &&\n              (loadingIndicator.includes(\"approve\") ? (\n                <div>\n                  <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                  <br></br>\n                  <i>Confirming transaction, please wait.</i>\n                </div>\n              ) : (\n                <div>\n                  <Button onClick={() => handleApprove()}>Approve</Button>\n                </div>\n              ))}\n            <br></br>\n            <br></br>\n            {locked && locked.amount > 0 ? (\n              <div>\n                {loadingIndicator.includes(\"increaseLockAmount\") ? (\n                  <div>\n                    <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                    <br></br>\n                    <i>Confirming transaction, please wait.</i>\n                  </div>\n                ) : (\n                  <Button onClick={() => handleAmountIncrease()}>Increase Amount</Button>\n                )}\n                <br></br>\n                <br></br>\n                {loadingIndicator.includes(\"increaseLockTime\") ? (\n                  <div>\n                    <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                    <br></br>\n                    <i>Confirming transaction, please wait.</i>\n                  </div>\n                ) : (\n                  <Button onClick={() => handleUnlockTimeIncrease()}>Increase Lock Time</Button>\n                )}\n              </div>\n            ) : allowance != 0 && loadingIndicator.includes(\"createLock\") ? (\n              <div>\n                <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                <br></br>\n                <i>Confirming transaction, please wait.</i>\n              </div>\n            ) : (\n              isWalletEnabled && <Button onClick={() => handleCreateLock()}>Create Lock</Button>\n            )}\n            <br></br>\n            {estimatedBias && <Text> = {(parseInt(amountToLock) + VOTE_WEIGHT_MULTIPLIER * fromWei(estimatedBias)).toFixed(2)} veSHN</Text>}\n            {true && (\n              <div>\n                {locked && (\n                  <div>\n                    {\" \"}\n                    <br></br>Locked amount: <b>{roundTo2Decimals(fromWei(locked.amount))} SHN</b>\n                    <br></br>Lock end:<b> {timeConverter(locked.end)}</b>\n                    {userPointHistory && (\n                      <Text>\n                        <div><span>Current locked weight</span> <b>{(parseInt(fromWei(locked.amount)) + VOTE_WEIGHT_MULTIPLIER * fromWei(userPointHistory.bias)).toFixed(2)} veSHN</b></div>\n                      </Text>\n                    )}\n                    {console.log(\"time now in seconds\", new Date().getTime(), new Date(locked.end * 1000).getTime(), new Date().getTime() >= new Date(locked.end * 1000).getTime(), locked.end * 1000)}\n                    {new Date().getTime() / 100 >= new Date(locked.end * 1000).getTime() && (\n                      <div>\n                        <br></br>\n                        {loadingIndicator.includes(\"withdraw\") ? (\n                          <div>\n                            <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                            <br></br>\n                            <i>Confirming transaction, please wait.</i>\n                          </div>\n                        ) : (\n                          <Button onClick={() => handleWithdraw()}>Withdraw</Button>\n                        )}\n                      </div>\n                    )}\n                    {false && (\n                      <div>\n                        <br></br>Epoch {epoch}\n                        <br></br> <br></br>User point history <br></br>\n                        <br></br>bias {userPointHistory && userPointHistory.bias} <br></br>slope {userPointHistory && userPointHistory.slope} <br></br>ts {userPointHistory && userPointHistory.ts} <br></br>blk {userPointHistory && userPointHistory.blk}{\" \"}\n                        <br></br>\n                        fxs_amt {userPointHistory && userPointHistory.fxs_amt} <br></br>estimatedSlope {estimatedSlope}\n                      </div>\n                    )}\n                    {\n                      //object with keys {0, 1, 2, 3, 4, bias, slope, ts, blk, fxs_amt}\n                    }\n                  </div>\n                )}\n                <br></br>\n                {loadingIndicator.includes(\"veShnCheckpoint\") ? (\n                  <div>\n                    <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                    <br></br>\n                    <i>Confirming transaction, please wait.</i>\n                  </div>\n                ) : (\n                  isWalletEnabled && <Button onClick={() => handleCheckpoint()}>Checkpoint</Button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  getYield,\n  getOnlyUserAddress,\n  getEarned,\n  getYieldPerVeShn,\n  getUserVeShnEndpointCheckpointed,\n  getFractionParticipating,\n  getUserVeShnCheckpointed,\n  rewardCheckpoint,\n  getTotalVeFXSSupplyStored,\n  getTotalVeFXSParticipating,\n  getyieldPerVeFXSStored,\n  getYieldRate,\n  getLastUpdateTime,\n  getPeriodFinish,\n  getTotalShnSupply,\n  fromWei,\n  getAddress,\n  roundTo2Decimals,\n} from \"../../templates/utils\";\nimport { MobileDiv, Button, Card, Text } from \"components/common\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport veSHN from \"../../../../static/abi/veFXS\";\nimport veShnYieldDistributor from \"../../../../static/abi/veFXSYieldDistributorV4\";\nconst axios = require(\"axios\");\n\nexport function StakingContainer({ isWalletEnabled, chainId, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator }) {\n  //const [veShnYieldDistributorAddress, setVeShnYieldDistributorAddress] = useState(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  //const [veShnAddress, setVeShnAddress] = useState(getAddress(chainId, \"veShnAddress\")); //didnt work as expected\n\n  const [totalShnSupply, setTotalShnSupply] = useState(\"0\");\n  const [periodFinish, setPeriodFinish] = useState(\"\");\n  const [lastUpdateTime, setLastUpdateTime] = useState(\"\");\n  const [yieldRate, setYieldRate] = useState(\"\");\n  const [yieldPerVeShnStored, setYieldPerVeShnStored] = useState(\"\");\n  const [totalVeShnParticipating, setTotalVeShnParticipating] = useState(\"\");\n  const [totalVeShnSupplyStored, setTotalVeShnSupplyStored] = useState(\"\");\n  const [userVeShnCheckpointed, setUserVeShnCheckpointed] = useState(\"\");\n  const [userVeShnEndpointCheckpointed, setUserVeShnEndpointCheckpointed] = useState(\"\");\n  const [fractionParticipating, setFractionParticipating] = useState(\"\");\n  const [yieldPerVeShn, setYieldPerVeShn] = useState(\"\");\n  const [earned, setEarned] = useState(\"\");\n  const [userAddress, setUserAddress] = useState();\n  const [shinePrice, setShinePrice] = useState();\n  const [tvl, setTvl] = useState();\n\n  //useEffect(() => {\n  //  setVeShnYieldDistributorAddress(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  //  setVeShnAddress(getAddress(chainId, \"veShnAddress\"));\n  //}, [chainId]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      async function getSupply() {\n        const shnSupply = await getTotalShnSupply(veSHN.abi, getAddress(chainId, \"veShnAddress\"));\n        console.log(\"shnSupply balance\", shnSupply);\n        setTotalShnSupply(shnSupply);\n        setUserAddress(await getOnlyUserAddress());\n        setPeriodFinish(await getPeriodFinish(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setLastUpdateTime(await getLastUpdateTime(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldRate(await getYieldRate(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldPerVeShnStored(await getyieldPerVeFXSStored(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTotalVeShnParticipating(await getTotalVeFXSParticipating(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTotalVeShnSupplyStored(await getTotalVeFXSSupplyStored(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setUserVeShnCheckpointed(await getUserVeShnCheckpointed(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setUserVeShnEndpointCheckpointed(await getUserVeShnEndpointCheckpointed(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setFractionParticipating(await getFractionParticipating(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldPerVeShn(await getYieldPerVeShn(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setEarned(await getEarned(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n      }\n      getSupply();\n    }\n  }, [isWalletEnabled, refetchData, chainId]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=shinedao\")\n      .then(function(response) {\n        // handle success\n        console.log(\"shine price \", response.data[0].current_price, fromWei(totalShnSupply));\n        setShinePrice(response.data[0].current_price);\n        setTvl(fromWei(totalShnSupply) * response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [totalShnSupply, refetchData]);\n\n  async function handleRewardCheckpoint() {\n    setLoadingIndicator(loadingIndicator.concat([\"rewardCheckpoint\"]));\n    await rewardCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"veShnYieldDistributorAddress\"), veShnYieldDistributor.abi);\n  }\n  async function handleClaim() {\n    setLoadingIndicator(loadingIndicator.concat([\"claim\"]));\n    await getYield(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, getAddress(chainId, \"veShnYieldDistributorAddress\"), veShnYieldDistributor.abi);\n  }\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ width: \"80%\" }}>\n        <div>\n          <div>\n            <br></br>\n            <Text fontWeight=\"600\">veSHN Staking</Text>\n            <p>If you have locked your SHN and got veSHN, you are eligible for veSHN staking.</p>\n          </div>\n          <div>\n            <table>\n              <tbody>\n                <tr>\n                  <th>APR Base/Max</th>\n                  {isWalletEnabled && (\n                    <th>\n                      { roundTo2Decimals((((fromWei(yieldRate) * 365 * 86400) / fromWei(totalVeShnParticipating)) * 100) / 4)}% / {roundTo2Decimals(((fromWei(yieldRate) * 365 * 86400) / fromWei(totalVeShnParticipating)) * 100 )}%\n                    </th>\n                  )}\n                </tr>\n                <tr>\n                  <td>TVL</td>\n                  <td>${roundTo2Decimals(tvl)}</td>\n                </tr>\n                <tr>\n                  <td>% of SHN locked</td>\n                  <td>{isWalletEnabled && roundTo2Decimals((fromWei(totalShnSupply) / 21000000) * 100)}%</td>\n                </tr>\n                <tr>\n                  <td>User veSHN Checkpointed</td>\n                  <td>{isWalletEnabled && roundTo2Decimals(fromWei(userVeShnCheckpointed))}</td>\n                </tr>\n              </tbody>\n            </table>\n            {loadingIndicator.includes(\"rewardCheckpoint\") ? (\n              <div>\n                <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                <br></br>\n                <i>Confirming transaction, please wait.</i>\n              </div>\n            ) : (\n              isWalletEnabled && <Button onClick={() => handleRewardCheckpoint()}>CHECKPOINT</Button>\n            )}\n            <br></br>\n            <span> {isWalletEnabled && <i>After you create, add or increase the timelock you need to checkpoint in order to account the new amount for the reward.</i>} </span>\n            <br></br> <br></br> <br></br>\n            {loadingIndicator.includes(\"claim\") ? (\n              <div>\n                <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n                <br></br>\n                <i>Confirming transaction, please wait.</i>\n              </div>\n            ) : (\n              isWalletEnabled && <Button onClick={() => handleClaim()}>CLAIM</Button>\n            )}\n            <br></br> <br></br>\n            {isWalletEnabled && (\n              <Text fontWeight=\"600\">\n                Earned so far: {fromWei(earned)} SHN 🌟 (${shinePrice * fromWei(earned)})\n              </Text>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const HorizontalRuler = styled.hr`\n  width: 90%;\n  color: ${({ theme }) => (theme === \"light\" ? \"#3F3D56\" : \"#fff\")};\n  background-color: ${({ theme }) => (theme === \"light\" ? \"#3F3D56\" : \"#fff\")};\n  border-color: ${({ theme }) => (theme === \"light\" ? \"#3F3D56\" : \"#fff\")};\n  margin-top: ${({ marginTop }) => marginTop || \"50px\"};\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { MobileDiv, Button, Card, Text } from \"components/common\";\nimport {\n  timeConverter,\n  getEarned,\n  getYieldPerVeShn,\n  getFractionParticipating,\n  getUserVeShnEndpointCheckpointed,\n  getUserVeShnCheckpointed,\n  getTotalVeFXSSupplyStored,\n  getTotalVeFXSParticipating,\n  getyieldPerVeFXSStored,\n  getYieldRate,\n  getLastUpdateTime,\n  getPeriodFinish,\n  getTotalShnSupply,\n  fromWei,\n  getOnlyUserAddress,\n  sync,\n  getAddress,\n} from \"../../templates/utils\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport veShnYieldDistributor from \"../../../../static/abi/veFXSYieldDistributorV4\";\nimport veSHN from \"../../../../static/abi/veFXS\";\n\nexport function ControllerPanel({ isWalletEnabled, chainId, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator }) {\n  //const [veShnYieldDistributorAddress, setVeShnYieldDistributorAddress] = useState(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  //const [veShnAddress, setVeShnAddress] = useState(getAddress(chainId, \"veShnAddress\"));\n\n  const { theme } = useContext(ThemeContext);\n  const [totalShnSupply, setTotalShnSupply] = useState(\"0\");\n  const [periodFinish, setPeriodFinish] = useState(\"\");\n  const [lastUpdateTime, setLastUpdateTime] = useState(\"\");\n  const [yieldRate, setYieldRate] = useState(\"\");\n  const [yieldPerVeShnStored, setYieldPerVeShnStored] = useState(\"\");\n  const [totalVeShnParticipating, setTotalVeShnParticipating] = useState(\"\");\n  const [totalVeShnSupplyStored, setTotalVeShnSupplyStored] = useState(\"\");\n  const [userVeShnCheckpointed, setUserVeShnCheckpointed] = useState(\"\");\n  const [userVeShnEndpointCheckpointed, setUserVeShnEndpointCheckpointed] = useState(\"\");\n  const [fractionParticipating, setFractionParticipating] = useState(\"\");\n  const [yieldPerVeShn, setYieldPerVeShn] = useState(\"\");\n  const [earned, setEarned] = useState(\"\");\n  const [userAddress, setUserAddress] = useState();\n  const [shinePrice, setShinePrice] = useState();\n\n  //useEffect(() => {\n  //  setVeShnYieldDistributorAddress(getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  //  setVeShnAddress(getAddress(chainId, \"veShnAddress\"));\n  //}, [chainId]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true) {\n      async function getSupply() {\n        const shnSupply = await getTotalShnSupply(veSHN.abi, getAddress(chainId, \"veShnAddress\"));\n        console.log(\"shnSupply balance\", shnSupply);\n        setTotalShnSupply(shnSupply);\n        setUserAddress(await getOnlyUserAddress());\n        setPeriodFinish(await getPeriodFinish(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setLastUpdateTime(await getLastUpdateTime(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldRate(await getYieldRate(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldPerVeShnStored(await getyieldPerVeFXSStored(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTotalVeShnParticipating(await getTotalVeFXSParticipating(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setTotalVeShnSupplyStored(await getTotalVeFXSSupplyStored(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setUserVeShnCheckpointed(await getUserVeShnCheckpointed(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setUserVeShnEndpointCheckpointed(await getUserVeShnEndpointCheckpointed(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setFractionParticipating(await getFractionParticipating(veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setYieldPerVeShn(await getYieldPerVeShn(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n        setEarned(await getEarned(await getOnlyUserAddress(), veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\")));\n      }\n      getSupply();\n    }\n  }, [isWalletEnabled, refetchData, chainId]);\n\n  async function handleSync() {\n    setLoadingIndicator(loadingIndicator.concat([\"sync\"]));\n    await sync(await getOnlyUserAddress(), setRefetchData, loadingIndicator, setLoadingIndicator, veShnYieldDistributor.abi, getAddress(chainId, \"veShnYieldDistributorAddress\"));\n  }\n\n  return (\n    <div>\n      {\" \"}\n      <HorizontalRuler theme={theme}></HorizontalRuler>\n      {console.log(\"controllerAddress \", getAddress(chainId, \"controllerAddress\"))}\n      {userAddress === getAddress(chainId, \"controllerAddress\") && (\n        <div style={{ textAlign: \"center\" }}>\n          <div style={{ width: \"80%\" }}></div>\n          {loadingIndicator.includes(\"sync\") ? (\n            <div>\n              <PulseLoader color={\"gold\"} loading={true} size={15} margin={2} />\n              <br></br>\n              <i>Confirming transaction, please wait.</i>\n            </div>\n          ) : (\n            <Button onClick={() => handleSync()}>Sync</Button>\n          )}\n          <table>\n            <tbody>\n              <tr>\n                <td>Period finish</td>\n                <td>{isWalletEnabled && timeConverter(periodFinish)}</td>\n              </tr>\n\n              <tr>\n                <td>Last update time</td>\n                <td>{isWalletEnabled && timeConverter(lastUpdateTime)}</td>\n              </tr>\n\n              <tr>\n                <td>Yield Rate</td>\n                <td>{isWalletEnabled && fromWei(yieldRate)}</td>\n              </tr>\n\n              <tr>\n                <td>Yield Per veSHN Stored</td>\n                <td>{isWalletEnabled && fromWei(yieldPerVeShnStored)}</td>\n              </tr>\n\n              <tr>\n                <td>Total veSHN Participating</td>\n                <td>{isWalletEnabled && fromWei(totalVeShnParticipating)}</td>\n              </tr>\n\n              <tr>\n                <td>Total veSHN Supply Stored</td>\n                <td>{isWalletEnabled && fromWei(totalVeShnSupplyStored)}</td>\n              </tr>\n\n              <tr>\n                <td>User veSHN Checkpointed</td>\n                <td>{isWalletEnabled && fromWei(userVeShnCheckpointed)}</td>\n              </tr>\n              <tr>\n                <td>Fraction Participating</td>\n                <td>{isWalletEnabled && fractionParticipating / 10000}%</td>\n              </tr>\n\n              <tr>\n                <td>Yield Per VeShn</td>\n                <td>{isWalletEnabled && fromWei(yieldPerVeShn)}</td>\n              </tr>\n\n              <tr>\n                <td>userVeShnEndpointCheckpointed</td>\n                <td>{isWalletEnabled && userVeShnEndpointCheckpointed}</td>\n              </tr>\n\n              <tr>\n                <td>User Address</td>\n                <td>{isWalletEnabled && userAddress}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text, MobileDiv } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport { VeShnContainer } from \"../components/common/subpages/veShnContainer\";\nimport { StakingContainer } from \"components/common/subpages/stakingContainer\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { ControllerPanel } from \"components/common/subpages/controllerPanel\";\n\nexport default ({ location }) => {\n  const { theme } = useContext(ThemeContext);\n  const { isWalletEnabled, setWalletStatus, chainId, setChainId, currentAccount, setCurrentAccount, refetchData, setRefetchData,loadingIndicator,setLoadingIndicator } = useContext(WalletContext);\n  console.log(\"isWalletEnabled Container1 \", isWalletEnabled);\n  console.log(\"chainId Container 1\", chainId);\n\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\" height=\"60px\">\n      <SEO title=\"veSHN\" description=\"veSHN staking\" />\n      <Header />\n\n      <MobileDiv mobileWidth=\"100%\" width=\"90%\" background=\"\" style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\", paddingBottom: \"200px\" }}>\n        {chainId == \"0x89\" || chainId== \"0x13881\" || (process.env.NODE_ENV == \"development\" && chainId == \"0x539\") ? (\n          <div>\n            <VeShnContainer isWalletEnabled={isWalletEnabled} chainId={chainId} refetchData={refetchData} setRefetchData={setRefetchData} loadingIndicator={loadingIndicator} setLoadingIndicator={setLoadingIndicator}></VeShnContainer>\n            <HorizontalRuler theme={theme}></HorizontalRuler>\n            <StakingContainer isWalletEnabled={isWalletEnabled} chainId={chainId}  refetchData={refetchData} setRefetchData={setRefetchData} loadingIndicator={loadingIndicator} setLoadingIndicator={setLoadingIndicator}></StakingContainer>\n            <ControllerPanel isWalletEnabled={isWalletEnabled} chainId={chainId}  refetchData={refetchData} setRefetchData={setRefetchData} loadingIndicator={loadingIndicator} setLoadingIndicator={setLoadingIndicator}></ControllerPanel>\n          </div>\n        ) : (\n          <div style={{ textAlign: \"center\", marginTop: 80 }}>\n            <br></br>\n            <Text fontWeight=\"600\" color=\"red\">\n              Chain unsupported\n            </Text>\n            <br></br>\n            <p style={{ marginLeft: 80, marginRight: 80 }}>\n              In order to save on the gas fees, veSHN is only available when Polygon/Matic network is selected. If you have your Shine (SHN) on the Eth mainnet, please bridge them over to Polygon/Matic network by following these{\" \"}\n              <a target=\"_self\" href=\"https://shinedao.medium.com/shine-bridge-to-matic-is-live-df10f2b1d620\">\n                instructions\n              </a>\n              .\n            </p>\n          </div>\n        )}\n      </MobileDiv>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}