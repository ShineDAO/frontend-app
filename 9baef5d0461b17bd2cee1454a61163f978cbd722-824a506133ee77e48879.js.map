{"version":3,"sources":["webpack:///./src/components/templates/utils.js"],"names":["addToWatchlist","metamaskDetails","a","console","log","window","web3","currentProvider","sendAsync","method","params","type","options","address","symbol","decimals","image","id","Math","round","random","err","addedBoolean","getCurrentMigrations","setCurrentMigration","abi","Migrations","migrationsInstance","eth","Contract","methods","last_completed_migration","call","currentMigration","getUserAddressProject","setUserAddress","setProjectBalance","tokenAbi","tokenContractAddress","ethereum","selectedAddress","userAddress","getProjectBalance","getUserAddress","setShineBalance","getShineBalance","getOnlyUserAddress","getWeiRaised","setWeiRaised","saleAbi","saleContractAddress","simpleCrowdsaleInstance","weiRaised","getSeedSaleShnBalance","setSeedSaleShnBalance","abiToken","tokenInst","balanceOf","seedSaleShnBalance","shnAvailable","utils","fromWei","toString","getEthRaised","setEthRaised","ethRaised","getEthBalance","setBalance","getBalance","balance","shineBalance","shineBalanceFromWei","projectBalance","projectBalanceFromWei","getVestingPeriod","setVestingPeriod","vestingPeriod","getVestedBalances","setVestedBalances","vestedBalances","vestedBalancesFromWei","getRelativeCap","setRelativeCap","relativeCap","getContributions","setContributions","contributions","toPlainString","getIsSaleOpenForAll","setIsSaleOpenForAll","isSaleOpenForAll","getTier","getMaximumContribution","multiplier","timeConverter","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","withdrawTokens","gas","setTransactionBeingProcessed","setMetamaskErrorCode","setIsTokenWithdrawn","setShineBought","undefined","estimateGas","from","estimatedGas","send","message","search","enableAccessForTier1AndTier2","allowAllTierAccess","receipt","code","buyShineTokens","ethAmountToSpend","setEthAmountToSpend","setShineBoughtAmount","currentStatus","buyTokens","value","toWei","amountBoughtInWei","events","TokensPurchased","returnValues","amount","amountBoughtInTKNs","searchCapExceeded","handleChainChanged","_chainId","location","reload","loadWeb3","setWalletStatus","setCurrentNetwork","Web3","enable","chainId","on","handleAccountsChanged","alert","accounts","currentAccount","handleChangeOfEthAmountToSpend","handleChangeOfShnReference","shnReference","setShnReference","handleChangeOfNewRelativeCap","newRelativeCap","setNewRelativeCap","setShineTokenAddress","num","toLocaleString","useGrouping","estimateReceivedShn","rate","weiAmountToSpend","estimatedReceivedShn","Number","parseFloat","amountInWei","amountInBaseUnit","getAllowance","setAllowance","veShnAddress","allowance","getEpoch","setEpoch","veShnTokenAbi","veShnInstance","epoch","getUserPointHistory","setUserPointHistory","user_point_epoch","epochFound","user_point_history","userPointHistory","getTotalShnSupply","totalFXSSupply","totalShnSupply","getPeriodFinish","veShnYieldDistributorAbi","veShnYieldDistributorAddress","veShnYield","periodFinish","getLastUpdateTime","lastUpdateTime","getYieldRate","yieldRate","getyieldPerVeFXSStored","yieldPerVeFXSStored","yieldPerVeShnStored","getYieldPerVeShn","yieldPerVeFXS","yieldPerVeShn","getEarned","earned","sync","setRefetchData","loadingIndicator","setLoadingIndicator","currentLoadingIndicator","filter","v","getTotalVeFXSParticipating","veShnYieldDistributorInstance","totalVeFXSParticipating","getTotalVeFXSSupplyStored","totalVeFXSSupplyStored","getUserVeShnCheckpointed","userVeFXSCheckpointed","userVeShnCheckpointed","getUserVeShnEndpointCheckpointed","userVeFXSEndpointCheckpointed","userVeShnEndpointCheckpointed","getFractionParticipating","fractionParticipating","veShnCheckpoint","veShnAbi","checkpoint","rewardCheckpoint","getYield","setSuccessMessage","withdrawShnFromVeShn","setLockError","withdraw","increaseAmountOfLockedShn","amountToLock","setLocked","setShnBalance","ShineTokenAbi","shnAddress","veSHN","increase_amount","checkLocked","includes","increaseUnlockTimeForLockedShn","desiredLockTimestamp","increase_unlock_time","locked","veShnApprove","shineAbi","SHN","approve","createVeShnLock","create_lock","getAddress","contract","chain","addresses","hardhat","roundTo2Decimals"],"mappings":"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","file":"9baef5d0461b17bd2cee1454a61163f978cbd722-824a506133ee77e48879.js","sourcesContent":["import Web3 from \"web3\";\nimport Migrations from \"../../../static/abi/Migrations.json\";\nvar migrationsContractAddress = \"0xbACf2F11eB10475DA816c1ADCB8B376FffD1544c\";\n//var migrationsContractAddress = \"0xfC84D046C5ac723722033d8DF9985d70d85D2B18\"; //ganache\n//var migrationsContractAddress = \"0x3f3207c60F6089cFD5828A2e0937DdC7Bd394e99\"; //rinkeby\n\nexport async function addToWatchlist(metamaskDetails) {\n  console.log(\"details \", metamaskDetails);\n  window.web3.currentProvider.sendAsync(\n    {\n      method: \"metamask_watchAsset\",\n      params: {\n        type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n        options: {\n          address: metamaskDetails.address, // The address that the token is at.\n          symbol: metamaskDetails.symbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: metamaskDetails.decimals, // The number of decimals in the token\n          image: metamaskDetails.image, // A string url of the token logo\n        },\n      },\n      id: Math.round(Math.random() * 100000),\n    },\n    (err, addedBoolean) => {}\n  );\n}\nexport async function getCurrentMigrations(setCurrentMigration) {\n  let abiArray = Migrations;\n  let abi = abiArray.abi;\n  let migrationsInstance = new window.web3.eth.Contract(abi, migrationsContractAddress);\n  let currentMigration = await migrationsInstance.methods.last_completed_migration().call();\n  setCurrentMigration(currentMigration);\n  console.log(\"current migrations is \", currentMigration);\n}\n\nexport async function getUserAddressProject(setUserAddress, setProjectBalance, tokenAbi, tokenContractAddress) {\n  let userAddress = await window.ethereum.selectedAddress;\n  setUserAddress(userAddress);\n  await getProjectBalance(setProjectBalance, userAddress, tokenAbi, tokenContractAddress);\n}\n\nexport async function getUserAddress(setUserAddress, setShineBalance, tokenAbi, tokenContractAddress) {\n  let userAddress = await window.ethereum.selectedAddress;\n  console.log(\"user address \", userAddress);\n  setUserAddress(userAddress);\n  await getShineBalance(setShineBalance, userAddress, tokenAbi, tokenContractAddress);\n}\nexport async function getOnlyUserAddress() {\n  let userAddress = await window.ethereum.selectedAddress;\n  console.log(\"user address \", userAddress);\n  return userAddress;\n}\n\nexport async function getWeiRaised(setWeiRaised, saleAbi, saleContractAddress) {\n  console.log(\"abi 1\", saleAbi);\n  let abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n  let weiRaised = await simpleCrowdsaleInstance.methods.weiRaised().call();\n\n  setWeiRaised(weiRaised);\n  console.log(\"Wei raised so far\", weiRaised);\n}\n\nexport async function getSeedSaleShnBalance(setSeedSaleShnBalance, tokenAbi, saleContractAddress, tokenContractAddress) {\n  var abiToken = tokenAbi;\n  var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n  var seedSaleShnBalance = await tokenInst.methods.balanceOf(saleContractAddress).call();\n  let shnAvailable = window.web3.utils.fromWei(seedSaleShnBalance.toString(), \"ether\");\n\n  setSeedSaleShnBalance(shnAvailable);\n}\n\nexport async function getEthRaised(setEthRaised, saleAbi, saleContractAddress) {\n  let abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n  let weiRaised = await simpleCrowdsaleInstance.methods.weiRaised().call();\n  let ethRaised = window.web3.utils.fromWei(weiRaised.toString(), \"ether\");\n  setEthRaised(ethRaised);\n  console.log(\"Eth raised so far\", ethRaised);\n}\n\nexport async function getEthBalance(setBalance) {\n  window.web3.eth.getBalance(window.ethereum.selectedAddress, (err, balance) => {\n    //console.log(window.web3.utils.fromWei(balance, \"ether\") + \" ETH\");\n    setBalance(window.web3.utils.fromWei(balance.toString(), \"ether\"));\n  });\n}\nexport async function getShineBalance(setShineBalance, userAddress, tokenAbi, tokenContractAddress) {\n  var abiToken = tokenAbi;\n  var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n\n  var shineBalance = await tokenInst.methods.balanceOf(userAddress).call();\n\n  var shineBalanceFromWei = window.web3.utils.fromWei(shineBalance, \"ether\");\n  setShineBalance(shineBalanceFromWei);\n}\n\nexport async function getProjectBalance(setProjectBalance, userAddress, tokenAbi, tokenContractAddress) {\n  console.log(\"adress \", userAddress);\n  var abiToken = tokenAbi;\n  var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n\n  var projectBalance = await tokenInst.methods.balanceOf(userAddress).call();\n\n  var projectBalanceFromWei = window.web3.utils.fromWei(projectBalance, \"ether\");\n  setProjectBalance(projectBalanceFromWei);\n}\n\nexport async function getVestingPeriod(saleAbi, saleContractAddress, setUserAddress, setVestingPeriod) {\n  let userAddress = await window.ethereum.selectedAddress;\n  setUserAddress(userAddress);\n\n  var abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  var vestingPeriod = await simpleCrowdsaleInstance.methods.vestingPeriod(userAddress).call();\n\n  setVestingPeriod(vestingPeriod);\n}\nexport async function getVestedBalances(saleAbi, saleContractAddress, setUserAddress, setVestedBalances) {\n  let userAddress = await window.ethereum.selectedAddress;\n  setUserAddress(userAddress);\n\n  var abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  var vestedBalances = await simpleCrowdsaleInstance.methods.vestedBalances(userAddress).call();\n\n  var vestedBalancesFromWei = window.web3.utils.fromWei(vestedBalances, \"ether\");\n  setVestedBalances(vestedBalancesFromWei);\n}\n\nexport async function getRelativeCap(saleAbi, saleContractAddress, setUserAddress, setRelativeCap) {\n  let userAddress = await window.ethereum.selectedAddress;\n  setUserAddress(userAddress);\n\n  var abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  var relativeCap = await simpleCrowdsaleInstance.methods.relativeCap().call();\n\n  setRelativeCap(relativeCap);\n}\n\nexport async function getContributions(saleAbi, saleContractAddress, setUserAddress, setContributions) {\n  let userAddress = await window.ethereum.selectedAddress;\n  setUserAddress(userAddress);\n\n  var abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  var contributions = await simpleCrowdsaleInstance.methods.contributions(userAddress).call();\n\n  setContributions(window.web3.utils.fromWei(toPlainString(contributions), \"ether\"));\n}\n\nexport async function getIsSaleOpenForAll(saleAbi, saleContractAddress, setIsSaleOpenForAll) {\n  var abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  var isSaleOpenForAll = await simpleCrowdsaleInstance.methods.isSaleOpenForAll().call();\n\n  setIsSaleOpenForAll(isSaleOpenForAll);\n}\n\nexport function getTier(shineBalance) {\n  if (shineBalance < 15000) {\n    return \"No Tier\";\n  } else if (shineBalance >= 15000 && shineBalance < 50000) {\n    return \"Tier 1\";\n  } else if (shineBalance >= 50000 && shineBalance < 200000) {\n    return \"Tier 2\";\n  } else if (shineBalance >= 200000 && shineBalance < 400000) {\n    return \"Tier 3\";\n  } else if (shineBalance >= 400000) {\n    return \"Tier 4\";\n  }\n}\n\nexport function getMaximumContribution(relativeCap, shineBalance) {\n  console.log(\"rc, bal\", relativeCap, shineBalance);\n  let multiplier;\n  if (shineBalance < 1500) {\n    multiplier = 0;\n  } else if (shineBalance >= 15000 && shineBalance < 50000) {\n    multiplier = 1;\n  } else if (shineBalance >= 50000 && shineBalance < 200000) {\n    multiplier = 2;\n  } else if (shineBalance >= 200000 && shineBalance < 400000) {\n    multiplier = 4;\n  } else if (shineBalance >= 400000) {\n    multiplier = 8;\n  }\n  let maximumContribution = window.web3.utils.fromWei(toPlainString(relativeCap * multiplier), \"ether\");\n  return maximumContribution;\n}\n\n//console.log(kFormatter(1200)); // 1.2k\n//console.log(kFormatter(-1200)); // -1.2k\n//console.log(kFormatter(900)); // 900\n//console.log(kFormatter(-900)); // -900\nexport function kFormatter(num) {\n  return Math.abs(num) > 999 ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + \"k\" : Math.sign(num) * Math.abs(num);\n}\n\nexport function timeConverter(UNIX_timestamp) {\n  console.log(\"time \", UNIX_timestamp, typeof UNIX_timestamp);\n  var a = new Date(UNIX_timestamp * 1000);\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n  return time;\n}\n\nexport async function withdrawTokens(saleAbi, saleContractAddress, userAddress, gas, setTransactionBeingProcessed, setMetamaskErrorCode, setIsTokenWithdrawn, setShineBought) {\n  let abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  setTransactionBeingProcessed(true);\n  setMetamaskErrorCode(undefined);\n\n  try {\n    let estimatedGas = await simpleCrowdsaleInstance.methods.withdrawTokens(userAddress).estimateGas({\n      from: userAddress,\n      gas: gas,\n    });\n\n    const receipt = await simpleCrowdsaleInstance.methods.withdrawTokens(userAddress).send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    setIsTokenWithdrawn(true);\n  } catch (e) {\n    console.log(\"err \", e);\n    setIsTokenWithdrawn(false);\n    setShineBought(false);\n    if (e.message.search(\"Vesting: the time required for vesting is not expired yet\") >= 0) {\n      setMetamaskErrorCode(\"The time required for vesting is not expired yet\");\n    }\n  }\n  setTransactionBeingProcessed(false);\n}\nexport async function enableAccessForTier1AndTier2(userAddress, gas, saleAbi, saleContractAddress) {\n  let abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  try {\n    let estimatedGas = await simpleCrowdsaleInstance.methods.allowAllTierAccess(true).estimateGas({\n      from: userAddress,\n      gas: gas,\n    });\n\n    const receipt = await simpleCrowdsaleInstance.methods.allowAllTierAccess(true).send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n  }\n}\n\nexport async function buyShineTokens(ethAmountToSpend, setEthAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, userAddress, saleAbi, saleContractAddress, gas, currentStatus) {\n  if (ethAmountToSpend !== \"\") {\n    //disable button if no amount is entered\n    let abi = saleAbi;\n    let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n    setTransactionBeingProcessed(true);\n    setMetamaskErrorCode(undefined);\n\n    try {\n      let estimatedGas = await simpleCrowdsaleInstance.methods.buyTokens(userAddress).estimateGas({\n        from: userAddress,\n        value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n        gas: gas,\n      });\n      //let estimatedGas = 100000;\n\n      console.log(\"estimated gas \", estimatedGas);\n\n      console.log(\"eth amount to spend\", ethAmountToSpend);\n      const receipt = await simpleCrowdsaleInstance.methods.buyTokens(userAddress).send({\n        from: userAddress,\n        value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n        gas: estimatedGas,\n      });\n      console.log(\"receipt\", receipt);\n      var amountBoughtInWei = receipt.events.TokensPurchased.returnValues.amount;\n      var amountBoughtInTKNs = window.web3.utils.fromWei(amountBoughtInWei, \"ether\");\n\n      setShineBought(true);\n      setShineBoughtAmount(amountBoughtInTKNs);\n      setEthAmountToSpend(\"\");\n    } catch (e) {\n      setShineBought(false);\n      console.log(\"err \", e);\n      console.log(\"User rejected transaction\", e.code);\n\n      if (e.message.search(\"insufficient funds for transfer\") >= 0) {\n        setMetamaskErrorCode(\"The amount that you are trying to buy, exceeds the amount that you have available in your wallet\");\n      } else if (e.message.search(\"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\") >= 0) {\n        setMetamaskErrorCode(\"Your total amount exceeds maximum participation\");\n      } else if (e.code === 4001) {\n        setMetamaskErrorCode(e.message); //MetaMask Tx Signature: User denied transaction signature.\n      } else if (e.message.search(\"Reference to the Shine Token contract has not been set\") >= 0) {\n        setMetamaskErrorCode(\"Reference to the Shine Token contract has not been set\");\n      } else if (e.message.search(\"Relative cap exceeded\") >= 0) {\n        setMetamaskErrorCode(\"Relative cap exceeded\");\n      } else if (e.message.search(\"Currently you are below Tier 1 level, but you need to be at least Tier3 in order to participate in the seed sale\") >= 0) {\n        if (currentStatus === \"seed\" || currentStatus == \"ganacheSeed\") {\n          setMetamaskErrorCode(\"Currently you are below Tier 1 level, but you need to have at least 15 000 SHN in order to participate\");\n        } else if (currentStatus === \"ido\" || currentStatus == \"ganacheSeed\") {\n          setMetamaskErrorCode(\"Currently you are below Tier 1 level, but you need to be at least 15 000 SHN in order to participate\");\n        }\n      } else if (e.message.search(\"You are Tier 1, but you need to be Tier3 in order to participate in the seed sale\") >= 0) {\n        setMetamaskErrorCode(\"You are Tier 1, but you need to be Tier3 in order to participate in the seed sale or you can wait until 3:30 pm UTC its opened for Tier 1 and Tier 2\");\n      } else if (e.message.search(\"You are Tier 2, but You need to be Tier3 in order to participate in the seed sale\") >= 0) {\n        setMetamaskErrorCode(\"You are Tier 2, but You need to be Tier3 in order to participate in the seed sale or you can wait until 3:30 pm UTC its opened for Tier 1 and Tier 2\");\n      } else if (e.message.search(\"The amount that is being bought is too small to split it partially for vesting\") >= 0) {\n        setMetamaskErrorCode(\"The amount that is being bought is too small to split it partially for vesting\");\n      } else if (e.message.search(\"weiAmount is 0\") >= 0) {\n        setMetamaskErrorCode(\"0 is not a valid amount, please enter another ETH amount in the input field\");\n      } else {\n        setMetamaskErrorCode(\"Something went wrong, please contact the support\"); //\"There are not enough project tokens left for sale anymore\"\n      }\n\n      let searchCapExceeded = e.message.search(\"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\");\n      console.log(\"search \", searchCapExceeded); //149\n      // console.log(\"metamask code\", metamaskErrorCode)\n    }\n    setTransactionBeingProcessed(false);\n  }\n}\n\nfunction handleChainChanged(_chainId) {\n  // We recommend reloading the page, unless you must do otherwise\n  window.location.reload(true);\n}\nexport async function loadWeb3(setWalletStatus, setBalance, setCurrentNetwork) {\n  if (window.ethereum) {\n    console.log(\"load 1\", window.web3);\n    window.web3 = new Web3(window.ethereum);\n    await window.ethereum.enable();\n\n    await getEthBalance(setBalance);\n    setWalletStatus(true);\n    setCurrentNetwork(window.web3.currentProvider.chainId);\n    ethereum.on(\"chainChanged\", handleChainChanged);\n    ethereum.on(\"accountsChanged\", handleAccountsChanged);\n\n    console.log(\"load 1\", window.web3);\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n    setWalletStatus(true);\n    setCurrentNetwork(window.web3.currentProvider.chainId);\n    ethereum.on(\"chainChanged\", handleChainChanged);\n    ethereum.on(\"accountsChanged\", handleAccountsChanged);\n\n    console.log(\"load 2\");\n  } else {\n    setWalletStatus(false);\n    setCurrentNetwork(window.web3.currentProvider.chainId);\n    ethereum.on(\"chainChanged\", handleChainChanged);\n    ethereum.on(\"accountsChanged\", handleAccountsChanged);\n    window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    console.log(\"load 3\");\n  }\n}\nfunction handleAccountsChanged(accounts, currentAccount) {\n  console.log(\"current account called 321\", accounts);\n  window.location.reload(true);\n}\nexport function handleChangeOfEthAmountToSpend(amount, setEthAmountToSpend) {\n  setEthAmountToSpend(amount);\n}\n\nexport function handleChangeOfShnReference(shnReference, setShnReference) {\n  setShnReference(shnReference);\n}\nexport function handleChangeOfNewRelativeCap(newRelativeCap, setNewRelativeCap) {\n  setNewRelativeCap(newRelativeCap);\n}\nexport async function setNewRelativeCap(userAddress, newRelativeCap, gas, saleAbi, saleContractAddress) {\n  let abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  try {\n    let estimatedGas = await simpleCrowdsaleInstance.methods.setRelativeCap(newRelativeCap).estimateGas({\n      from: userAddress,\n      gas: gas,\n    });\n\n    const receipt = await simpleCrowdsaleInstance.methods.setRelativeCap(newRelativeCap).send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n  }\n}\n\nexport async function setShineTokenAddress(userAddress, shnReference, gas, saleAbi, saleContractAddress) {\n  let abi = saleAbi;\n  let simpleCrowdsaleInstance = new window.web3.eth.Contract(abi, saleContractAddress);\n\n  try {\n    let estimatedGas = await simpleCrowdsaleInstance.methods.setShineTokenAddress(shnReference).estimateGas({\n      from: userAddress,\n      gas: gas,\n    });\n\n    const receipt = await simpleCrowdsaleInstance.methods.setShineTokenAddress(shnReference).send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n  }\n}\nexport function toPlainString(num) {\n  console.log(\"plain straing\", num.toLocaleString(\"fullwide\", { useGrouping: false }));\n  return num.toLocaleString(\"fullwide\", { useGrouping: false });\n}\n\nexport function estimateReceivedShn(ethAmountToSpend, rate) {\n  console.log(\"eth to spend\", ethAmountToSpend);\n  const weiAmountToSpend = window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\");\n  console.log(\"wei\", toPlainString(weiAmountToSpend * rate));\n\n  console.log(\"www\", weiAmountToSpend * rate);\n\n  //const estimatedShnInWei = weiAmountToSpend * rate\n  const estimatedReceivedShn = window.web3.utils.fromWei(toPlainString(weiAmountToSpend * rate), \"ether\");\n  console.log(\"www1\", Number.parseFloat(estimatedReceivedShn));\n  return Number.parseFloat(estimatedReceivedShn);\n}\n\nexport function fromWei(amountInWei) {\n  const amountInBaseUnit = window.web3.utils.fromWei(toPlainString(amountInWei), \"ether\");\n  return Number.parseFloat(amountInBaseUnit);\n}\n\nexport function toWei(amountInBaseUnit) {\n  const amountInWei = window.web3.utils.toWei(amountInBaseUnit.toString(), \"ether\");\n  return amountInWei.toString();\n}\n\nexport async function getAllowance(setAllowance, veShnAddress, userAddress, tokenAbi, tokenContractAddress) {\n  var abiToken = tokenAbi;\n  var tokenInst = new window.web3.eth.Contract(abiToken, tokenContractAddress);\n\n  var allowance = await tokenInst.methods.allowance(userAddress, veShnAddress).call();\n  setAllowance(allowance);\n}\n\nexport async function getEpoch(setEpoch, veShnAddress, veShnTokenAbi) {\n  var veShnInstance = new window.web3.eth.Contract(veShnTokenAbi, veShnAddress);\n  var epoch = await veShnInstance.methods.epoch().call();\n  setEpoch(epoch);\n}\n\nexport async function getUserPointHistory(setUserPointHistory, userAddress, veShnAddress, veShnTokenAbi) {\n  var veShnInstance = new window.web3.eth.Contract(veShnTokenAbi, veShnAddress);\n  let epochFound = await veShnInstance.methods.user_point_epoch(userAddress).call();\n  var userPointHistory = await veShnInstance.methods.user_point_history(userAddress, epochFound).call();\n  console.log(\"userPointHistory userPointHistory 1\", epochFound, userPointHistory, typeof userPointHistory);\n  setUserPointHistory(userPointHistory);\n}\n\nexport async function getTotalShnSupply(veShnTokenAbi, veShnAddress) {\n  var veShnInstance = new window.web3.eth.Contract(veShnTokenAbi, veShnAddress);\n  var totalShnSupply = await veShnInstance.methods.totalFXSSupply().call();\n  return totalShnSupply;\n}\n\nexport async function getPeriodFinish(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var periodFinish = await veShnYield.methods.periodFinish().call();\n  return periodFinish;\n}\n\nexport async function getLastUpdateTime(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var lastUpdateTime = await veShnYield.methods.lastUpdateTime().call();\n  return lastUpdateTime;\n}\n\nexport async function getYieldRate(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var yieldRate = await veShnYield.methods.yieldRate().call();\n  return yieldRate;\n}\n\nexport async function getyieldPerVeFXSStored(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var yieldPerVeShnStored = await veShnYield.methods.yieldPerVeFXSStored().call();\n  return yieldPerVeShnStored;\n}\n\nexport async function getYieldPerVeShn(userAddress, veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var yieldPerVeShn = await veShnYield.methods.yieldPerVeFXS().call();\n  return yieldPerVeShn;\n  //try {\n  //  let estimatedGas = await veShnYield.methods.yieldPerVeFXS().estimateGas({\n  //    from: userAddress,\n  //  });\n  //  console.log(\"estimated gas for yieldPerVeShn\", estimatedGas);\n  //\n  //  const receipt = await veShnYield.methods.yieldPerVeFXS().send({\n  //    from: userAddress,\n  //    gas: estimatedGas,\n  //  });\n  //  console.log(\"receipt yieldPerVeShn\", receipt);\n  //} catch (e) {\n  //  console.log(\"err \", e);\n  //  console.log(\"Transaction rejected\", e.code);\n  //}\n}\n\nexport async function getEarned(userAddress, veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var earned = await veShnYield.methods.earned(userAddress).call();\n  return earned;\n}\n\nexport async function sync(userAddress, setRefetchData, loadingIndicator, setLoadingIndicator, veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYield = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n\n  try {\n    let estimatedGas = await veShnYield.methods.sync().estimateGas({\n      from: userAddress,\n    });\n    console.log(\"estimated gas for sync\", estimatedGas);\n\n    const receipt = await veShnYield.methods.sync().send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"sync\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"sync\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  }\n}\n\nexport async function getTotalVeFXSParticipating(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var totalVeFXSParticipating = await veShnYieldDistributorInstance.methods.totalVeFXSParticipating().call();\n  return totalVeFXSParticipating;\n}\n\nexport async function getTotalVeFXSSupplyStored(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var getTotalVeFXSSupplyStored = await veShnYieldDistributorInstance.methods.totalVeFXSSupplyStored().call();\n  return getTotalVeFXSSupplyStored;\n}\n\nexport async function getUserVeShnCheckpointed(userAddress, veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var userVeShnCheckpointed = await veShnYieldDistributorInstance.methods.userVeFXSCheckpointed(userAddress).call();\n  return userVeShnCheckpointed;\n}\n\nexport async function getUserVeShnEndpointCheckpointed(userAddress, veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var userVeShnEndpointCheckpointed = await veShnYieldDistributorInstance.methods.userVeFXSEndpointCheckpointed(userAddress).call();\n  return userVeShnEndpointCheckpointed;\n}\n\nexport async function getFractionParticipating(veShnYieldDistributorAbi, veShnYieldDistributorAddress) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n  var fractionParticipating = await veShnYieldDistributorInstance.methods.fractionParticipating().call();\n  return fractionParticipating;\n}\n\nexport async function veShnCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, veShnAddress, veShnAbi) {\n  var veShnInstance = new window.web3.eth.Contract(veShnAbi, veShnAddress);\n\n  try {\n    let estimatedGas = await veShnInstance.methods.checkpoint().estimateGas({\n      from: userAddress,\n    });\n    console.log(\"estimated gas for sync\", estimatedGas);\n\n    const receipt = await veShnInstance.methods.checkpoint().send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"veShnCheckpoint\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"veShnCheckpoint\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  }\n}\n\nexport async function rewardCheckpoint(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, veShnYieldDistributorAddress, veShnYieldDistributorAbi) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n\n  try {\n    let estimatedGas = await veShnYieldDistributorInstance.methods.checkpoint().estimateGas({\n      from: userAddress,\n    });\n    console.log(\"estimated gas for sync\", estimatedGas);\n\n    const receipt = await veShnYieldDistributorInstance.methods.checkpoint().send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"rewardCheckpoint\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"rewardCheckpoint\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  }\n}\n\nexport async function getYield(userAddress, loadingIndicator, setLoadingIndicator, setRefetchData, veShnYieldDistributorAddress, veShnYieldDistributorAbi,setSuccessMessage) {\n  var veShnYieldDistributorInstance = new window.web3.eth.Contract(veShnYieldDistributorAbi, veShnYieldDistributorAddress);\n\n  try {\n    let estimatedGas = await veShnYieldDistributorInstance.methods.getYield().estimateGas({\n      from: userAddress,\n    });\n    console.log(\"estimated gas for sync\", estimatedGas);\n\n    const receipt = await veShnYieldDistributorInstance.methods.getYield().send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"claim\"); // none is default when there is nothing\n    setSuccessMessage({location:\"rewardClaim\"})\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    console.log(\"err \", e);\n    console.log(\"Transaction rejected\", e.code);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"claim\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  }\n}\n\nexport async function withdrawShnFromVeShn(userAddress, loadingIndicator, setLoadingIndicator, veShnAddress, veShnAbi, setLockError) {\n  var veShnInstance = new window.web3.eth.Contract(veShnAbi, veShnAddress);\n\n  try {\n    let estimatedGas = await veShnInstance.methods.withdraw().estimateGas({\n      from: userAddress,\n    });\n    console.log(\"estimated gas for sync\", estimatedGas);\n\n    const receipt = await veShnInstance.methods.withdraw().send({\n      from: userAddress,\n      gas: estimatedGas,\n    });\n    console.log(\"receipt\", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"withdraw\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  } catch (e) {\n    console.log(\"err \", e);\n    setLockError(e.message);\n    console.log(\"Transaction rejected\", e.code);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"withdraw\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  }\n}\n\nexport async function increaseAmountOfLockedShn(userAddress, amountToLock, veShnAddress, veShnAbi, setLockError, setLocked, loadingIndicator, setLoadingIndicator, setShnBalance, setRefetchData, ShineTokenAbi, shnAddress) {\n  var veSHN = new window.web3.eth.Contract(veShnAbi, veShnAddress);\n\n  try {\n    let estimatedGas = await veSHN.methods.increase_amount(toWei(amountToLock)).estimateGas({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      //gas: gas,\n    });\n\n    console.log(\"estimated gas for lock\", estimatedGas);\n    const receipt = await veSHN.methods.increase_amount(toWei(amountToLock)).send({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      gas: estimatedGas,\n    });\n    setLocked(await checkLocked(userAddress, veShnAddress, veShnAbi));\n    getShineBalance(setShnBalance, userAddress, ShineTokenAbi, shnAddress);\n\n    console.log(\"receipt \", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"increaseLockAmount\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    if (e.message.includes(\"Transaction reverted without a reason string\")) {\n      setLockError(\"Make sure that you are entering correct amount of SHN to lock and that you have enough allowance to do it.\");\n    } else {\n      setLockError(\"Something went wrong\");\n    }\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"increaseLockAmount\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    console.log(\"create lock error \", e);\n  }\n}\n\nexport async function increaseUnlockTimeForLockedShn(userAddress, desiredLockTimestamp, veShnAddress, veShnAbi, setLockError, setLocked, loadingIndicator, setLoadingIndicator, setRefetchData) {\n  var veSHN = new window.web3.eth.Contract(veShnAbi, veShnAddress);\n  try {\n    let estimatedGas = await veSHN.methods.increase_unlock_time(desiredLockTimestamp).estimateGas({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      //gas: gas,\n    });\n\n    console.log(\"estimated gas for lock\", estimatedGas);\n    const receipt = await veSHN.methods.increase_unlock_time(desiredLockTimestamp).send({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      gas: estimatedGas,\n    });\n    setLocked(await checkLocked(userAddress, veShnAddress, veShnAbi));\n\n    console.log(\"receipt \", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"increaseLockTime\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    if (e.message.includes(\"Can only increase lock duration\")) {\n      setLockError(\"Can only increase lock duration.\");\n    }\n    console.log(\"create lock error \", e);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"increaseLockTime\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  }\n}\n\nexport async function checkLocked(userAddress, veShnAddress, veShnAbi) {\n  console.log(\"locked 1233 \", veShnAddress);\n  var veSHN = new window.web3.eth.Contract(veShnAbi, veShnAddress);\n  try {\n    const locked = await veSHN.methods.locked(userAddress).call();\n    console.log(\"locked 123 \", locked);\n    return locked;\n  } catch (e) {\n    console.log(\"locked balance err \", e);\n  }\n}\n\nexport async function veShnApprove(userAddress, veShnAddress, setAllowance, loadingIndicator, setLoadingIndicator, shineAbi, shnAddress) {\n  var SHN = new window.web3.eth.Contract(shineAbi, shnAddress);\n\n  try {\n    let estimatedGas = await SHN.methods.approve(veShnAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\").estimateGas({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      //gas: gas,\n    });\n\n    console.log(\"estimated gas for lock\", estimatedGas);\n    const receipt = await SHN.methods.approve(veShnAddress, \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\").send({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      gas: estimatedGas,\n    });\n    getAllowance(setAllowance, veShnAddress, userAddress, shineAbi, shnAddress);\n\n    console.log(\"receipt \", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"approve\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n  } catch (e) {\n    console.log(\"create lock error \", e);\n  }\n}\n\nexport async function createVeShnLock(userAddress, veShnAbi, veShnAddress, amountToLock, desiredLockTimestamp, loadingIndicator, setLoadingIndicator, setLockError, setRefetchData) {\n  console.log(\"toWei \", toWei(amountToLock), typeof toWei(amountToLock));\n  console.log(\"slider new\", desiredLockTimestamp, typeof desiredLockTimestamp);\n\n  let veSHN = new window.web3.eth.Contract(veShnAbi, veShnAddress);\n  try {\n    let estimatedGas = await veSHN.methods.create_lock(toWei(amountToLock), desiredLockTimestamp).estimateGas({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      //gas: gas,\n    });\n\n    console.log(\"estimated gas for lock\", estimatedGas);\n    const receipt = await veSHN.methods.create_lock(toWei(amountToLock), desiredLockTimestamp).send({\n      from: userAddress,\n      //value: window.web3.utils.toWei(ethAmountToSpend.toString(), \"ether\"),\n      gas: estimatedGas,\n    });\n    console.log(\"receipt \", receipt);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"createLock\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setRefetchData(true); // after every successful transaction, the data on the frontend needs to be refetched\n  } catch (e) {\n    console.log(\"create lock error \", e);\n    let currentLoadingIndicator = loadingIndicator.filter(v => v !== \"none\" && v !== \"createLock\"); // none is default when there is nothing\n    setLoadingIndicator(currentLoadingIndicator);\n    setLockError(\"Lock could not be created, please check the amount of SHN that you are locking. Additionally check that you have approved the contract.\");\n  }\n}\nimport addresses from \"../../../static/config/config\";\nexport function getAddress(chainId, contract) {\n  let chainIdContainer = {\n    \"0x1\": \"main\",\n    \"0x89\": \"matic\",\n    \"0x13881\": \"mumbai\",\n    \"0x539\": \"hardhat\",\n  };\n  let chain = chainIdContainer[chainId];\n  console.log(\"chainx \", chain, typeof chain, addresses[contract][chain]);\n  if (typeof chain != \"undefined\") {\n    return addresses[contract][chain];\n  } else {\n    return addresses[shnAddress].hardhat;\n  }\n}\n\n\nexport function roundTo2Decimals(num){\n  return Math.round(num * 100) / 100\n}"],"sourceRoot":""}