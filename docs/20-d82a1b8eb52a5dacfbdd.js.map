{"version":3,"sources":["webpack:///./node_modules/to-arraybuffer/index.js","webpack:///./node_modules/core-js/modules/es.string.trim-start.js","webpack:///./node_modules/core-js/modules/es.string.trim-end.js","webpack:///./node_modules/https-browserify/index.js","webpack:///./node_modules/os-browserify/browser.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/stream-http/lib/response.js"],"names":["Buffer","module","exports","buf","Uint8Array","byteOffset","byteLength","buffer","slice","isBuffer","arrayCopy","length","len","i","Error","$","$trimStart","start","FORCED","forcedStringTrimMethod","trimStart","this","target","proto","forced","trimLeft","$trimEnd","end","trimEnd","trimRight","http","url","https","key","hasOwnProperty","validateParams","params","parse","protocol","request","cb","call","get","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","arguments","source","Object","prototype","requireObjectCoercible","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","trim","inherits","response","stream","toArrayBuffer","IncomingMessage","rStates","readyStates","ClientRequest","opts","preferBinary","self","Writable","_opts","_body","_headers","auth","setHeader","toString","keys","headers","forEach","name","useFetch","mode","capability","abortController","overrideMimeType","_mode","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","decideMode","_fetchTimer","on","_onFinish","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","concat","blobConstructor","global","Blob","map","headersList","keyName","Array","isArray","v","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","xhr","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","split","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","status","e","statusValid","_write","chunk","encoding","destroy","data","flushHeaders","setNoDelay","setSocketKeepAlive","extend","statusCodes","defaultProtocol","search","host","port","path","toUpperCase","req","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","writableStream","isFunction","WritableStream","ArrayBuffer","getXHR","XDomainRequest","checkTypeSupport","haveArrayBuffer","haveSlice","VBArray","fails","whitespaces","METHOD_NAME","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","Readable","rawHeaders","trailers","rawTrailers","statusCode","statusMessage","statusText","writable","write","Promise","resolve","reject","_resumeFetch","close","pipeTo","catch","reader","getReader","read","result","done","_pos","responseURL","getAllResponseHeaders","matches","match","_charset","mimeType","charsetMatch","_read","responseBody","toArray","responseText","newData","substr","charCodeAt","MSStreamReader","onload","readAsArrayBuffer"],"mappings":"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","file":"20-d82a1b8eb52a5dacfbdd.js","sourcesContent":["var Buffer = require('buffer').Buffer;\n\nmodule.exports = function (buf) {\n  // If the buffer is backed by a Uint8Array, a faster version will work\n  if (buf instanceof Uint8Array) {\n    // If the buffer isn't a subarray, return the underlying ArrayBuffer\n    if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n      return buf.buffer;\n    } else if (typeof buf.buffer.slice === 'function') {\n      // Otherwise we need to get a proper copy\n      return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    }\n  }\n\n  if (Buffer.isBuffer(buf)) {\n    // This is the slow version that will work with any Buffer\n    // implementation (even in old browsers)\n    var arrayCopy = new Uint8Array(buf.length);\n    var len = buf.length;\n\n    for (var i = 0; i < len; i++) {\n      arrayCopy[i] = buf[i];\n    }\n\n    return arrayCopy.buffer;\n  } else {\n    throw new Error('Argument must be a Buffer');\n  }\n};","'use strict';\nvar $ = require('../internals/export');\nvar $trimStart = require('../internals/string-trim').start;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\nvar FORCED = forcedStringTrimMethod('trimStart');\n\nvar trimStart = FORCED ? function trimStart() {\n  return $trimStart(this);\n} : ''.trimStart;\n\n// `String.prototype.{ trimStart, trimLeft }` methods\n// https://tc39.es/ecma262/#sec-string.prototype.trimstart\n// https://tc39.es/ecma262/#String.prototype.trimleft\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimStart: trimStart,\n  trimLeft: trimStart\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trimEnd = require('../internals/string-trim').end;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\nvar FORCED = forcedStringTrimMethod('trimEnd');\n\nvar trimEnd = FORCED ? function trimEnd() {\n  return $trimEnd(this);\n} : ''.trimEnd;\n\n// `String.prototype.{ trimEnd, trimRight }` methods\n// https://tc39.es/ecma262/#sec-string.prototype.trimend\n// https://tc39.es/ecma262/#String.prototype.trimright\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimEnd: trimEnd,\n  trimRight: trimEnd\n});\n","var http = require('http');\n\nvar url = require('url');\n\nvar https = module.exports;\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key];\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params);\n  return http.request.call(this, params, cb);\n};\n\nhttps.get = function (params, cb) {\n  params = validateParams(params);\n  return http.get.call(this, params, cb);\n};\n\nfunction validateParams(params) {\n  if (typeof params === 'string') {\n    params = url.parse(params);\n  }\n\n  if (!params.protocol) {\n    params.protocol = 'https:';\n  }\n\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"');\n  }\n\n  return params;\n}","exports.endianness = function () {\n  return 'LE';\n};\n\nexports.hostname = function () {\n  if (typeof location !== 'undefined') {\n    return location.hostname;\n  } else return '';\n};\n\nexports.loadavg = function () {\n  return [];\n};\n\nexports.uptime = function () {\n  return 0;\n};\n\nexports.freemem = function () {\n  return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n  return Number.MAX_VALUE;\n};\n\nexports.cpus = function () {\n  return [];\n};\n\nexports.type = function () {\n  return 'Browser';\n};\n\nexports.release = function () {\n  if (typeof navigator !== 'undefined') {\n    return navigator.appVersion;\n  }\n\n  return '';\n};\n\nexports.networkInterfaces = exports.getNetworkInterfaces = function () {\n  return {};\n};\n\nexports.arch = function () {\n  return 'javascript';\n};\n\nexports.platform = function () {\n  return 'browser';\n};\n\nexports.tmpdir = exports.tmpDir = function () {\n  return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n  return '/';\n};","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n};","var capability = require('./capability');\n\nvar inherits = require('inherits');\n\nvar response = require('./response');\n\nvar stream = require('readable-stream');\n\nvar toArrayBuffer = require('to-arraybuffer');\n\nvar IncomingMessage = response.IncomingMessage;\nvar rStates = response.readyStates;\n\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.fetch && useFetch) {\n    return 'fetch';\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer';\n  } else if (capability.msstream) {\n    return 'ms-stream';\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer';\n  } else if (capability.vbArray && preferBinary) {\n    return 'text:vbarray';\n  } else {\n    return 'text';\n  }\n}\n\nvar ClientRequest = module.exports = function (opts) {\n  var self = this;\n  stream.Writable.call(self);\n  self._opts = opts;\n  self._body = [];\n  self._headers = {};\n  if (opts.auth) self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'));\n  Object.keys(opts.headers).forEach(function (name) {\n    self.setHeader(name, opts.headers[name]);\n  });\n  var preferBinary;\n  var useFetch = true;\n\n  if (opts.mode === 'disable-fetch' || 'requestTimeout' in opts && !capability.abortController) {\n    // If the use of XHR should be preferred. Not typically needed.\n    useFetch = false;\n    preferBinary = true;\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false;\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType;\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true;\n  } else {\n    throw new Error('Invalid value for opts.mode');\n  }\n\n  self._mode = decideMode(preferBinary, useFetch);\n  self._fetchTimer = null;\n  self.on('finish', function () {\n    self._onFinish();\n  });\n};\n\ninherits(ClientRequest, stream.Writable);\n\nClientRequest.prototype.setHeader = function (name, value) {\n  var self = this;\n  var lowerName = name.toLowerCase(); // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n  // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n  // http-browserify did it, so I will too.\n\n  if (unsafeHeaders.indexOf(lowerName) !== -1) return;\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  };\n};\n\nClientRequest.prototype.getHeader = function (name) {\n  var header = this._headers[name.toLowerCase()];\n\n  if (header) return header.value;\n  return null;\n};\n\nClientRequest.prototype.removeHeader = function (name) {\n  var self = this;\n  delete self._headers[name.toLowerCase()];\n};\n\nClientRequest.prototype._onFinish = function () {\n  var self = this;\n  if (self._destroyed) return;\n  var opts = self._opts;\n  var headersObj = self._headers;\n  var body = null;\n\n  if (opts.method !== 'GET' && opts.method !== 'HEAD') {\n    if (capability.arraybuffer) {\n      body = toArrayBuffer(Buffer.concat(self._body));\n    } else if (capability.blobConstructor) {\n      body = new global.Blob(self._body.map(function (buffer) {\n        return toArrayBuffer(buffer);\n      }), {\n        type: (headersObj['content-type'] || {}).value || ''\n      });\n    } else {\n      // get utf8 string\n      body = Buffer.concat(self._body).toString();\n    }\n  } // create flattened list of headers\n\n\n  var headersList = [];\n  Object.keys(headersObj).forEach(function (keyName) {\n    var name = headersObj[keyName].name;\n    var value = headersObj[keyName].value;\n\n    if (Array.isArray(value)) {\n      value.forEach(function (v) {\n        headersList.push([name, v]);\n      });\n    } else {\n      headersList.push([name, value]);\n    }\n  });\n\n  if (self._mode === 'fetch') {\n    var signal = null;\n    var fetchTimer = null;\n\n    if (capability.abortController) {\n      var controller = new AbortController();\n      signal = controller.signal;\n      self._fetchAbortController = controller;\n\n      if ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n        self._fetchTimer = global.setTimeout(function () {\n          self.emit('requestTimeout');\n          if (self._fetchAbortController) self._fetchAbortController.abort();\n        }, opts.requestTimeout);\n      }\n    }\n\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headersList,\n      body: body || undefined,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin',\n      signal: signal\n    }).then(function (response) {\n      self._fetchResponse = response;\n\n      self._connect();\n    }, function (reason) {\n      global.clearTimeout(self._fetchTimer);\n      if (!self._destroyed) self.emit('error', reason);\n    });\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest();\n\n    try {\n      xhr.open(self._opts.method, self._opts.url, true);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    } // Can't set responseType on really old browsers\n\n\n    if ('responseType' in xhr) xhr.responseType = self._mode.split(':')[0];\n    if ('withCredentials' in xhr) xhr.withCredentials = !!opts.withCredentials;\n    if (self._mode === 'text' && 'overrideMimeType' in xhr) xhr.overrideMimeType('text/plain; charset=x-user-defined');\n\n    if ('requestTimeout' in opts) {\n      xhr.timeout = opts.requestTimeout;\n\n      xhr.ontimeout = function () {\n        self.emit('requestTimeout');\n      };\n    }\n\n    headersList.forEach(function (header) {\n      xhr.setRequestHeader(header[0], header[1]);\n    });\n    self._response = null;\n\n    xhr.onreadystatechange = function () {\n      switch (xhr.readyState) {\n        case rStates.LOADING:\n        case rStates.DONE:\n          self._onXHRProgress();\n\n          break;\n      }\n    }; // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n    // in onprogress, not in onreadystatechange with xhr.readyState = 3\n\n\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function () {\n        self._onXHRProgress();\n      };\n    }\n\n    xhr.onerror = function () {\n      if (self._destroyed) return;\n      self.emit('error', new Error('XHR error'));\n    };\n\n    try {\n      xhr.send(body);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n  }\n};\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\n\n\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status;\n    return status !== null && status !== 0;\n  } catch (e) {\n    return false;\n  }\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n  var self = this;\n  if (!statusValid(self._xhr) || self._destroyed) return;\n  if (!self._response) self._connect();\n\n  self._response._onXHRProgress();\n};\n\nClientRequest.prototype._connect = function () {\n  var self = this;\n  if (self._destroyed) return;\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer);\n\n  self._response.on('error', function (err) {\n    self.emit('error', err);\n  });\n\n  self.emit('response', self._response);\n};\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n  var self = this;\n\n  self._body.push(chunk);\n\n  cb();\n};\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n  var self = this;\n  self._destroyed = true;\n  global.clearTimeout(self._fetchTimer);\n  if (self._response) self._response._destroyed = true;\n  if (self._xhr) self._xhr.abort();else if (self._fetchAbortController) self._fetchAbortController.abort();\n};\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n  var self = this;\n\n  if (typeof data === 'function') {\n    cb = data;\n    data = undefined;\n  }\n\n  stream.Writable.prototype.end.call(self, data, encoding, cb);\n};\n\nClientRequest.prototype.flushHeaders = function () {};\n\nClientRequest.prototype.setTimeout = function () {};\n\nClientRequest.prototype.setNoDelay = function () {};\n\nClientRequest.prototype.setSocketKeepAlive = function () {}; // Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\n\n\nvar unsafeHeaders = ['accept-charset', 'accept-encoding', 'access-control-request-headers', 'access-control-request-method', 'connection', 'content-length', 'cookie', 'cookie2', 'date', 'dnt', 'expect', 'host', 'keep-alive', 'origin', 'referer', 'te', 'trailer', 'transfer-encoding', 'upgrade', 'via'];","var ClientRequest = require('./lib/request');\n\nvar response = require('./lib/response');\n\nvar extend = require('xtend');\n\nvar statusCodes = require('builtin-status-codes');\n\nvar url = require('url');\n\nvar http = exports;\n\nhttp.request = function (opts, cb) {\n  if (typeof opts === 'string') opts = url.parse(opts);else opts = extend(opts); // Normally, the page is loaded from http or https, so not specifying a protocol\n  // will result in a (valid) protocol-relative url. However, this won't work if\n  // the protocol is something else, like 'file:'\n\n  var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : '';\n  var protocol = opts.protocol || defaultProtocol;\n  var host = opts.hostname || opts.host;\n  var port = opts.port;\n  var path = opts.path || '/'; // Necessary for IPv6 addresses\n\n  if (host && host.indexOf(':') !== -1) host = '[' + host + ']'; // This may be a relative url. The browser should always be able to interpret it correctly.\n\n  opts.url = (host ? protocol + '//' + host : '') + (port ? ':' + port : '') + path;\n  opts.method = (opts.method || 'GET').toUpperCase();\n  opts.headers = opts.headers || {}; // Also valid opts.auth, opts.mode\n\n  var req = new ClientRequest(opts);\n  if (cb) req.on('response', cb);\n  return req;\n};\n\nhttp.get = function get(opts, cb) {\n  var req = http.request(opts, cb);\n  req.end();\n  return req;\n};\n\nhttp.ClientRequest = ClientRequest;\nhttp.IncomingMessage = response.IncomingMessage;\n\nhttp.Agent = function () {};\n\nhttp.Agent.defaultMaxSockets = 4;\nhttp.globalAgent = new http.Agent();\nhttp.STATUS_CODES = statusCodes;\nhttp.METHODS = ['CHECKOUT', 'CONNECT', 'COPY', 'DELETE', 'GET', 'HEAD', 'LOCK', 'M-SEARCH', 'MERGE', 'MKACTIVITY', 'MKCOL', 'MOVE', 'NOTIFY', 'OPTIONS', 'PATCH', 'POST', 'PROPFIND', 'PROPPATCH', 'PURGE', 'PUT', 'REPORT', 'SEARCH', 'SUBSCRIBE', 'TRACE', 'UNLOCK', 'UNSUBSCRIBE'];","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream);\nexports.writableStream = isFunction(global.WritableStream);\nexports.abortController = isFunction(global.AbortController);\nexports.blobConstructor = false;\n\ntry {\n  new Blob([new ArrayBuffer(1)]);\n  exports.blobConstructor = true;\n} catch (e) {} // The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\n\n\nvar xhr;\n\nfunction getXHR() {\n  // Cache the xhr value\n  if (xhr !== undefined) return xhr;\n\n  if (global.XMLHttpRequest) {\n    xhr = new global.XMLHttpRequest(); // If XDomainRequest is available (ie only, where xhr might not work\n    // cross domain), use the page location. Otherwise use example.com\n    // Note: this doesn't actually make an http request.\n\n    try {\n      xhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com');\n    } catch (e) {\n      xhr = null;\n    }\n  } else {\n    // Service workers don't have XHR\n    xhr = null;\n  }\n\n  return xhr;\n}\n\nfunction checkTypeSupport(type) {\n  var xhr = getXHR();\n  if (!xhr) return false;\n\n  try {\n    xhr.responseType = type;\n    return xhr.responseType === type;\n  } catch (e) {}\n\n  return false;\n} // For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\n\n\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined';\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice); // If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\n\nexports.arraybuffer = exports.fetch || haveArrayBuffer && checkTypeSupport('arraybuffer'); // These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\n\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream');\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer && checkTypeSupport('moz-chunked-arraybuffer'); // If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\n\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false);\nexports.vbArray = isFunction(global.VBArray);\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nxhr = null; // Help gc","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var capability = require('./capability');\n\nvar inherits = require('inherits');\n\nvar stream = require('readable-stream');\n\nvar rStates = exports.readyStates = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n};\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n  var self = this;\n  stream.Readable.call(self);\n  self._mode = mode;\n  self.headers = {};\n  self.rawHeaders = [];\n  self.trailers = {};\n  self.rawTrailers = []; // Fake the 'close' event, but only once 'end' fires\n\n  self.on('end', function () {\n    // The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n    process.nextTick(function () {\n      self.emit('close');\n    });\n  });\n\n  if (mode === 'fetch') {\n    self._fetchResponse = response;\n    self.url = response.url;\n    self.statusCode = response.status;\n    self.statusMessage = response.statusText;\n    response.headers.forEach(function (header, key) {\n      self.headers[key.toLowerCase()] = header;\n      self.rawHeaders.push(key, header);\n    });\n\n    if (capability.writableStream) {\n      var writable = new WritableStream({\n        write: function write(chunk) {\n          return new Promise(function (resolve, reject) {\n            if (self._destroyed) {\n              reject();\n            } else if (self.push(new Buffer(chunk))) {\n              resolve();\n            } else {\n              self._resumeFetch = resolve;\n            }\n          });\n        },\n        close: function close() {\n          global.clearTimeout(fetchTimer);\n          if (!self._destroyed) self.push(null);\n        },\n        abort: function abort(err) {\n          if (!self._destroyed) self.emit('error', err);\n        }\n      });\n\n      try {\n        response.body.pipeTo(writable).catch(function (err) {\n          global.clearTimeout(fetchTimer);\n          if (!self._destroyed) self.emit('error', err);\n        });\n        return;\n      } catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\n    } // fallback for when writableStream or pipeTo aren't available\n\n\n    var reader = response.body.getReader();\n\n    function read() {\n      reader.read().then(function (result) {\n        if (self._destroyed) return;\n\n        if (result.done) {\n          global.clearTimeout(fetchTimer);\n          self.push(null);\n          return;\n        }\n\n        self.push(new Buffer(result.value));\n        read();\n      }).catch(function (err) {\n        global.clearTimeout(fetchTimer);\n        if (!self._destroyed) self.emit('error', err);\n      });\n    }\n\n    read();\n  } else {\n    self._xhr = xhr;\n    self._pos = 0;\n    self.url = xhr.responseURL;\n    self.statusCode = xhr.status;\n    self.statusMessage = xhr.statusText;\n    var headers = xhr.getAllResponseHeaders().split(/\\r?\\n/);\n    headers.forEach(function (header) {\n      var matches = header.match(/^([^:]+):\\s*(.*)/);\n\n      if (matches) {\n        var key = matches[1].toLowerCase();\n\n        if (key === 'set-cookie') {\n          if (self.headers[key] === undefined) {\n            self.headers[key] = [];\n          }\n\n          self.headers[key].push(matches[2]);\n        } else if (self.headers[key] !== undefined) {\n          self.headers[key] += ', ' + matches[2];\n        } else {\n          self.headers[key] = matches[2];\n        }\n\n        self.rawHeaders.push(matches[1], matches[2]);\n      }\n    });\n    self._charset = 'x-user-defined';\n\n    if (!capability.overrideMimeType) {\n      var mimeType = self.rawHeaders['mime-type'];\n\n      if (mimeType) {\n        var charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/);\n\n        if (charsetMatch) {\n          self._charset = charsetMatch[1].toLowerCase();\n        }\n      }\n\n      if (!self._charset) self._charset = 'utf-8'; // best guess\n    }\n  }\n};\n\ninherits(IncomingMessage, stream.Readable);\n\nIncomingMessage.prototype._read = function () {\n  var self = this;\n  var resolve = self._resumeFetch;\n\n  if (resolve) {\n    self._resumeFetch = null;\n    resolve();\n  }\n};\n\nIncomingMessage.prototype._onXHRProgress = function () {\n  var self = this;\n  var xhr = self._xhr;\n  var response = null;\n\n  switch (self._mode) {\n    case 'text:vbarray':\n      // For IE9\n      if (xhr.readyState !== rStates.DONE) break;\n\n      try {\n        // This fails in IE8\n        response = new global.VBArray(xhr.responseBody).toArray();\n      } catch (e) {}\n\n      if (response !== null) {\n        self.push(new Buffer(response));\n        break;\n      }\n\n    // Falls through in IE8\t\n\n    case 'text':\n      try {\n        // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n        response = xhr.responseText;\n      } catch (e) {\n        self._mode = 'text:vbarray';\n        break;\n      }\n\n      if (response.length > self._pos) {\n        var newData = response.substr(self._pos);\n\n        if (self._charset === 'x-user-defined') {\n          var buffer = new Buffer(newData.length);\n\n          for (var i = 0; i < newData.length; i++) {\n            buffer[i] = newData.charCodeAt(i) & 0xff;\n          }\n\n          self.push(buffer);\n        } else {\n          self.push(newData, self._charset);\n        }\n\n        self._pos = response.length;\n      }\n\n      break;\n\n    case 'arraybuffer':\n      if (xhr.readyState !== rStates.DONE || !xhr.response) break;\n      response = xhr.response;\n      self.push(new Buffer(new Uint8Array(response)));\n      break;\n\n    case 'moz-chunked-arraybuffer':\n      // take whole\n      response = xhr.response;\n      if (xhr.readyState !== rStates.LOADING || !response) break;\n      self.push(new Buffer(new Uint8Array(response)));\n      break;\n\n    case 'ms-stream':\n      response = xhr.response;\n      if (xhr.readyState !== rStates.LOADING) break;\n      var reader = new global.MSStreamReader();\n\n      reader.onprogress = function () {\n        if (reader.result.byteLength > self._pos) {\n          self.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))));\n          self._pos = reader.result.byteLength;\n        }\n      };\n\n      reader.onload = function () {\n        self.push(null);\n      }; // reader.onerror = ??? // TODO: this\n\n\n      reader.readAsArrayBuffer(response);\n      break;\n  } // The ms-stream case handles end separately in reader.onload()\n\n\n  if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n    self.push(null);\n  }\n};"],"sourceRoot":""}