{"version":3,"sources":["webpack:///./src/pages/seed-sale.js","webpack:///./src/components/common/Table/index.js","webpack:///./src/components/common/subpages/seed/SeedCard.js","webpack:///./src/components/common/subpages/seed/seedContainer.js","webpack:///./src/hooks/useQueryParam","webpack:///./src/pages/deals.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["TableD","styled","td","visibility","TableR","tr","TableLabel","div","selected","SeedCard","setSeedSalesData","setActiveContract","setCardVisible","setDealsVisible","refetchData","isWalletEnabled1111","setRefetchData","getEligibilityStatus","loadingIndicator","setLoadingIndicator","seedSaleData","name","seedAddress","rate","offeredTokenSymbol","offeredTokenName","offeredTokenTotalSupply","acceptedTokenSymbol","acceptedTokenBalance","weiRaised","startTime","dealVisibility","endTime","acceptedTokenAddress","accessMechanism","distributionMechanism","offeredTokenAddress","percentageVested","cliffDuration","vestingDuration","cliffPeriod","vestingPeriod","vestedBalance","capPerAddressEnabled","capPerAddress","accessNFT","accessToken","accessNTT","totalOffered","tier1","tier2","tier3","tier4","tier1Cap","tier2Cap","tier3Cap","tier4Cap","accessTokenSymbol","capForNTT","capForNFT","nftBalance","nttBalance","kycEnabled","hasValidNtt","accessTokenBalance","theme","useContext","ThemeContext","WalletContext","isWalletEnabled","chainId","setWalletStatus","currentAccount","setChainId","nativeBalance","setCurrentAccount","nativeTokenName","setNativeBalance","console","log","useState","approveLoading","setApproveLoading","shineBalance","currentStatus","tokenContractAddress","setTokenContractAddress","projectBalance","setProjectBalance","seedSaleShnBalance","setSeedSaleShnBalance","metamaskErrorCode","setMetamaskErrorCode","relativeCap","contributions","isShineBought","setShineBought","isTokenWithdrawn","setIsTokenWithdrawn","shineBoughtAmount","setShineBoughtAmount","isTransactionBeingProcessed","setTransactionBeingProcessed","amountToSpend","setAmountToSpend","currentEthPrice","setCurrentEthPrice","saleContractAddress","setSaleContractAddress","setRateInUsd","vestedSoFar","setVestedSoFar","secondsSinceEpoch","setSecondsSinceEpoch","approvalStatus","setApprovalStatus","useEffect","a","utils","ERC20","abi","getNativeTokenPrice","getRateInUsd","Math","round","Date","now","rewardPerSecond","getLocked","timer","setTimeout","clearTimeout","checkApprovalStatus","axios","get","getCoingeckoName","then","response","data","current_price","catch","error","project","title","image","frontendDetails","totalRaise","incubationStage","totalSupply","chain","roundAllocation","technicalDetails","seed","date","metamaskDetails","sybmol","network","caps","amount","saleAbi","Seed","approveContract","recoverErc20Tokens","style","display","flexDirection","paddingTop","alignItems","onClick","cursor","justifyContent","background","border","margin","fontSize","fontWeight","color","paddingBottom","fromWei","fromFixed","ZERO_ADDRESS","calculatedTier","getCustomTier","flexWrap","paddingRight","getAccessStatus","getDistributionInfo","handleWithdrawUnsoldTokens","Number","parseFloat","toLocaleString","undefined","maximumFractionDigits","getNetworkName","width","ProgressBar","animated","striped","variant","label","htmlFor","autoComplete","type","id","value","onChange","e","target","minimumFractionDigits","replace","loading","size","handleApprove","handleSwapButton","marginTop","SeedContainer","activeContract","offeredTokenBalance","setOfferedTokenBalance","setAcceptedTokenBalance","tokenASymbol","setTokenASymbol","tokenBSymbol","setTokenBSymbol","deploymentFee","setDeploymentFee","defaultTokenAFee","setDefaultTokenAFee","defaultTokenBFee","setDefaultTokenBFee","createdTag","setCreatedTag","salesLoading","setSalesLoading","notEnoughTokensAError","setNotEnoughTokensAError","titleError","setTitleError","successMessage","setSuccessMessage","errorMessage","setErrorMessage","cardVisible","dealsVisible","formVisible","setFormVisible","setTitle","setNativeTokenUsed","isListedCustomTokenUsed","setIsListedCustomTokenUsed","selectedTokenKey","setSelectedTokenKey","maxRaise","setMaxRaise","setVisibility","setAcceptedTokenAddress","requireKyc","setOfferedTokenAddress","tokenAmount","setTokenAMount","convertedRate","setConvertedRate","seedSalesData","seedIndex","setSeedIndex","allowance","setAllowance","vestingEnabled","setAccessMechanism","setDistributionMechanism","lockDuration","setLockDuration","whitelistedAddresses","setWhitelistedAddresses","capsForWhitelistedAddresses","setcapsForWhitelistedAddresses","whitelistError","setWhitelistError","nftCap","setNftCap","nttCap","setNttCap","nftAddress","setAccessNftAddress","nttAddress","setAccessNttAddress","accessTokenAddress","setAccessTokenAddress","accessTokenAmountTier1","setAccessTokenAmountTier1","accessTokenAmountTier2","setAccessTokenAmountTier2","accessTokenAmountTier3","setAccessTokenAmountTier3","accessTokenAmountTier4","setAccessTokenAmountTier4","setTier1Cap","setTier2Cap","setTier3Cap","setTier4Cap","setStartTime","parseInt","toString","setEndTime","setCliffDuration","setVestingDuration","setPercentageVested","acceptedTokenAddressArg","deployNewSeed","SeedFactory","getAddress","toWei","createdContract","paddingLeft","marginBottom","handleOfferedTokenAddress","getAttribute","offeredTokenKey","getTokenAddressFromDealsConfig","split","length","getIndex","getDeploymentFeeFromAbi","getTokenAFee","getTokenBFee","getSeedSales","loadSeedSales","getErc20Balance","getAllowance","getErc20Symbol","loadData","loadDataForAcceptedTokenAddress","getTokenRatio","calculateConvertedRate","borderRadius","boder","for","toLocaleLowerCase","toFixed","data-token","borderRight","marginRight","textAlign","event","checked","float","marginLeft","min","max","count","getTransactionCount","includes","href","checkTiersValidity","checkTierCapsValidity","isErrorInAccessMechanism","isErrorInDistributionMechanism","handleNewSeedDeploy","map","index","key","padding","clickable","height","handleSeedClick","timeConverter","handleParam","options","location","historyMethod","nullDeletes","params","URLSearchParams","search","delete","set","pathname","history","path","obj","TypeError","param","setParam","newValue","override","useQueryParam","position","bottom","description","mobileWidth","process","isChainSupported"],"mappings":"+FAAA,wDAIe,4BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,S,8shCCNSA,EAASC,IAAOC,GAAV,gEAAGD,CAAH,8GAMH,qBAAGE,YAA+B,aAGrCC,EAASH,IAAOI,GAAV,gEAAGJ,CAAH,kBAINK,EAAaL,IAAOM,IAAV,oEAAGN,CAAH,uCAEP,qBAAGO,SAA2B,QAAU,W,8JCuCjD,SAASC,EAAT,GAyDH,IAxDFC,EAwDC,EAxDDA,iBACAC,EAuDC,EAvDDA,kBACAC,EAsDC,EAtDDA,eACAC,EAqDC,EArDDA,gBAEAC,GAmDC,EApDDC,oBAoDC,EAnDDD,aACAE,EAkDC,EAlDDA,eAGAC,GA+CC,EAjDDC,iBAiDC,EAhDDC,oBAgDC,EA/CDF,sBA+CC,IA9CDG,aACEC,EA6CD,EA7CCA,KACAC,EA4CD,EA5CCA,YACAC,EA2CD,EA3CCA,KAEAC,GAyCD,EA1CCC,iBA0CD,EAzCCD,oBACAE,EAwCD,EAxCCA,wBACAC,EAuCD,EAvCCA,oBACAC,EAsCD,EAtCCA,qBACAC,EAqCD,EArCCA,UAEAC,GAmCD,EApCCC,eAoCD,EAnCCD,WACAE,EAkCD,EAlCCA,QACAC,EAiCD,EAjCCA,qBACAC,EAgCD,EAhCCA,gBACAC,EA+BD,EA/BCA,sBACAC,EA8BD,EA9BCA,oBACAC,EA6BD,EA7BCA,iBACAC,EA4BD,EA5BCA,cACAC,EA2BD,EA3BCA,gBACAC,EA0BD,EA1BCA,YACAC,EAyBD,EAzBCA,cACAC,EAwBD,EAxBCA,cACAC,EAuBD,EAvBCA,qBACAC,EAsBD,EAtBCA,cACAC,EAqBD,EArBCA,UAEAC,GAmBD,EApBCC,UAoBD,EAnBCD,aACAE,EAkBD,EAlBCA,aACAC,EAiBD,EAjBCA,MACAC,EAgBD,EAhBCA,MACAC,EAeD,EAfCA,MACAC,EAcD,EAdCA,MACAC,EAaD,EAbCA,SACAC,GAYD,EAZCA,SACAC,GAWD,EAXCA,SACAC,GAUD,EAVCA,SACAC,GASD,EATCA,kBACAC,GAQD,EARCA,UACAC,GAOD,EAPCA,UACAC,GAMD,EANCA,WACAC,GAKD,EALCA,WACAC,GAID,EAJCA,WACAC,GAGD,EAHCA,YACAC,GAED,EAFCA,mBAGMC,GAAUC,qBAAWC,KAArBF,MACR,GAAuJC,qBAAWE,KAA1JC,GAAR,GAAQA,gBAAkCC,IAA1C,GAAyBC,gBAAzB,GAA0CD,SAAqBE,IAA/D,GAAmDC,WAAnD,GAA+DD,gBAAmCE,IAAlG,GAA+EC,kBAA/E,GAAkGD,eAAiCE,IAAnI,GAAiHC,iBAAjH,GAAmID,iBAIjIE,QAAQC,IAAI,yBAA0BH,IAExC,OAA4CI,oBAAS,GAA9CC,GAAP,MAAuBC,GAAvB,MACA,GAAwCF,mBAAS,OAA1CG,GAAP,MACA,IADA,MAC0CH,mBAAS,SAA5CI,GAAP,MACA,IADA,MACwDJ,mBAAS,+CAA1DK,GAAP,MAA6BC,GAA7B,MAEA,GAAgDN,qBAChD,IADA,YAC4CA,sBAArCO,GAAP,MAAuBC,GAAvB,MAGA,GAAoDR,qBAA7CS,GAAP,MAA2BC,GAA3B,MACA,GAAkDV,qBAA3CW,GAAP,MAA0BC,GAA1B,MACA,GAAwCZ,qBACxC,IADA,YACsCA,sBAA/Ba,GAAP,MACA,IADA,MAC4Cb,sBAC5C,IADA,YAC0CA,sBAAnCc,GAAP,MACA,IADA,MACgDd,sBAEhD,IAFA,YAEwCA,oBAAS,IAA1Ce,GAAP,MAAsBC,GAAtB,MACA,GAAgDhB,oBAAS,GAAlDiB,GAAP,MAAyBC,GAAzB,MACA,GAAkDlB,oBAAS,GAApDmB,GAAP,MAA0BC,GAA1B,MACA,GAAoEpB,oBAAS,GAAtEqB,GAAP,MAAoCC,GAApC,MACA,GAA0CtB,mBAAS,GAA5CuB,GAAP,MAAsBC,GAAtB,MACA,GAAwCxB,mBAAS,IACjD,IADA,YAC8CA,sBAAvCyB,GAAP,MAAwBC,GAAxB,MACA,GAAkC1B,qBAClC,IADA,YACsDA,mBAAS,+CAAxD2B,GAAP,MAA4BC,GAA5B,MAEA,GAAkC5B,qBAAhB6B,IAAlB,aAEA,GAAsC7B,qBAA/B8B,GAAP,MAAoBC,GAApB,MACA,GAAkD/B,qBAA3CgC,GAAP,MAA0BC,GAA1B,MAEA,GAA4CjC,oBAAS,GAA9CkC,GAAP,MAAuBC,GAAvB,MACArC,QAAQC,IAAI,eAAgBjE,GAE5BsG,qBAAU,WAGR,GAFAtC,QAAQC,IAAI,mBAAoBjE,GAET,GAAnBuD,SAA0C,IAARhD,EAAqB,6CACzD,sBAAAgG,EAAA,6DACE/B,GAAwBlD,GACxBwE,GAAuBtF,GAEvBgG,IAAwB9B,GAAmBhB,GAAgB+C,EAAMC,IAAKpF,GACtEkF,IAA4B5B,GAAuB6B,EAAMC,IAAKlG,EAAac,GAL7E,KAME0C,QANF,SAMmC2C,YAAoB,QANvD,+BAMU1C,IANV,UAMc,cANd,WAOE8B,GAPF,KAOea,IAPf,KAO4BJ,IAAgB/F,GAP5C,UAOyDkG,YAAoBnD,IAP7E,4DAQE2C,GAAqBU,KAAKC,MAAMC,KAAKC,MAAQ,MAEzCH,KAAKC,MAAMC,KAAKC,MAAQ,MAAStF,EACnCuE,GAAe,GACNY,KAAKC,MAAMC,KAAKC,MAAQ,MAASrF,EAC1CsE,GAAegB,iBAAmBJ,KAAKC,MAAMC,KAAKC,MAAQ,KAAQtF,IAElEuE,GAAerE,GAfnB,6CADyD,uBAAC,WAAD,wBAmBzDsF,MAED,CAAC3D,GAAiBhD,EAAMP,IAE3BsG,qBAAU,WAER,GAAmB,GAAftG,EAAqB,CACvB,IAAMmH,EAAQC,YAAW,WACvBlH,GAAe,KACd,KACH,OAAO,kBAAMmH,aAAaF,OAE3B,CAACnH,IAEJsG,qBAAU,WACRgB,YAAoB5D,GAAgB+C,EAAMC,IAAKvF,EAAsBX,EAAaiF,GAAeY,MAChG,CAACZ,GAAelF,IAEnB+F,qBAAU,WACRiB,IACGC,IADH,sEAC6EC,YAAiBjE,KAC3FkE,MAAK,SAASC,GAEb/B,GAAmB+B,EAASC,KAAK,GAAGC,kBAErCC,OAAM,SAASC,GAEd/D,QAAQC,IAAI8D,MAEbL,MAAK,iBAGP,CAACjC,GAAejC,KA0CnB,IAAMwE,GAAU,CACdC,MAAO,UACPC,MAAO,OACPC,gBAAiB,CAAEC,WAAY,OAAQC,gBAAiB,OAAQC,YAAa,OAAQC,MAAO,QAAS9H,KAAM,QAAS+H,gBAAiB,QACrIC,iBAAkB,CAChBC,KAAM,CACJjI,KAAM,OACNkI,KAAM,gCACNC,gBAAiB,CAAEC,OAAQ,UAC3BC,QAAS,SACTC,KAAM,CAAE5G,MAAO,CAAE6G,OAAQ,KAAO5G,MAAO,CAAE4G,OAAQ,KAAO3G,MAAO,CAAE2G,OAAQ,KAAO1G,MAAO,CAAE0G,OAAQ,SAIjGC,GAAUC,EAAKxC,IAzJpB,8CAiRD,sBAAAH,EAAA,6DACEnC,IAAkB,GADpB,SAEQ+E,YAAgBzF,GAAgB+C,EAAMC,IAAKvF,EAAsBX,EAAagG,KAAYf,IAAgBY,IAFlH,OAGEjC,IAAkB,GAHpB,4CAjRC,oEA8RD,sBAAAmC,EAAA,sEACQ6C,aAAmB1F,GAAgBwF,EAAKxC,IAAKlG,EAAac,EAAqBkF,KAAY7B,KADnG,4CA9RC,sBAkSD,OACE,yBAAK0E,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,GAAIC,WAAY,WAClF,yBAAKC,QAAS,kBAZhB9J,IACAC,EAAkB,MAClBC,GAAe,QACfC,GAAgB,IAS6BsJ,MAAO,CAAEM,OAAQ,YAC1D,0CAEF,yBAAKN,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KACnE,kBAAC,IAAD,CAAWK,WAAW,QAAQC,OAAO,mBACnC,6BAAM3J,EAAqBiB,EAAiBS,EAAsBC,EAAegB,GAAYE,GAAYD,GAAYE,GAAaC,GAAoBf,IAEtJ,kBAAC,IAAD,KACE,kBAAC,IAAD,MACG,EACD,kBAAC,IAAD,CAAkB4H,OAAO,eAAeC,SAAS,OAAOC,WAAY,IAAKC,MAAM,SAC5E3J,KAKP,kBAAC,IAAD,CAAM2J,MAAM,QAAQb,MAAO,CAAEU,OAAQ,WACnC,4BAAI,IAGN,kBAAC,IAAD,CAAmBF,WAAW,SAC5B,yBAAKR,MAAO,CAAEc,cAAe,KAC3B,kBAAC,IAAD,CAAMD,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CI,YAAQlI,GADX,IAC2BxB,EAD3B,YACwD0J,YAAQlI,GAAgBmI,YAAU5J,GAD1F,IACkGU,GAAwBmJ,IAAezJ,EAAsBiD,KAIjK,yBAAKuF,MAAO,CAAEc,cAAe,KAC3B,kBAAC,IAAD,CAAMD,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,mBAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CxD,KAAoBxF,GADvB,OACuCwF,KAAoBtF,KAI7D,yBAAKmI,MAAO,CAAEc,cAAe,KAC3B,kBAAC,IAAD,CAAMD,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,kCAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CxD,IAAc5F,GADjB,IAC4CF,IAI9C,yBAAK2I,MAAO,CAAEc,cAAe,KAC3B,kBAAC,IAAD,CAAMD,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,QAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CK,YAAU5J,GADb,IACqBC,EADrB,UACgDS,GAAwBmJ,IAAezJ,EAAsBiD,KAG/G,yBAAKuF,MAAO,CAAEc,cAAe,KAC3B,kBAAC,IAAD,CAAMD,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,oBAlMZ,SAAyB5I,EAAiBU,EAAejB,EAAqBgC,EAAWD,EAAWM,EAAoBf,EAAOC,EAAOC,EAAOC,GAC3I,GAAuB,QAAnBlB,EACF,OACE,kBAAC,IAAD,CAAM8I,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,kBAIG,GAAuB,aAAnB5I,EACT,OACE,kBAAC,IAAD,CAAM8I,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,cACcI,YAAQtI,GADtB,IACuCjB,EADvC,gBAIG,GAAuB,YAAnBO,EACT,OACE,6BACE,kBAAC,IAAD,CAAM8I,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,cACcI,YAAQvH,GADtB,IACmChC,EADnC,gBAGA,kBAAC,IAAD,CAAMqJ,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,QACQjI,IAIP,GAAuB,YAAnBX,EACT,OACE,kBAAC,IAAD,CAAM8I,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,aACaI,YAAQxH,GADrB,IACkC/B,EADlC,gBAIG,GAAuB,oBAAnBO,EAAuC,CAChD,IAAImJ,EAAiBC,YAAcJ,YAAQlH,GAAqBkH,YAAQjI,GAAQiI,YAAQhI,GAAQgI,YAAQ/H,GAAQ+H,YAAQ9H,IACxH,OACE,6BACE,kBAAC,IAAD,CAAM4H,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,0BAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,iBACiBhI,GAEjB,kBAAC,IAAD,CAAMkI,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,iBACiBI,YAAQlH,GADzB,IAC+CP,GAD/C,KACoE4H,EADpE,KAGA,yBAAKlB,MAAO,CAAEC,QAAS,OAAQE,WAAY,GAAIW,cAAe,GAAIM,SAAU,OAAQb,eAAgB,kBAClG,yBAAKP,MAAO,CAAEc,cAAe,GAAIO,aAAc,KAC7C,kBAAC,IAAD,CAAMR,MAAyB,UAAlBK,EAA6B,UAAY,MAAON,WAAY,IAAKD,SAAS,QAAvF,UAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSI,YAAQjI,GADjB,IAC0BQ,IAE1B,kBAAC,IAAD,CAAMuH,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CI,YAAQ7H,GADX,IACuB1B,IAGzB,yBAAKwI,MAAO,CAAEc,cAAe,GAAIO,aAAc,KAC7C,kBAAC,IAAD,CAAMR,MAAyB,UAAlBK,EAA6B,UAAY,MAAON,WAAY,IAAKD,SAAS,QAAvF,UAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSI,YAAQhI,GADjB,IAC0BO,IAE1B,kBAAC,IAAD,CAAMuH,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CI,YAAQ5H,IADX,IACuB3B,IAGzB,yBAAKwI,MAAO,CAAEc,cAAe,GAAIO,aAAc,KAC7C,kBAAC,IAAD,CAAMR,MAAyB,UAAlBK,EAA6B,UAAY,MAAON,WAAY,IAAKD,SAAS,QAAvF,UAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSI,YAAQ/H,GADjB,IAC0BM,IAE1B,kBAAC,IAAD,CAAMuH,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CI,YAAQ3H,IADX,IACuB5B,IAGzB,yBAAKwI,MAAO,CAAEc,cAAe,GAAIO,aAAc,KAC7C,kBAAC,IAAD,CAAMR,MAAyB,UAAlBK,EAA6B,UAAY,MAAON,WAAY,IAAKD,SAAS,QAAvF,UAGA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,KACSI,YAAQ9H,GADjB,IAC0BK,IAE1B,kBAAC,IAAD,CAAMuH,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,cACc,KAEd,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7CI,YAAQ1H,IADX,IACuB7B,KAGpB,KAIX,MAAO,SA4FE8J,CAAgBvJ,EAAiBU,EAAejB,EAAqBgC,GAAWD,GAAWM,GAAoBf,EAAOC,EAAOC,EAAOC,IAEvI,6BAhQV,SAA6BjB,EAAuBE,EAAkBC,EAAeC,GACnF,MAA6B,QAAzBJ,EAEA,6BACE,kBAAC,IAAD,CAAM6I,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAC3C,IADH,0BAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7C,IAAMzI,EADT,+DACuFE,EAAkB,MADzG,UAK8B,kBAAzBJ,EAEP,6BACE,kBAAC,IAAD,CAAM6I,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAC3C,IADH,0BAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAC7C,IAAMzI,EADT,2EACmGE,EAAkB,MADrH,gCACyJD,EAAgB,MADzK,UAOF,6BACE,kBAAC,IAAD,CAAM0I,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAC3C,IADH,0BAIA,kBAAC,IAAD,CAAME,MAAM,UAAUD,WAAY,IAAKD,SAAS,QAAhD,uCAgOQY,CAAoBvJ,EAAuBE,EAAkBC,EAAeC,IAEjF8B,KAAmB,EAMpB,6BACA,6BACC2C,GAAoBhF,GAAW,kBAAC,IAAD,CAAQwI,QAAS,kBA7W1D,2CA6WgEmB,KAAvB,2BAChC,kBAAC,IAAD,CAAMX,MAAM,MAAMD,WAAY,KAC3B/I,GAAWgF,GAAoBhF,GAAW,gBAE7C,6BACA,+BAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAW+I,WAAY,IAAKD,SAAS,OAAOE,MAAM,SAChD,+BAAKxJ,IACJ,EAKD,kBAAC,IAAD,iBACW,0BAAM2I,MAAO,CAAEa,MAAO,YAAc3F,GAApC,MAGX,yCACW,IACT,0BAAM8E,MAAO,CAAEa,MAAO,YACnB,IACAY,OAAOC,WAAWtG,IAAgBuG,oBAAeC,EAAW,CAAEC,sBAAuB,IAFxF,IAE+FxK,KAKnG,6BAEE,kBAAC,IAAD,CAAWuJ,WAAY,IAAKD,SAAS,OAAOE,MAAM,SAChD,2BAAIrJ,EAAJ,MACC,EAKAM,IAAyBqF,KACxB,kBAAC,IAAD,KACG,IADH,YAEW,0BAAM6C,MAAO,CAAEa,MAAO,YAAc/I,EAApC,OAKhBA,GAAwBqF,IACvB,yCACW,IACT,0BAAM6C,MAAO,CAAEa,MAAO,YACnBY,OAAOC,WAAWX,YAAQtJ,IAAuBkK,oBAAeC,EAAW,CAAEC,sBAAuB,IADvG,IAC8GrK,IAIhH,8BACGsK,YAAe3H,IADlB,YACqC,IACnC,0BAAM6F,MAAO,CAAEa,MAAO,YACnBY,OAAOC,WAAWnH,IAAeoH,oBAAeC,EAAW,CAAEC,sBAAuB,IADvF,IAC8FpH,MAKjG,GAKA,GAQA,EAQD,6BACCP,IACC,kBAAC,IAAD,CAASJ,MAAOA,IACd,yBAAKkG,MAAO,CAAE+B,MAAO,SACnB,kBAAC,IAAD,CAAMlB,MAAM,UAAUD,WAAY,MAC/B,EACD,8BACC,EAMD,8BACC,EAOD,6BACCjG,QAAQC,IAAI,eAAgB+B,IAE7B,6BACCjF,GACC,6BACE,6BACA,gDAAwBA,EAAYsJ,YAAU5J,GAASyB,EAAgB,IAAvE,MACA,kBAACmJ,EAAA,EAAD,CAAaC,UAAQ,EAACC,SAAO,EAACC,QAAQ,UAAUxE,IAAOjG,EAAYsJ,YAAU5J,GAASyB,EAAgB,IAAKuJ,MAAY1K,EAAYsJ,YAAU5J,GAASyB,EAAgB,IAAtD,OAIlH,yDAC2B4I,OAAOC,WAAWpG,IAAoBqG,iBADjE,IACoFtK,IAIrF,GAKA,GA0BH,kBAAC,IAAD,CAAMwJ,MAAM,UAAUD,WAAY,KAC/BpF,IAAqB,kBAAC,IAAD,KAAaA,GAAb,KAErBtB,KAAoBgC,IACnB,6BACE,6BACE,6BACCpE,GAAwBqF,IAAqB,2BAAOkF,QAAQ,cAAf,SAAmC5H,GAAnC,YAAsE,2BAAO4H,QAAQ,cAAf,SAAmC7K,EAAnC,YACpH,6BACA,kBAAC,IAAD,CAAU8K,aAAa,MAAMC,KAAK,SAASC,GAAG,aAAaC,MAAOrG,GAAesG,SAAU,SAAAC,GAAC,OAAIxF,KAAqCwF,EAAEC,OAAOH,MAAOpG,OACpJ1B,QAAQC,IAAI,QAAS0B,GAAiBF,GAAeqF,OAAOC,WAAWpF,GAAkBF,IAAeuF,kBACxGvF,IACC,8BACGtE,GAAwBqF,KACvB,8BACG,IACD,oCAAUsE,OAAOC,WAAWpF,GAAkBF,IAAeuF,iBAA7D,QAFF,IAE4F,6BAAO,KAGrG,8BACE,6BADF,gCAEgCxE,IAA6Bf,GAAe4E,YAAU5J,IAFtF,IAE+FC,IAE9F,GAGL,6BArBF,IAqBS,6BAEPsD,QAAQC,IAAI,SAAUI,GAAcW,IACnCD,IAAeV,IAAgBoB,GAAgBe,IAA6BzB,GAAaV,IAAgBW,IAAiD,YAAhCwB,IAAcnC,KACvI,kBAAC,IAAD,CAAM6F,MAAM,UAAZ,6GAC6G1D,IAAcnC,IAD3H,4CACmL,IACjL,0BACEqF,QAAS,SAAAsC,GAAC,OACRtG,GACEoF,OAAOC,WAAWvE,IAA6BzB,GAAaV,IAAgBW,GAAgB,MACzFgG,oBAAeC,EAAW,CACzBiB,sBAAuB,EACvBhB,sBAAuB,IAExBiB,QAAQ,IAAK,MAGpB9C,MAAO,CAAEM,OAAQ,UAAWO,MAAO,YAElCY,OAAOC,WAAWvE,IAA6BzB,GAAaV,IAAgBW,GAAgB,MAAQgG,oBAAeC,EAAW,CAC7HiB,sBAAuB,EACvBhB,sBAAuB,IACrB,KACE,IACPpH,IAGL,6BACA,6BACA,kBAAC,IAAD,KACGsC,KACGjC,GAKA,0BAAMkF,MAAO,CAAEqB,aAAc,KAC3B,kBAAC,IAAD,CAAaR,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAC7D,kBAAC,IAAD,uBANF,kBAAC,IAAD,CAAe5G,MAAOA,GAAOuG,QAAS,kBAhkBjE,2CAgkBuE4C,KAA5C,YAUJ,kBAAC,IAAD,CACEnJ,MAAOA,GACPuG,QAAS,kBAnUnC,SAA0BvI,EAAsBsE,EAAeC,EAAkBR,EAAgBI,EAAsBE,EAA8BV,EAAsBpB,EAAgBuF,EAASpD,EAAqBvB,GACnNnD,GAAwBqF,IAC1BA,IAAqBf,EAAeC,EAAkBR,EAAgBI,EAAsBE,EAA8BV,EAAsBpB,EAAgBuF,EAASpD,EAAqBvB,EAAepE,GAE7MsG,KAAyBf,EAAeC,EAAkBR,EAAgBI,EAAsBE,EAA8BV,EAAsBpB,EAAgBuF,EAASpD,EAAqBvB,EAAepE,GAgUzLqM,CAAiBpL,EAAsBsE,GAAeC,GAAkBR,GAAgBI,GAAsBE,GAA8BV,GAAsBpB,GAAgBuF,GAASpD,GAAqBvB,MAHpN,QAQA,kBAAC,IAAD,CAAMyF,OAAO,aAAaG,MAAM,WAC7B,KACA,KAKP,6BACA,8BAGH3G,IAAmB3B,GAAiBoC,QAAQC,IAAI,mBAAoBuC,IAAc5E,IAClFA,GAAiBA,EAAgB,GAChC,6BACE,kBAAC,IAAD,KACGF,GAAeC,GACd,kBAAC,IAAD,CAAMoI,OAAO,aAAaG,MAAM,WAC7B,IADH,qBAEqB1D,KAAoB9E,IAI3C,kBAAC,IAAD,CAAMqI,OAAO,aAAaG,MAAM,WAC7B,IADH,gBAEgB1D,KAAoB7E,KAGtC,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAewB,MAAOA,GAAOuG,QAAS,kBAAMlD,KAAqByC,GAASpD,GAAqBnC,GAAgB8B,GAA8BV,GAAsBM,GAAqBF,MAAxL,yBAGuB,IAAfc,IACN,kBAAC,IAAD,CAAM+D,OAAO,aAAaG,MAAM,WAC7B,IADH,cAEcY,OAAOC,WAAWvE,IAAcR,KAAcgF,oBAAeC,EAAW,CAAEC,sBAAuB,IAF/G,IAEsHxK,EAAoB,KAG5I,kBAAC,IAAD,CAAMqJ,OAAO,aAAaG,MAAM,WAC7B,IADH,mBAEmBY,OAAOC,WAAWvE,IAAc5E,IAAgBoJ,oBAAeC,EAAW,CAAEC,sBAAuB,IAFtH,IAE6HxK,EAAoB,OAKtJuE,KAAkBM,IACjB,yBAAK8D,MAAO,CAAEmD,UAAW,KACvB,4DACgC1B,OAAOC,WAAW1F,IAAmB2F,iBADrE,IACwFtK,EADxF,aACqH,EAAkC,MAK1JyE,KAAqBI,IACpB,6BACE,6EAAmD7E,EAAnD,aAIH6E,IACC,6BACG,IACD,2CACA,kBAAC,IAAD,CAAa2E,MAAO,SAAUkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAHjE,IAGuE,6BAHvE,IAG8E,6BAC5E,4BACE,0FAQb/F,QAAQC,IAAI,mBAAoBT,GAASwE,GAAQS,iBAAiBnE,IAAewE,SAEjF9E,QAAQC,IAAI,gBAAiBI,O,oBC5tBjC,SAASoI,EAAT,GAA+D,IAAtCC,EAAqC,EAArCA,eAAgB7M,EAAqB,EAArBA,kBAC9C,EAA4KuD,qBAAWE,KAA/KI,EAAR,EAAQA,eAAmCH,GAA3C,EAAwBM,kBAAxB,EAA2CN,iBAAiBC,EAA5D,EAA4DA,QAASM,EAArE,EAAqEA,gBAAiBF,EAAtF,EAAsFA,cAAe5D,EAArG,EAAqGA,YAAaE,EAAlH,EAAkHA,eAAgBE,EAAlI,EAAkIA,iBAAkBC,EAApJ,EAAoJA,oBACpJ,EAAsD6D,qBAA/CyI,EAAP,KAA4BC,EAA5B,KACA,EAAwD1I,qBAAjDpD,EAAP,KAA6B+L,EAA7B,KACA,EAAwC3I,qBAAjC4I,EAAP,KAAqBC,EAArB,KACA,EAAwC7I,qBAAjC8I,EAAP,KAAqBC,EAArB,KAEA,EAA0C/I,qBAAnCgJ,EAAP,KAAsBC,EAAtB,KACA,EAAgDjJ,qBAAzCkJ,EAAP,KAAyBC,EAAzB,KACA,EAAgDnJ,qBAAzCoJ,EAAP,KAAyBC,EAAzB,KAEA,EAAoCrJ,qBAA7BsJ,GAAP,KAAmBC,GAAnB,KAEA,GAAwCvJ,oBAAS,GAA1CwJ,GAAP,MAAqBC,GAArB,MAGA,GAA0DzJ,oBAAS,GAA5D0J,GAAP,MAA8BC,GAA9B,MACA,GAAoC3J,oBAAS,GAAtC4J,GAAP,MAAmBC,GAAnB,MAEA,GAA4C7J,mBAAS,CAAC,SAA/C8J,GAAP,MAAuBC,GAAvB,MACA,GAAwC/J,qBAAjCgK,GAAP,MAAqBC,GAArB,MAEA,GAAsCjK,oBAAS,GAAxCkK,GAAP,MAAoBtO,GAApB,MACA,GAAwCoE,oBAAS,GAA1CmK,GAAP,MAAqBtO,GAArB,MACA,GAAsCmE,oBAAS,GAAxCoK,GAAP,MAAoBC,GAApB,MAEA,GAA0BrK,mBAAS,IAA5B+D,GAAP,MAAcuG,GAAd,MAEA,GAA8CtK,oBAAS,GAA/BuK,IAAxB,aACA,GAA8DvK,oBAAS,GAAhEwK,GAAP,MAAgCC,GAAhC,MACA,GAAgDzK,mBAAS,UAAlD0K,GAAP,MAAyBC,GAAzB,MACA,GAAsC3K,oBAAS,GAC/C,IADA,YACgCA,sBAAzB4K,GAAP,MAAiBC,GAAjB,MACA,GAAoC7K,mBAAS,WAAtC7E,GAAP,MAAmB2P,GAAnB,MAEA,GAAwD9K,qBAAjD/C,GAAP,MAA6B8N,GAA7B,MACA,GAAoC/K,oBAAS,GAAtCgL,GAAP,MAEA,IAFA,MAEsDhL,sBAA/C5C,GAAP,MAA4B6N,GAA5B,MACA,GAAsCjL,qBAA/BkL,GAAP,MAAoBC,GAApB,MACA,GAAwBnL,qBAAjBzD,GAAP,MACA,IADA,MAC0CyD,sBAAnCoL,GAAP,MAAsBC,GAAtB,MACA,GAA0CrL,qBAAnCsL,GAAP,MAAsB5P,GAAtB,MACA,GAAkCsE,qBAA3BuL,GAAP,MAAkBC,GAAlB,MACA,GAAkCxL,qBAA3ByL,GAAP,MAAkBC,GAAlB,MACA,GAA4C1L,oBAAS,GAA9C2L,GAAP,MAEA,IAFA,MAE8C3L,mBAAS,SAAhD9C,GAAP,MAAwB0O,GAAxB,MACA,GAA0D5L,mBAAS,WAA5D7C,GAAP,MAA8B0O,GAA9B,MACA,GAAwC7L,mBAAS,GAA1C8L,GAAP,MAAqBC,GAArB,MAEA,GAAwD/L,mBAAS,IAA1DgM,GAAP,MAA6BC,GAA7B,MACA,GAAsEjM,mBAAS,IAAxEkM,GAAP,MAAoCC,GAApC,MACA,GAA4CnM,oBAAS,GAA9CoM,GAAP,MAAuBC,GAAvB,MACA,GAA4BrM,mBAAS,GAA9BsM,GAAP,MAAeC,GAAf,MACA,GAA4BvM,mBAAS,GAA9BwM,GAAP,MAAeC,GAAf,MAEA,GAA0CzM,mBAAS,IAA5C0M,GAAP,MAAmBC,GAAnB,MACA,GAA0C3M,mBAAS,IAA5C4M,GAAP,MAAmBC,GAAnB,MAEA,GAAoD7M,mBAAS,IAAtD8M,GAAP,MAA2BC,GAA3B,MACA,GAA4D/M,mBAAS,GAA9DgN,GAAP,MAA+BC,GAA/B,MACA,GAA4DjN,mBAAS,GAA9DkN,GAAP,MAA+BC,GAA/B,MACA,GAA4DnN,mBAAS,GAA9DoN,GAAP,MAA+BC,GAA/B,MACA,GAA4DrN,mBAAS,GAA9DsN,GAAP,MAA+BC,GAA/B,MACA,GAAgCvN,mBAAS,GAAlC3B,GAAP,MAAiBmP,GAAjB,MACA,GAAgCxN,mBAAS,GAAlC1B,GAAP,MAAiBmP,GAAjB,MACA,GAAgCzN,mBAAS,GAAlCzB,GAAP,MAAiBmP,GAAjB,MACA,GAAgC1N,mBAAS,GAAlCxB,GAAP,MAAiBmP,GAAjB,MAEA,GAAkC3N,mBAAS,KAApClD,GAAP,MAAkB8Q,GAAlB,MACA,GAA8B5N,mBAAS6N,SAASA,SAAShL,KAAKC,MAAQ,IAAO,OAAagL,aAAnF9Q,GAAP,MAAgB+Q,GAAhB,MAEA,GAA0C/N,mBAAS,QAA5C1C,GAAP,MAAsB0Q,GAAtB,MACA,GAA8ChO,mBAAS,QAAhDzC,GAAP,MAAwB0Q,GAAxB,MACA,GAAgDjO,mBAAS,KAAlD3C,GAAP,MAAyB6Q,GAAzB,MA3EmE,8CA0LnE,WAAmC9Q,EAAqB+Q,GAAxD,iBAAA9L,EAAA,6DAIIpF,EAD6B,IAA3BkR,QAAmE,IAA3BA,EACnB/H,IAEA+H,EAGzBrO,QAAQC,IAAI,gBAAiBxD,GAAM6O,GAAejF,YAAUiF,IAAgBhO,EAAqB8N,GAAajO,GAC9G8M,GAAkB,CAAC,SACnBE,KAXF,SAY8BmE,YAC1B5O,EACApC,EACAH,EACAoR,EAAY7L,IACZwC,EAAKxC,IACL8L,YAAWhP,EAAS,sBACpBiP,aAAMrD,IACNE,GACAU,GACAxO,GACAC,GACAF,GACAP,GACAE,GACA8P,GACAyB,aAAMvB,IACNuB,aAAMrB,IACNqB,aAAMnB,IACNmB,aAAMjB,IACNiB,aAAMlQ,IACNkQ,aAAMjQ,IACNiQ,aAAMhQ,IACNgQ,aAAM/P,IACNuF,GACA7G,GACA8O,GACAE,GACAQ,GACA6B,aAAMjC,IACNtB,GACAsD,YAAWhP,EAAS,cACpBkN,GACArP,GACAhC,GACA,CAAC,QACDgB,EACA,CAAC,QACD4N,GACAE,IAnDJ,OAYMuE,EAZN,OAqDEjF,GAAciF,GArDhB,4CA1LmE,sBAkRnE,SAASvS,GAAqBiB,EAAiBS,EAAsBC,EAAegB,EAAYE,EAAYD,EAAYE,EAAaC,EAAoBf,GAEvJ,OADA6B,QAAQC,IAAI,YAAa7C,GACF,QAAnBA,EAEA,yBAAKiI,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,eACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAG1M,aAAnBxR,EACLS,GAAwBC,EAAgB,EAExC,yBAAKuH,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,aACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAKpO,yBAAKvJ,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,OAAQ8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAjF,WACA,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,aACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAI5M,YAAnBxR,EACL0B,EAAa,EAEb,yBAAKuG,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,YACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAKpO,yBAAKvJ,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,OAAQ8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAjF,WACA,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,YACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAI5M,YAAnBxR,EACL2B,EAAa,GAAKE,EAElB,yBAAKoG,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,YACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAKpO,yBAAKvJ,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,OAAQ8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAjF,WACA,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,YACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAI5M,oBAAnBxR,GACT4C,QAAQC,IAAI,eAAgBmG,YAAQlH,GAAqBkH,YAAQjI,GAAQiI,YAAQlH,IAAuBkH,YAAQjI,GAAQ2I,OAAOV,YAAQlH,KAAwB4H,OAAOV,YAAQjI,KAC1K2I,OAAOV,YAAQlH,KAAwB4H,OAAOV,YAAQjI,IAEtD,yBAAKkH,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,qBACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,MAKpO,yBAAKvJ,MAAO,CAAEC,QAAS,OAAQM,eAAgB,eAC7C,yBAAKP,MAAO,CAAEQ,WAAY,OAAQ8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAjF,WACA,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,qBACC5P,EAAaC,EAAc,yBAAKoG,MAAO,CAAEQ,WAAY,QAAS8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAlF,OAAoG,yBAAKvJ,MAAO,CAAEQ,WAAY,MAAO8I,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,KAAhF,OAAkG,YAdnO,EAkJT,SAASC,GAA0BjL,GACjC5D,QAAQC,IAAI,QAAS2D,EAAKqE,OAAO6G,aAAa,eAC9C,IAAIC,EAAkBnL,EAAKqE,OAAO6G,aAAa,cAC/CjE,GAAoBkE,GACG,UAAnBA,GACFlG,EAAwB,GACxBI,EAAgB,IAChBgC,GAAwB,IACxBN,IAA2B,GAC3BF,IAAmB,IACS,UAAnBsE,GACTtE,IAAmB,GACnB5B,EAAwB,GACxBI,EAAgB,IAChBgC,GAAwB,IACxBN,IAA2B,KAE3BA,IAA2B,GAC3B9B,EAAwB,GACxBI,EAAgB,IAChBgC,GAAwB+D,YAA+BxP,EAASuP,IAChEtE,IAAmB,IASvB,OAjbAnI,qBAAU,WACJ4J,GAAqB+C,MAAM,KAAKC,OAAS,GAAK9C,GAA4B6C,MAAM,KAAKC,OAAS,EAChG3C,IAAkB,GAElBA,IAAkB,KAEnB,CAACL,GAAsBE,KAE1B9J,qBAAU,WACR,GAAuB,GAAnB/C,GAA6C,MAAlBmJ,GAA4C,MAAlBhJ,QAA8C,IAAb+L,GAA0B,6CAClH,sBAAAlJ,EAAA,2FADkH,uBAAC,WAAD,wBAIlH4M,MAED,CAAC5P,EAAiBG,EAAgBgJ,IACrCpG,qBAAU,WACJ2B,GAAMiL,OAAS,GACjBnF,GAAc,0CACW,GAAhB9F,GAAMiL,QAGfnF,IAAc,KAEf,CAAC9F,KAEJ3B,qBAAU,WACR,GAAuB,GAAnB/C,GAA6C,MAAlBG,EAAwB,6CACrD,sBAAA6C,EAAA,6DACEvC,QAAQC,IAAI,iBAAkByI,EAAgB+C,UAAkB/C,SAAuB+C,GAAW/C,GADpG,KAEES,EAFF,SAEyBiG,YAAwBb,EAAY7L,IAAK8L,YAAWhP,EAAS,uBAFtF,8CAGE6J,EAHF,SAG4BgG,YAAad,EAAY7L,IAAK8L,YAAWhP,EAAS,uBAH9E,8CAIE+J,EAJF,UAI4B+F,YAAaf,EAAY7L,IAAK8L,YAAWhP,EAAS,uBAJ9E,sCAKOkJ,EALP,wBAMI1I,QAAQC,IAAI,eAAgByI,EAAgB+C,UAAkB/C,SAAuB+C,IACrF9B,IAAgB,GAPpB,KAQI/N,GARJ,UAQ2B2T,YAAa7P,EAAgBwF,EAAKxC,IAAK6L,EAAY7L,IAAK8L,YAAWhP,EAAS,sBAAuBiD,EAAMC,IAAKgG,GARzI,mCASIiB,IAAgB,GATpB,4BAUajB,EAVb,wBAWI1I,QAAQC,IAAI,eAAgByI,EAAgB+C,UAAkB/C,SAAuB+C,IACrF9B,IAAgB,GAZpB,KAaI/N,GAbJ,UAa2B2T,YAAa7P,EAAgBwF,EAAKxC,IAAK6L,EAAY7L,IAAK8L,YAAWhP,EAAS,sBAAuBiD,EAAMC,IAAKgG,GAbzI,mCAcIiB,IAAgB,GAdpB,6CADqD,uBAAC,WAAD,wBAkBrD6F,MAED,CAACjQ,EAAiBG,EAAgB1D,EAAawD,EAASiM,GAAW/C,IAEtEpG,qBAAU,WACJwE,OAAO6B,GAAuB7B,OAAOsE,UAA+C,IAAxB9N,IAA+D,KAAxBA,GACrGuM,GAAyB,0FAEzBA,IAAyB,KAE1B,CAAClB,EAAqBrL,GAAqB8N,KAE9C9I,qBAAU,WAAM,4CAEd,sBAAAC,EAAA,8DACqC,IAAxBjF,IAA+D,KAAxBA,GADpD,6BAEI0C,QAFJ,SAEoCyP,YAAgB/P,EAAgBpC,IAFpE,+BAEY2C,IAFZ,UAEgB,aAFhB,MAGIyP,YAAa9D,GAAc4C,YAAWhP,EAAS,sBAAuBE,EAAgB+C,EAAMC,IAAKpF,IAHrG,KAIIsL,EAJJ,UAIiC6G,YAAgB/P,EAAgBpC,IAJjE,+CAKIyL,EALJ,UAK0B4G,YAAerS,IALzC,2DAOIsL,EAAuB,GACvBG,EAAgB,IARpB,6CAFc,sBACd/I,QAAQC,IAAI,aAAc0L,GAAWrO,IADvB,mCAadsS,KACC,CAACtS,KAEJgF,qBAAU,WAAM,4CACd,sBAAAC,EAAA,yDACEvC,QAAQC,IAAI,WAAYP,EAAgBvC,UAA6BA,QAAsD,IAAzBA,IAAiE,KAAzBA,SACtG,IAAzBA,IAAiE,KAAzBA,GAFrD,6BAGI0L,EAHJ,SAGkC4G,YAAgB/P,EAAgBvC,IAHlE,8CAII8L,EAJJ,UAI0B0G,YAAexS,IAJzC,gFADc,uBAAC,WAAD,wBAQd0S,KACC,CAAC1S,KAEJmF,qBAAU,WACRiB,IACGC,IADH,sEAC6EC,YAAiBjE,IAC3FkE,MAAK,SAASC,OAIdG,OAAM,SAASC,GAEd/D,QAAQC,IAAI8D,MAEbL,MAAK,iBAGP,CAACjH,KAEJ6F,qBAAU,WAAM,4CACd,sBAAAC,EAAA,0DACMhD,EADN,4BAEIgM,GAFJ,SAE2BuE,YAAc1E,GAAaN,IAFtD,8EADc,uBAAC,WAAD,wBAMdiF,KACC,CAAC3E,GAAaN,KAuUf,yBAAKzF,MAAO,CAAE+B,MAAO,SAClBpH,QAAQC,IAAI,4BAA6B4L,GAAgBA,IACzD7L,QAAQC,IAAI,kBAAmBqL,IAC/BtL,QAAQC,IAAI,QAAS+J,IACrBM,IACC,yBAAKjF,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,GAAIC,WAAY,WAClF,yBAAKC,QAAS,kBAAM6E,IAAe,IAAQlF,MAAO,CAAEM,OAAQ,UAAWQ,cAAe,IACpF,0CAEF,yBAAKd,MAAO,CAAEU,OAAQ,SAAUqB,MAAO,MAAOoB,UAAW,OAAQ1C,OAAQ,yBACvE,6BACE,yBAAKT,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KAClE,IACD,sCAEF,yBAAKH,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,2BAAOrJ,KAAK,QAAQwL,SAAU,SAAAE,GAAM,YAAmC,IAAxBA,EAAOA,OAAOH,OAAyB0C,GAASvC,EAAOA,OAAOH,QAAQA,MAAO7D,GAAOoB,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqB7I,MAAO,SAAkB,KAEpN,6BACA,yBAAK/B,MAAO,CAAEQ,WAAY,UAAWa,aAAa,KAChD,yBAAKrB,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KACnE,uCAGF,6BACE,+BACE,kBAAClK,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOgV,IAAI,+BAAX,+BAGF,kBAAChV,EAAD,KACE,2BAAOgV,IAAI,wBAAX,gCAGJ,kBAAC5U,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BACEqB,KAAK,8BACLwL,SAAU,SAAAE,GAAM,YAAmC,IAAxBA,EAAOA,OAAOH,OAAyBqD,GAAuBlD,EAAOA,OAAOH,MAAMqI,sBAC7GrI,MAAOxK,GACP+H,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqB7I,MAAO,OACrD,KAGZ,kBAAClM,EAAD,KACE,2BACEqB,KAAK,wBACLwL,SAAU,SAAAE,GAAM,YAAmC,IAAxBA,EAAOA,OAAOH,OAAyBuD,GAAepD,EAAOA,OAAOH,MAAMqI,sBACrGrI,MAAOsD,GACP/F,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBACzB,IACV,6BAPF,YAQYtH,EARZ,IAQkCG,IAGpC,6BACA,kBAACxN,EAAD,KACE,kBAACJ,EAAD,KACE,2BAAOgV,IAAI,0BAAX,wBAGF,kBAAChV,EAAD,KACE,2BAAOgV,IAAI,IAAX,iCAGJ,kBAAC5U,EAAD,KAEI,kBAACJ,EAAD,CAAQG,WAAYqP,GAA0B,SAAW,UAAWrF,MAAO,CAAEsJ,YAAa,IACxF,2BAAOpS,KAAK,yBAAyBwL,SAAU,SAAAE,GAAM,OAAIgD,GAAwBhD,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAO3K,GAAsBkI,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqB7I,MAAO,OAAgB,KAIzO,kBAAClM,EAAD,CAAQmK,MAAO,CAAEsJ,YAAa,IAC5B,2BAAOpS,KAAK,YAAYwL,SAAU,SAAAE,GAAM,OAAI8C,GAAY9C,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOgD,GAAUzF,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBADtJ,IACsL,6BADtL,YAEgC,UAApBrF,GAAkC7D,WAAWnH,GAAewQ,QAAQ,GAApE,IAA0EtQ,EAAuBiH,WAAWjK,GAAsBsT,QAAQ,GAA1I,IAAgJpH,IAG9J,kBAAC1N,EAAD,KACE,kBAACJ,EAAD,KACE,yBAAKmK,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUa,SAAU,SACjE,kBAACjL,EAAD,CACEE,SAA8B,UAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,SACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAE1HzQ,GAEH,kBAACtE,EAAD,CACEE,SAA8B,QAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,OACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAJ7H,QAQA,kBAAC/U,EAAD,CACEE,SAA8B,QAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,OACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAJ7H,QAQA,kBAAC/U,EAAD,CACEE,SAA8B,OAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,MACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAJ7H,OAQA,kBAAC/U,EAAD,CACEE,SAA8B,QAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,OACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAJ7H,SAQa,QAAX/Q,GAAgC,WAAXA,GAAmC,UAAXA,IAC7C,kBAAChE,EAAD,CACEE,SAA8B,OAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,MACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAJ7H,OASF,kBAAC/U,EAAD,CACEE,SAA8B,UAApBkP,GACVlF,QAAS,SAAAsC,GAAC,OAAI6G,GAA0B7G,IACxCqI,aAAW,SACXhL,MAAO,CAAEiL,YAAa,iBAAkB3K,OAAQ,UAAWgJ,YAAa,EAAGjI,aAAc,EAAGkI,aAAc,GAAI2B,YAAa,IAJ7H,sBAaR,8BAGF,yBAAKlL,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUL,cAAe,SAAUE,WAAY,WAC5F,2BAAOyK,IAAI,QAAX,oBAEC,EAQD,4BAAK7J,YAAUiF,MAEjB,6BACC1B,IACC,yBAAKvE,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,kBAAC,IAAD,CAAMM,MAAM,UAAU0D,IACtB,8BAGHE,IACC,yBAAKzE,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,kBAAC,IAAD,CAAMM,MAAM,UAAU4D,IACtB,+BAKN,6BACE,yBAAKzE,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KACnE,yCAGF,6BACE,+BACE,kBAAClK,EAAD,KACE,kBAACJ,EAAD,KACE,2BAAOgV,IAAI,cAAX,2BADF,KAGA,kBAAChV,EAAD,KACE,2BAAOgV,IAAI,YAAX,4BAGJ,kBAAC5U,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOqB,KAAK,aAAawL,SAAU,SAAAE,GAAM,OAAI6F,GAAa7F,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAoB,GAAb9K,GAAiB,MAAQA,GAAWqI,MAAO,CAAE2K,aAAc,EAAGC,MAAO,wBAElL,kBAAC/U,EAAD,KACG,IACD,2BAAOqB,KAAK,WAAWwL,SAAU,SAAAE,GAAM,OAAIgG,GAAWhG,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAO5K,GAASmI,MAAO,CAAE2K,aAAc,EAAGC,MAAO,0BAIvJ,yBAAK5K,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAU4K,UAAW,WAApE,+IAC8I,6BAC5I,gCAIN,yBAAKnL,MAAO,CAAEQ,WAAY,YACxB,yBAAKR,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KACnE,uCAEF,+BACE,kBAAClK,EAAD,KACE,yBAAK+J,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,4BACE,2BAAOgC,KAAK,QAAQG,SAAU,SAAA0I,GAAK,OAAI3E,GAAmB2E,EAAMxI,OAAOH,QAAQ4I,QAA6B,SAApBtT,GAA4B0K,MAAM,OAAOvL,KAAK,WADxI,SAGA,4BACE,2BAAOqL,KAAK,QAAQG,SAAU,SAAA0I,GAAK,OAAI3E,GAAmB2E,EAAMxI,OAAOH,QAAQ4I,QAA6B,cAApBtT,GAAiC0K,MAAM,YAAYvL,KAAK,WADlJ,cAGA,4BACE,2BAAOqL,KAAK,QAAQG,SAAU,SAAA0I,GAAK,OAAI3E,GAAmB2E,EAAMxI,OAAOH,QAAQ4I,QAA6B,aAApBtT,GAAgC0K,MAAM,WAAWvL,KAAK,WADhJ,YACqK,KAGrK,4BACE,2BAAOqL,KAAK,QAAQG,SAAU,SAAA0I,GAAK,OAAI3E,GAAmB2E,EAAMxI,OAAOH,QAAQ4I,QAA6B,qBAApBtT,GAAwC0K,MAAM,mBAAmBvL,KAAK,WADhK,cACuL,MAGtL,IAOe,aAAnBa,IACC,6BACE,+BACE,6BACA,kBAAC9B,EAAD,KACG,IACD,kBAACJ,EAAD,iDAEF,kBAACI,EAAD,KACG,IACD,kBAACJ,EAAD,KACE,2BAAOqB,KAAK,sBAAsBwL,SAAU,SAAAE,GAAM,OAAIkE,GAAwBlE,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOoE,GAAsB7G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,yBAG1L,6BACA,kBAAC3U,EAAD,KACE,kBAACJ,EAAD,iDAEF,kBAACI,EAAD,KACG,IACD,kBAACJ,EAAD,KACE,2BACEqB,KAAK,4BACLwL,SAAU,SAAAE,GAAM,OAAIoE,GAA+BpE,EAAOA,OAAOH,MAAMqI,sBACvErI,MAAOsE,GACP/G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,0BAKxC3D,IACC,yBAAKjH,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,kBAAC,IAAD,CAAMM,MAAM,UAAZ,oFAKY,YAAnB9I,IACC,6BACE,+BACE,6BACA,kBAAC9B,EAAD,KACG,IACD,kBAACJ,EAAD,KACE,2BAAOgV,IAAI,eAAX,kBAGJ,kBAAC5U,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOqB,KAAK,cAAcwL,SAAU,SAAAE,GAAM,OAAI4E,GAAoB5E,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAO8E,GAAYvH,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAFlK,MAKF,6BACA,kBAAC3U,EAAD,KACE,kBAACJ,EAAD,2BAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOqB,KAAK,UAAUwL,SAAU,SAAAE,GAAM,OAAIwE,GAAUxE,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAO0E,GAAQnH,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAFhJ,QAQY,YAAnB7S,IACC,6BACE,+BACE,6BACA,kBAAC9B,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOgV,IAAI,eAAX,wBAGJ,kBAAC5U,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOqB,KAAK,cAAcwL,SAAU,SAAAE,GAAM,OAAI8E,GAAoB9E,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOgF,GAAYzH,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAFlK,MAKF,6BACA,kBAAC3U,EAAD,KACE,kBAACJ,EAAD,iBAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,2BAAOqB,KAAK,UAAUwL,SAAU,SAAAE,GAAM,OAAI0E,GAAU1E,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAO4E,GAAQrH,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAFhJ,QASY,oBAAnB7S,IACC,yBAAKiI,MAAO,CAAEc,cAAe,KAC3B,yBAAKd,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,2BAAOsK,IAAI,wBAAX,0BACA,2BACE3T,KAAK,uBACLwL,SAAU,SAAAE,GAAM,OAAIgF,GAAsBhF,EAAOA,OAAOH,MAAMqI,sBAC9DrI,MAAOkF,GACP3H,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqB7I,MAAO,MAAOuJ,MAAO,WACnE,IACV,8BAEF,yBAAKtL,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,2BAAOsK,IAAI,uBAAX,kBACA,2BACE3T,KAAK,sBACLwL,SAAU,SAAAE,GAAM,OAAIkF,GAA0BlF,EAAOA,OAAOH,MAAMqI,sBAClErI,MAAOoF,GACP7H,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAE/E,2BAAO8I,IAAI,2BAAX,iDACA,2BAAO3T,KAAK,0BAA0BwL,SAAU,SAAAE,GAAM,OAAIyF,GAAYzF,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOvJ,GAAU8G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAC9M,8BAEF,yBAAK/B,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,2BAAOsK,IAAI,uBAAX,kBACA,2BACE3T,KAAK,sBACLwL,SAAU,SAAAE,GAAM,OAAIoF,GAA0BpF,EAAOA,OAAOH,MAAMqI,sBAClErI,MAAOsF,GACP/H,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAE/E,2BAAO8I,IAAI,2BAAX,iDACA,2BAAO3T,KAAK,0BAA0BwL,SAAU,SAAAE,GAAM,OAAI0F,GAAY1F,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOtJ,GAAU6G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAE9M,8BAEF,yBAAK/B,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,2BAAOsK,IAAI,uBAAX,kBACA,2BACE3T,KAAK,sBACLwL,SAAU,SAAAE,GAAM,OAAIsF,GAA0BtF,EAAOA,OAAOH,MAAMqI,sBAClErI,MAAOwF,GACPjI,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAE/E,2BAAO8I,IAAI,2BAAX,iDACA,2BAAO3T,KAAK,0BAA0BwL,SAAU,SAAAE,GAAM,OAAI2F,GAAY3F,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOrJ,GAAU4G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAE9M,8BAEF,yBAAK/B,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC7C,2BAAOsK,IAAI,uBAAX,iBACA,2BACE3T,KAAK,sBACLwL,SAAU,SAAAE,GAAM,OAAIwF,GAA0BxF,EAAOA,OAAOH,MAAMqI,sBAClErI,MAAO0F,GACPnI,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,WAE/E,2BAAO8I,IAAI,2BAAX,iDACA,2BAAO3T,KAAK,0BAA0BwL,SAAU,SAAAE,GAAM,OAAI4F,GAAY5F,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOpJ,GAAU2G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,oBAAqBW,WAAY,GAAIxJ,MAAO,eAMxN,6BACE,yBAAK/B,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KACnE,6CAEF,+BACE,kBAAClK,EAAD,KACE,yBAAK+J,MAAO,CAAEC,QAAS,OAAQM,eAAgB,gBAAkBmC,SAAU,SAAA0I,GAAK,OAAI1E,GAAyB0E,EAAMxI,OAAOH,SACxH,kBAAC5M,EAAD,KACE,2BAAO0M,KAAK,QAAQ8I,QAAmC,YAA1BrT,GAAqCyK,MAAM,UAAUvL,KAAK,iBADzF,YAGA,kBAACrB,EAAD,KACE,2BAAO0M,KAAK,QAAQ8I,QAAmC,SAA1BrT,GAAkCyK,MAAM,OAAOvL,KAAK,iBADnF,SAGA,kBAACrB,EAAD,KACE,2BAAO0M,KAAK,QAAQ8I,QAAmC,mBAA1BrT,GAA4CyK,MAAM,iBAAiBvL,KAAK,iBADvG,sBAMoB,WAAzBc,IACC,yBAAKgI,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAA/C,oCACmC,6BACjC,8BAGsB,QAAzBvI,IACC,6BACE,+BACE,kBAAC/B,EAAD,KACE,kBAACJ,EAAD,iBACA,kBAACA,EAAD,oCAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,kBAAC,IAAD,CAAQ0M,KAAK,QAAQiJ,IAAI,IAAIC,IAAI,MAAMhJ,MAAOvK,GAAkBwK,SAAU,SAAA0I,GAAK,OAAIrC,GAAoBqC,EAAMxI,OAAOH,WAEtH,kBAAC5M,EAAD,KACG,IACD,2BAAOqB,KAAK,gBAAgBwL,SAAU,SAAAE,GAAM,OAAIgE,GAAgBhE,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOkE,GAAc3G,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAFlK,OAMJ,yBAAK5K,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC5CrI,GADH,8CACgEyO,GADhE,aAC6FzO,GAAmB,KAAO,qCAAW,IAAMA,GAAjB,2CAEvH,6BACA,8BAGsB,kBAAzBF,IACC,6BACE,+BACE,kBAAC/B,EAAD,KACE,kBAACJ,EAAD,iBACA,kBAACA,EAAD,oCACA,kBAACA,EAAD,oCAEF,kBAACI,EAAD,KACE,kBAACJ,EAAD,KACG,IACD,kBAAC,IAAD,CAAQkM,MAAM,QAAQQ,KAAK,QAAQiJ,IAAI,IAAIC,IAAI,MAAMhJ,MAAOvK,GAAkBwK,SAAU,SAAA0I,GAAK,OAAIrC,GAAoBqC,EAAMxI,OAAOH,WAEpI,kBAAC5M,EAAD,KACG,IACD,2BAAOqB,KAAK,kBAAkBwL,SAAU,SAAAE,GAAM,OAAIiG,GAAiBjG,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOtK,GAAe6H,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAAgC,KAEtM,kBAAC/U,EAAD,KACG,IACD,2BAAOqB,KAAK,mBAAmBwL,SAAU,SAAAE,GAAM,OAAIkG,GAAmBlG,EAAOA,OAAOH,MAAMqI,sBAAsBrI,MAAOrK,GAAiB4H,MAAO,CAAE2K,aAAc,EAAGC,MAAO,uBAAgC,OAI/M,yBAAK5K,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUL,cAAe,WACrEhI,GAAmB,KAAO,0BAAM8H,MAAO,CAAEmL,UAAW,WAAa,IAAMjT,GAA7C,+CAC3B,0BAAM8H,MAAO,CAAEmL,UAAW,WACvBjT,GADH,iEACmFC,GADnF,yDACwJC,GADxJ,YACkL,MAGpL,6BACA,+BAIN,yBAAK4H,MAAO,CAAEQ,WAAY,YACxB,yBAAKR,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUJ,WAAY,KACnE,wCAEF,yBAAKH,MAAO,CAAEC,QAAS,OAAQM,eAAgB,UAAYmC,SAAU,SAAA0I,GAAK,OAAIzF,GAAcyF,EAAMxI,OAAOH,SACvG,4BACE,2BAAOF,KAAK,QAAQ8I,QAAwB,WAAfrV,GAAyByM,MAAM,SAASvL,KAAK,eAD5E,SAGA,4BACE,2BAAOqL,KAAK,QAAQ8I,QAAwB,YAAfrV,GAA0ByM,MAAM,UAAUvL,KAAK,eAD9E,WAIF,yBAAK8I,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAA2B,UAAdvK,GAAyB,uFAAyF,6DAGhL,yBAAKgK,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAUL,cAAe,SAAUE,WAAY,SAAUU,cAAe,GAAIX,WAAY,IACrI,yBAAKH,MAAO,CAAEuJ,aAAc,SAA5B,sBAhvBd,SAA6BxR,EAAiBC,EAAuBhC,EAAY6P,GAC/E,IAAI6F,EAAQ,EAaZ,MAZuB,QAAnB3T,GACF2T,IAE2B,WAAzB1T,GACF0T,IAEgB,UAAd1V,GACF0V,IAEE7F,GACF6F,IAEKA,EAkuB+DC,CAAoB5T,GAAiBC,GAAuBhC,GAAY6P,IAAc,EAAhJ,6BACA,6BACG,IACD,2EAFF,IAE0DlL,QAAQC,IAAI,wBAAyB7D,EAAkBA,EAAiB6U,SAAS,aACxI7U,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BACsB,QAAnB9I,IAA6B,8EAC7BhB,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BACGgF,IAAc,wEACd9O,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BAC4B,WAAzB7I,IAAsC,oFACtCjB,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BACiB,WAAd7K,IAA2B,6EAC3Be,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BACE,+EACC9J,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BACE,kFACC9J,EAAiB6U,SAAS,aACzB,8BACE,kBAAC,IAAD,CAAa/K,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAE7D,kBAAC,IAAD,uBAGHiE,GAAeiH,SAAS,kBAAoB,kBAAC,IAAD,CAAa/K,MAAM,SAAnB,YAE/C,6BACA,6BAAMgE,IAAgB,kBAAC,IAAD,CAAMhE,MAAM,UAAUgE,GAAa8D,aACzD,6BACA,yBAAK3I,MAAO,CAAEmL,UAAW,WACtBhH,IACC,kBAAC,IAAD,CAAMtD,MAAM,QAAQD,WAAY,IAAKD,SAAS,QAA9C,4EAC2E,uBAAGkL,KAAI,0CAA4C1H,IAAnD,0CAAyGA,WASjM,EAOD,6BACA,6BACA,yBAAKnE,MAAO,CAAEC,QAAS,OAAQM,eAAgB,WAC5C5F,QAAQC,IAAI,eAAgBqK,SACN,IAAfc,SACY,IAAbN,IACM,KAAbA,SAC+B,IAAxBxN,IACiB,KAAxBA,IACyB,KAAzBH,IACyB,GAAzByM,IACc,GAAdE,IACe,IAAfsB,IA9uBN,SAAkChO,EAAiB8O,EAAsBE,EAA6BQ,EAAYJ,EAAQM,EAAYJ,EAAQM,EAAoB7O,EAAOC,EAAOC,EAAOC,EAAOC,EAAUC,EAAUC,EAAUC,GAC1N,SAASyS,EAAmBhT,EAAOC,EAAOC,EAAOC,GAC/C,OAAIwI,OAAO3I,GAAS2I,OAAO1I,IAAU0I,OAAO1I,GAAS0I,OAAOzI,IAAUyI,OAAOzI,GAASyI,OAAOxI,GAM/F,SAAS8S,EAAsB7S,EAAUC,EAAUC,EAAUC,GAC3D,OAAIoI,OAAOvI,GAAYuI,OAAOtI,IAAasI,OAAOtI,GAAYsI,OAAOrI,IAAaqI,OAAOrI,GAAYqI,OAAOpI,GAM9G,GAAuB,QAAnBtB,EACF,OAAO,EACF,GAAuB,aAAnBA,EAAgC,CACzC,GAA4B,IAAxB8O,GAA6D,IAA/BE,GAAqCF,EAAqB+C,MAAM,KAAKC,OAAS,GAAK9C,EAA4B6C,MAAM,KAAKC,OAAS,EACnK,OAAO,EACF,GAA4B,IAAxBhD,GAA6D,IAA/BE,GAAqCF,EAAqB+C,MAAM,KAAKC,OAAS,GAAK9C,EAA4B6C,MAAM,KAAKC,OAAS,EAC1K,OAAO,OAEJ,GAAuB,YAAnB9R,EAA+B,CACxC,GAAkB,IAAdwP,GAA8B,IAAVJ,GAA0B,GAAVA,EACtC,OAAO,EACF,GAAkB,IAAdI,GAA8B,IAAVJ,GAA0B,GAAVA,EAC7C,OAAO,OAEJ,GAAuB,YAAnBpP,EAA+B,CACxC,GAAkB,IAAd0P,GAA8B,IAAVJ,GAA0B,GAAVA,EACtC,OAAO,EACF,GAAkB,IAAdI,GAA8B,IAAVJ,GAA0B,GAAVA,EAC7C,OAAO,OAEJ,GAAuB,oBAAnBtP,EAAuC,CAChD,GACwB,IAAtB4P,GACS,IAAT7O,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACAyS,EAAmBhT,EAAOC,EAAOC,EAAOC,IACxC8S,EAAsB7S,EAAUC,EAAUC,EAAUC,GAEpD,OAAO,EACF,GACiB,IAAtBsO,GACS,IAAT7O,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACS,IAATC,GACS,GAATA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,GACY,IAAZC,GACY,GAAZA,IACCyS,EAAmBhT,EAAOC,EAAOC,EAAOC,KACxC8S,EAAsB7S,EAAUC,EAAUC,EAAUC,GAErD,OAAO,GAgqBN2S,CACCjU,GACA8O,GACAE,GACAQ,GACAJ,GACAM,GACAJ,GACAM,GACAE,GACAE,GACAE,GACAE,GACAjP,GACAC,GACAC,GACAC,KAhxBR,SAAwCrB,EAAuB2O,EAAcxO,EAAeC,GAC1F,MAA6B,WAAzBJ,IAEgC,QAAzBA,EACW,GAAhB2O,GAAqC,IAAhBA,EAKS,kBAAzB3O,EACY,GAAjBG,GAAuC,IAAjBA,GAA0C,GAAnBC,GAAyC,GAAjBD,OADpE,GAywBF8T,CAA+BjU,GAAuB2O,GAAcxO,GAAeC,MACpF6M,GAGEA,IAAe,kBAAC,IAAD,CAAMpE,MAAM,UAAZ,8CAFf,kBAAC,IAAD,CAAQR,QAAS,kBAvnC0C,8CAunCpC6L,CAAoBjU,GAAqBH,MAAhE,gBAKAuM,KAAiBhB,GAAkBnJ,IAAoB+K,KAAgBF,IAAe,kBAAC,IAAD,CAAQ1E,QAAS,kBAAM6E,IAAe,KAAtC,aACtFhL,GAAmB,wBAAI8F,MAAO,CAAEG,WAAY,KAAzB,wDAEtB8E,IACC,kBAAC,IAAD,CAAMjF,MAAO,CAAEC,QAAS,OAAQM,eAAgB,SAAU4K,UAAW,UAAYtK,MAAM,SACrF,6BADF,SACiB,6BACf,6BAFF,mBAE2B,6BAF3B,mBAGmBgD,EAHnB,IAGmCpJ,EACjC,6BAJF,qBAKqBsJ,EAAmB,IALxC,IAK6C,6BAL7C,qBAMqBE,EAAmB,IANxC,MASD,EACD,yBAAKjE,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUK,eAAgB,gBAAiB4C,UAAW,KAClG,yBAAKnD,MAAO,CAAEC,QAAS,OAAQmB,SAAU,OAAQb,eAAgB,WAC9D5F,QAAQC,IAAI,mBAAoBuL,IAChCxL,QAAQC,IAAI,uBAAwByI,EAAgB2B,IAAeC,IAAcF,GAAaoB,IAC9F9B,IACC,6BACG,IACD,kBAAC,IAAD,CAAaxD,MAAO,OAAQkC,SAAS,EAAMC,KAAM,GAAItC,OAAQ,IAC7D,kBAAC,IAAD,qBAGF2C,GACA2B,KACCC,KACAF,IACDoB,IACAA,GAAcgG,KACZ,WA+CEC,GACI,IA9CFlV,EA8CC,EA9CDA,KACAC,EA6CC,EA7CDA,YACAC,EA4CC,EA5CDA,KAGAC,GAyCC,EA3CDC,iBA2CC,EA1CDC,wBA0CC,EAzCDF,oBACAG,EAwCC,EAxCDA,oBAEAE,GAsCC,EAvCDD,qBAuCC,EAtCDC,WACAE,EAqCC,EArCDA,eACAD,EAoCC,EApCDA,UACAE,EAmCC,EAnCDA,QACAC,EAkCC,EAlCDA,qBACAC,EAiCC,EAjCDA,gBACAC,EAgCC,EAhCDA,sBAQAQ,GAwBC,EA/BDP,oBA+BC,EA9BDC,iBA8BC,EA7BDC,cA6BC,EA5BDC,gBA4BC,EA3BDC,YA2BC,EA1BDC,cA0BC,EAzBDC,cAyBC,EAxBDC,sBACAC,EAuBC,EAvBDA,cAIAI,GAmBC,EAtBDH,UAsBC,EArBDE,UAqBC,EApBDD,YAoBC,EAnBDE,cACAC,EAkBC,EAlBDA,MASAe,GASC,EAjBDd,MAiBC,EAhBDC,MAgBC,EAfDC,MAeC,EAdDC,SAcC,EAbDC,SAaC,EAZDC,SAYC,EAXDC,SAWC,EAVDC,kBAUC,EATDO,oBAGAJ,GAMC,EARDF,UAQC,EAPDC,UAOC,EANDC,YACAC,EAKC,EALDA,WACAE,EAIC,EAJDA,YACAD,EAGC,EAHDA,WAIF,IAAuB,IAAnB/B,GAA2C,GAAhBiB,EAC7B,OACE,kBAAC,IAAD,CACEwT,IAAKD,EACLlM,cAAc,SACdE,WAAW,aACXM,OAAO,MACP4L,QAAQ,mBACRC,UAAU,OACV9L,OAAO,kBACPsB,MAAM,QACNyK,OAAO,QACPhM,WAAY4L,GAAShG,GAAY,UAAY,QAC7CgG,MAAOA,EACP/L,QAAS,kBAx+B7B,SAAyB+L,EAAOjV,GAC1BiV,GAAShG,IACX7P,KACA8P,GAAa+F,GACb3V,IAAe,GACfC,IAAgB,GAChBF,EAAkBW,IAElBkP,KAg+B+BoG,CAAgBL,EAAOjV,KAEtC,6BACGL,GAAqBiB,EAAiBS,EAAsBC,EAAegB,EAAYE,EAAYD,EAAYE,EAAaC,EAAoBf,IAChJ,GAEH,4BAAK5B,IACJ,EAKAQ,GACC,6BAEE,gDAAwBA,EAAYsJ,YAAU5J,GAASyB,EAAgB,IAAvE,MACA,kBAACmJ,EAAA,EAAD,CAAahC,MAAO,CAAC+B,MAAM,IAAKwH,aAAa,IAAKtH,UAAQ,EAACC,SAAO,EAACC,QAAQ,UAAUxE,IAAOjG,EAAYsJ,YAAU5J,GAASyB,EAAgB,IAAKuJ,MAAY1K,EAAYsJ,YAAU5J,GAASyB,EAAgB,IAAtD,OAGzJ,6BACE,sCACA,kBAAC,IAAD,KACG,IACAxB,EAFH,QAE4BS,GAAwBmJ,IAAezJ,EAAsBiD,IAG3F,6BACG,IACD,wCAAiB,IACjB,kBAAC,IAAD,KACGsG,YAAQlI,GADX,IAC2BxB,EAD3B,YACwD0J,YAAQlI,GAAgBmI,YAAU5J,GAD1F,IACkGU,GAAwBmJ,IAAezJ,EAAsBiD,IAGjK,6BACG,IACD,mCAAY,IACZ,kBAAC,IAAD,KACGuG,YAAU5J,GADb,IACqBC,EADrB,UACgDS,GAAwBmJ,IAAezJ,EAAsBiD,IAG/G,6BACE,0CADF,IACqB,kBAAC,IAAD,KAAciS,aAAc/U,KAEjD,6BACE,wCACA,kBAAC,IAAD,SAAe+U,aAAc7U,MAE9B,GAKA,EAKE,KACF,EAMD,6BACE,2CACA,kBAAC,IAAD,SA50BtB,SAAyBE,GACvB,MAAuB,QAAnBA,EACK,gDACqB,aAAnBA,EACF,uDACqB,YAAnBA,EACF,2CACqB,YAAnBA,EACF,2CACqB,oBAAnBA,EACF,wDAEA,SAg0B0BuJ,CAAgBvJ,KAEjC,6BACE,iDACA,kBAAC,IAAD,SAAeC,SAO3BqL,GACA2B,KACCC,KACAF,IACDoB,IACAA,GAAcgG,KAAI,YAAuC,IAApCvU,EAAmC,EAAnCA,eAAgBiB,EAAmB,EAAnBA,aACnC,OAA0B,IAAnBjB,GAA2C,GAAhBiB,KACjCgR,QAAU,GAAK,kBAAC,IAAD,6GAGrBxG,GAAkB8C,IAAiBxL,QAAQC,IAAI,qBAAsByI,EAAgB+C,UAAkBA,GAAWD,UAAsBA,IACxI9C,GAAkB8C,IACjB,kBAAC7P,EAAD,CACEC,iBAAkBA,GAClBC,kBAAmBA,EACnBC,eAAgBA,GAChBC,gBAAiBA,GACjBG,eAAgBA,EAChBF,YAAaA,EACbG,qBAAsBA,GACtBG,aAAckP,IAAiBA,GAAc9C,EAAiB,EAAI+C,QC32C9E,MAAMuG,EAAc,CAACN,EAAK5J,EAAOmK,EAAU,MAEzC,GAAwB,oBAAbC,SAA0B,CAGnC,MAAM,cAAEC,EAAgB,UAAS,YAAEC,GAAc,GAASH,EAEpDI,EAAS,IAAIC,gBAAgBJ,SAASK,aAG9BtL,IAAVa,EAAqBA,EAAQuK,EAAO7O,IAAIkO,GAGzB,OAAV5J,GAAkBsK,EAAaC,EAAOG,OAAOd,GAEjDW,EAAOI,IAAIf,EAAK5J,GAErB,IAAIG,EAASiK,SAASQ,SAAW,IAAML,EAAOrE,WAG9C,OAFA/F,EAASA,EAAOE,QAAQ,SAAU,IAClCwK,QAAQR,EAAgB,SAAS,CAAES,KAAM9K,GAAS,GAAIG,GAC/CH,ICXI,uBCZA,SAAmC+K,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDWf,IACtB,MDa2B,EAACpB,EAAK5J,EAAOmK,KAExC,MAAOc,EAAOC,GAAY,mBAAShB,EAAYN,EAAK5J,EAAOmK,IAG3D,MAAO,CAACc,EADO,CAACE,EAAUC,IAAaF,EAAShB,EAAYN,EAAKuB,EAAU,IAAKhB,KAAYiB,OCjBhDC,CAAc,OAAnDzK,EAAP,KAAuB7M,EAAvB,KACA,EAAqCuD,qBAAWE,KAAxCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QAgBzB,OACE,kBAAC,IAAD,CAAQ4T,SAAS,WAAWC,OAAO,MAAMjM,MAAM,OAAOyK,OAAO,QAC3D,kBAAC,IAAD,CAAK5N,MAAM,QAAQqP,YAAY,2CAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAWC,YAAY,OAAOnM,MAAM,MAAMvB,WAAW,GAAGR,MAAO,CAAEC,QAAS,OAAQG,WAAY,SAAUF,cAAe,SAAUY,cAAe,WACpI5G,GAAmB,wBAAI8F,MAAO,CAAEG,WAAY,KAAzB,uDAChCxF,QAAQC,IAAI,aAAcT,EAASgU,cApBtC,SAA0BhU,GAQxB,YAA0C,IAPZ,CAC5B,OAAO,UACP,MAAM,WACN,SAAS,WACT,aAAa,SACb,UAAU,UAEoBA,GAa3BiU,CAAiBjU,GAChB,kBAACiJ,EAAD,CAAeC,eAAgBA,EAAgB7M,kBAAmBA,IAElE0D,GACE,yBAAK8F,MAAO,CAAEmL,UAAW,WACvB,6BACA,kBAAC,IAAD,CAAMnL,MAAO,CAAEmD,UAAW,IAAMvC,WAAW,OAA3C,qBAGA,6BACA,uBAAGZ,MAAO,CAAEuL,WAAY,GAAIL,YAAa,KAAzC,mE","file":"component---src-pages-deals-js-252eb4cab1f705807638.js","sourcesContent":["import React from 'react';\nimport { Layout, SEO } from 'components/common';\nimport { Sale, SaleDetails } from 'components/landing';\n\nexport default () => (\n  <Layout>\n    <SEO />\n    <Sale />\n    <SaleDetails />\n  </Layout>\n);\n","import styled from \"styled-components\";\n\nexport const TableD = styled.td`\n  text-align: center;\n  horizontal-align: center;\n  border: none;\n  padding-bottom: 0px;\n  padding-top: 0px;\n  visibility: ${({ visibility }) => visibility || \"visible\"};\n`;\n\nexport const TableR = styled.tr`\n  border: none;\n`;\n\nexport const TableLabel = styled.div`\n  border-radius: 5px;\n  background: ${({ selected }) => (selected ? \"green\" : \"black\")};\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\n\nimport { getOnlyUserAddress, deployNewSeed, getSeedSales, getCoingeckoName, getNetworkName, getRateInUsd, getNativeTokenPrice, ZERO_ADDRESS, recoverErc20Tokens } from \"../../../templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport axios from \"axios\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport { SmallerText } from \"components/common/Text\";\n\nimport { Text, Card } from \"components/common\";\nimport * as utils from \"../../../templates/utils\";\nimport { fromWei, fromFixed, getCustomTier, approveContract, checkApprovalStatus } from \"../../../templates/utils\";\nimport { WalletContext } from \"providers/WalletProvider\";\n\nimport {\n  Wrapper,\n  ProjectsWrapper,\n  Heading,\n  HeadingText,\n  InfoCards,\n  CardHeaderWrapper,\n  ProjectNameWrapper,\n  Details,\n  ConnectButton,\n  Thumbnail,\n  Link,\n  SaleCard,\n  StatusContainer,\n  EthInput,\n  ColorTitle,\n  UnderlinedTitle,\n  ConnectWalletCard,\n  LitepaperCard,\n  StatsCard,\n  TokenCard,\n  CardHeaderTextWrapper,\n  CardBottomWrapper,\n  FirstStatsCard,\n  RightStatsCard,\n  LeftStatsCard,\n  TierWrapper,\n  TitleText,\n  StatsCardHeading,\n  FlexBox,\n  JoinCard,\n  Cards,\n  TBAText,\n} from \"../../..//templates/styles\";\n\nimport { Avatar } from \"../../../common/Avatar\";\nimport seedSale from \"pages/seed-sale.js\";\n\nexport function SeedCard({\n  setSeedSalesData,\n  setActiveContract,\n  setCardVisible,\n  setDealsVisible,\n  isWalletEnabled1111,\n  refetchData,\n  setRefetchData,\n  loadingIndicator,\n  setLoadingIndicator,\n  getEligibilityStatus,\n  seedSaleData: {\n    name,\n    seedAddress,\n    rate,\n    offeredTokenName,\n    offeredTokenSymbol,\n    offeredTokenTotalSupply,\n    acceptedTokenSymbol,\n    acceptedTokenBalance,\n    weiRaised,\n    dealVisibility,\n    startTime,\n    endTime,\n    acceptedTokenAddress,\n    accessMechanism,\n    distributionMechanism,\n    offeredTokenAddress,\n    percentageVested,\n    cliffDuration,\n    vestingDuration,\n    cliffPeriod,\n    vestingPeriod,\n    vestedBalance,\n    capPerAddressEnabled,\n    capPerAddress,\n    accessNFT,\n    accessNTT,\n    accessToken,\n    totalOffered,\n    tier1,\n    tier2,\n    tier3,\n    tier4,\n    tier1Cap,\n    tier2Cap,\n    tier3Cap,\n    tier4Cap,\n    accessTokenSymbol,\n    capForNTT,\n    capForNFT,\n    nftBalance,\n    nttBalance,\n    kycEnabled,\n    hasValidNtt,\n    accessTokenBalance,\n  },\n}) {\n  const { theme } = useContext(ThemeContext);\n  const { isWalletEnabled, setWalletStatus, chainId, setChainId, currentAccount, setCurrentAccount, nativeBalance, setNativeBalance, nativeTokenName } = useContext(WalletContext);\n  //replace balance with context nativeBalance and currentNetwork with chainId from context\n\n  {\n    console.log(\"native token name 123 \", nativeTokenName);\n  }\n  const [approveLoading, setApproveLoading] = useState(false);\n  const [shineBalance, setShineBalance] = useState(23232);\n  const [currentStatus, setCurrentStatus] = useState(\"seed\");\n  const [tokenContractAddress, setTokenContractAddress] = useState(\"0x00184f7E750Db6D16118597d18b79AAeCE26E5f2\"); // random address initially\n\n  const [isSaleOpenForAll, setIsSaleOpenForAll] = useState();\n  const [projectBalance, setProjectBalance] = useState();\n  //const [weiRaised, setWeiRaised] = useState();\n\n  const [seedSaleShnBalance, setSeedSaleShnBalance] = useState();\n  const [metamaskErrorCode, setMetamaskErrorCode] = useState();\n  const [saleProgress, setSaleProgress] = useState();\n  const [relativeCap, setRelativeCap] = useState();\n  const [newRelativeCap, setNewRelativeCap] = useState(); // used for updating the new relative cap through the UI\n  const [contributions, setContributions] = useState();\n  const [currentMigration, setCurrentMigration] = useState();\n\n  const [isShineBought, setShineBought] = useState(false);\n  const [isTokenWithdrawn, setIsTokenWithdrawn] = useState(false);\n  const [shineBoughtAmount, setShineBoughtAmount] = useState(false);\n  const [isTransactionBeingProcessed, setTransactionBeingProcessed] = useState(false);\n  const [amountToSpend, setAmountToSpend] = useState(0);\n  const [shnReference, setShnReference] = useState(\"\");\n  const [currentEthPrice, setCurrentEthPrice] = useState();\n  const [ethRaised, setEthRaised] = useState();\n  const [saleContractAddress, setSaleContractAddress] = useState(\"0xC7E7D5B322cEa8FEFb388Eb19463737C3468f30D\"); //random address initially\n  //const [rate, setRate] = useState();\n  const [rateInUsd, setRateInUsd] = useState();\n\n  const [vestedSoFar, setVestedSoFar] = useState();\n  const [secondsSinceEpoch, setSecondsSinceEpoch] = useState();\n\n  const [approvalStatus, setApprovalStatus] = useState(false);\n  console.log(\"refetch data\", refetchData);\n\n  useEffect(() => {\n    console.log(\"Refetch data 123\", refetchData);\n\n    if (isWalletEnabled == true && typeof name != \"undefined\") {\n      async function getLocked() {\n        setTokenContractAddress(offeredTokenAddress);\n        setSaleContractAddress(seedAddress);\n        //setRate(rate);\n        utils.getProjectBalance(setProjectBalance, currentAccount, ERC20.abi, offeredTokenAddress);\n        utils.getSeedSaleShnBalance(setSeedSaleShnBalance, ERC20.abi, seedAddress, offeredTokenAddress);\n        console.log(\"sale data 1\", await getNativeTokenPrice(\"0x89\"));\n        setRateInUsd(getRateInUsd(utils.fromFixed(rate), await getNativeTokenPrice(chainId)));\n        setSecondsSinceEpoch(Math.round(Date.now() / 1000));\n        //console.log(\"vested so far \", secondsSinceEpoch <= vestingPeriod, secondsSinceEpoch, cliffPeriod, vestedBalance);\n        if (Math.round(Date.now() / 1000) <= cliffPeriod) {\n          setVestedSoFar(0);\n        } else if (Math.round(Date.now() / 1000) <= vestingPeriod) {\n          setVestedSoFar(rewardPerSecond * (Math.round(Date.now() / 1000) - cliffPeriod));\n        } else {\n          setVestedSoFar(vestedBalance);\n        }\n      }\n      getLocked();\n    }\n  }, [isWalletEnabled, name, refetchData]);\n\n  useEffect(() => {\n    //https://stackoverflow.com/a/70068404 setting refetch back to false, in case if there are multiple swaps one after other\n    if (refetchData == true) {\n      const timer = setTimeout(() => {\n        setRefetchData(false);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [refetchData]);\n\n  useEffect(() => {\n    checkApprovalStatus(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, amountToSpend, setApprovalStatus);\n  }, [amountToSpend, name]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        setCurrentEthPrice(response.data[0].current_price);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [amountToSpend, chainId]);\n\n  function getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration) {\n    if (distributionMechanism == \"lock\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n            {100 - percentageVested}% of the tokens are unlocked immediatly, and the rest after {vestingDuration / 86400} days\n          </Text>\n        </div>\n      );\n    } else if (distributionMechanism == \"linear-vesting\") {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            {100 - percentageVested}% of the tokens are unlocked immediatly, then distributed linearly over {vestingDuration / 86400} days with a cliff period of {cliffDuration / 86400} days\n          </Text>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n            {\" \"}\n            Distribution mechanism\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n            All tokens are unlocked immediatly\n          </Text>\n        </div>\n      );\n    }\n  }\n\n  const project = {\n    title: \"EXAMPLE\",\n    image: \"test\",\n    frontendDetails: { totalRaise: \"200k\", incubationStage: \"seed\", totalSupply: \"500M\", chain: \"Matic\", rate: \"$0.02\", roundAllocation: \"200k\" },\n    technicalDetails: {\n      seed: {\n        rate: 203333,\n        date: \"Fri, 14 Jan 2022 15:00:00 GMT\",\n        metamaskDetails: { sybmol: \"SYMBOL\" },\n        network: \"0x7a69\",\n        caps: { tier1: { amount: 400 }, tier2: { amount: 400 }, tier3: { amount: 400 }, tier4: { amount: 400 } },\n      },\n    },\n  };\n  const saleAbi = Seed.abi;\n\n  function getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4) {\n    if (accessMechanism == \"open\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Open to anyone\n        </Text>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          Whitelist, {fromWei(capPerAddress)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"nft-gate\") {\n      return (\n        <div>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            NFT Gated: {fromWei(capForNFT)} {acceptedTokenSymbol} cap/address\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            NFT: {accessNFT}\n          </Text>\n        </div>\n      );\n    } else if (accessMechanism == \"ntt-gate\") {\n      return (\n        <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n          NTT Gated {fromWei(capForNTT)} {acceptedTokenSymbol} cap/address\n        </Text>\n      );\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      let calculatedTier = getCustomTier(fromWei(accessTokenBalance), fromWei(tier1), fromWei(tier2), fromWei(tier3), fromWei(tier4));\n      return (\n        <div>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Token Gated With Tiers\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Access Token: {accessToken}\n          </Text>\n          <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n            Your Balance: {fromWei(accessTokenBalance)} {accessTokenSymbol} ({calculatedTier})\n          </Text>\n          <div style={{ display: \"flex\", paddingTop: 10, paddingBottom: 10, flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 1\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 1\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier1)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier1Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 2\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 2\n              </Text>\n\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier2)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier2Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 3\" ? \"#322ad1\" : \"red\"} fontWeight={500} fontSize=\"16px\">\n                TIER 3\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                &#62; {fromWei(tier3)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                {fromWei(tier3Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10, paddingRight: 10 }}>\n              <Text color={calculatedTier != \"Tier 4\" ? \"#322ad1\" : \"red\"} fontWeight={700} fontSize=\"16px\">\n                TIER 4\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"16px\">\n                &#62; {fromWei(tier4)} {accessTokenSymbol}\n              </Text>\n              <Text color=\"white\" fontWeight={500} fontSize=\"16px\">\n                Cap/address{\" \"}\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={500} fontSize=\"16px\">\n                {fromWei(tier4Cap)} {acceptedTokenSymbol}\n              </Text>\n            </div>\n          </div>{\" \"}\n        </div>\n      );\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleSwapButton(acceptedTokenAddress, amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus) {\n    if (acceptedTokenAddress == utils.ZERO_ADDRESS) {\n      utils.buyShineTokens(amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus, setRefetchData);\n    } else {\n      utils.swapTokenWithToken(amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus, setRefetchData);\n    }\n  }\n\n  async function handleApprove() {\n    setApproveLoading(true);\n    await approveContract(currentAccount, ERC20.abi, acceptedTokenAddress, seedAddress, utils.toWei(amountToSpend), setApprovalStatus);\n    setApproveLoading(false);\n  }\n\n  function setExpansionDetails() {\n    setSeedSalesData();\n    setActiveContract(null);\n    setCardVisible(false);\n    setDealsVisible(true);\n  }\n\n  async function handleWithdrawUnsoldTokens() {\n    await recoverErc20Tokens(currentAccount, Seed.abi, seedAddress, offeredTokenAddress, utils.toWei(seedSaleShnBalance));\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n      <div onClick={() => setExpansionDetails()} style={{ cursor: \"pointer\" }}>\n        <h3>← Go Back</h3>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 50 }}>\n        <StatsCard background=\"black\" border=\"1px solid white\">\n          <div>{getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1)}</div>\n\n          <CardHeaderWrapper>\n            <ProjectNameWrapper>\n              {false && <Avatar imageUrl={project.image} alt=\"Defi options logo\" width=\"60px\" height=\"60px\" />}\n              <StatsCardHeading margin=\"0 0 40px 0px\" fontSize=\"30px\" fontWeight={800} color=\"white\">\n                {name}\n              </StatsCardHeading>\n            </ProjectNameWrapper>\n          </CardHeaderWrapper>\n\n          <Text color=\"white\" style={{ margin: \"0 auto\" }}>\n            <i>{false && \"Please Note: for Tier1 and Tier 2 sale is opening 15 mins after\"}</i>\n          </Text>\n\n          <CardBottomWrapper background=\"black\">\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Total Deal\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {fromWei(totalOffered)} {offeredTokenSymbol} for max {fromWei(totalOffered) / fromFixed(rate)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Deal avaibility\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.timeConverter(startTime)} to {utils.timeConverter(endTime)}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Total supply for offered token\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={300} fontSize=\"16px\">\n                {utils.fromWei(offeredTokenTotalSupply)} {offeredTokenSymbol}\n              </Text>\n            </div>\n\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={300} fontSize=\"20px\">\n                Rate\n              </Text>\n              <Text color=\"#a2a2a2\" fontWeight={700} fontSize=\"20px\">\n                {fromFixed(rate)} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n              </Text>\n            </div>\n            <div style={{ paddingBottom: 10 }}>\n              <Text color=\"white\" fontWeight={500} fontSize=\"20px\">\n                Access Mechanism\n              </Text>\n\n              {getAccessStatus(accessMechanism, capPerAddress, acceptedTokenSymbol, capForNFT, capForNTT, accessTokenBalance, tier1, tier2, tier3, tier4)}\n            </div>\n            <div>{getDistributionInfo(distributionMechanism, percentageVested, cliffDuration, vestingDuration)}</div>\n\n            {isWalletEnabled && false && (\n              <Card onClick={() => utils.addToWatchlist(project.technicalDetails[currentStatus].metamaskDetails)} borderRadius=\"4px\" background=\"white\" clickable width=\"100%\" height=\"48px\">\n                <Text fontWeight={800}>ADD {project.technicalDetails[currentStatus].metamaskDetails.symbol} TO METAMASK</Text>\n              </Card>\n            )}\n\n            <br></br>\n            <br></br>\n            {secondsSinceEpoch > endTime && <Button onClick={() => handleWithdrawUnsoldTokens()}>Widthdraw Unsold Tokens</Button>}\n            <Text color=\"red\" fontWeight={800}>\n              {endTime && secondsSinceEpoch > endTime && \"Deal closed!\"}\n            </Text>\n            <br></br>\n            <br></br>\n          </CardBottomWrapper>\n        </StatsCard>\n\n        <TokenCard>\n          <TitleText fontWeight={600} fontSize=\"16px\" color=\"white\">\n            <b> {offeredTokenSymbol}</b>\n            {false && (\n              <Link href={`${chainId == \"0x1\" ? \"https://etherscan.io\" : `https://polygonscan.com/address/${tokenContractAddress}`}`} target=\"_blank\">\n                {tokenContractAddress.substring(0, 6)}...{tokenContractAddress.substring(tokenContractAddress.length - 4)}\n              </Link>\n            )}\n            <Text>\n              Address: <span style={{ color: \"#aeaeae\" }}>{tokenContractAddress} </span>\n            </Text>\n\n            <span>\n              Balance:{\" \"}\n              <span style={{ color: \"#aeaeae\" }}>\n                {\" \"}\n                {Number.parseFloat(projectBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}\n              </span>\n            </span>\n          </TitleText>\n\n          <br></br>\n          {\n            <TitleText fontWeight={600} fontSize=\"16px\" color=\"white\">\n              <b>{acceptedTokenSymbol} </b>\n              {false && (\n                <Link href={`${chainId == \"0x1\" ? \"https://etherscan.io\" : `https://polygonscan.com/address/${tokenContractAddress}`}`} target=\"_blank\">\n                  {acceptedTokenAddress.substring(0, 6)}...{acceptedTokenAddress.substring(acceptedTokenAddress.length - 4)}\n                </Link>\n              )}\n              {acceptedTokenAddress !== utils.ZERO_ADDRESS && (\n                <Text>\n                  {\" \"}\n                  Address: <span style={{ color: \"#aeaeae\" }}>{acceptedTokenAddress} </span>\n                </Text>\n              )}\n            </TitleText>\n          }\n          {acceptedTokenAddress != utils.ZERO_ADDRESS ? (\n            <span>\n              Balance:{\" \"}\n              <span style={{ color: \"#aeaeae\" }}>\n                {Number.parseFloat(fromWei(acceptedTokenBalance)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {acceptedTokenSymbol}\n              </span>\n            </span>\n          ) : (\n            <span>\n              {getNetworkName(chainId)} Balance:{\" \"}\n              <span style={{ color: \"#aeaeae\" }}>\n                {Number.parseFloat(nativeBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} {nativeTokenName}\n              </span>\n            </span>\n          )}\n\n          {false && isWalletEnabled && project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The {currentStatus} offering has finished.\n            </Text>\n          )}\n          {false && isWalletEnabled && utils.getTier(shineBalance) === \"No Tier\" && !project.technicalDetails[currentStatus].saleFinished && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              The amount of SHN that you have is below a minimum threshold to be placed in a tier. In order to participate in the sale, please consider getting some SHN on{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://info.quickswap.exchange/#/token/0x53d76f967de13e7f95e90196438dce695ecfa957\", \"_blank\", \"noopener\")}>\n                Quickswap.\n              </b>\n            </Text>\n          )}\n          {false && isWalletEnabled && (utils.getTier(shineBalance) === \"Tier 1\" || utils.getTier(shineBalance) === \"Tier 2\") && !isSaleOpenForAll && (\n            <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n              Seed sale is not yet open for Tier 1 and Tier 2. To get priority access please consider upgrading your tier{\" \"}\n              <b style={{ cursor: \"pointer\", color: \"#fada5e\" }} onClick={() => window.open(\"https://v2.info.uniswap.org/pair/0x165c6e50ed0ced21c0192fac26c1affb0dea5c28\", \"_blank\", \"noopener\")}>\n                here.\n              </b>\n            </Text>\n          )}\n          <br></br>\n          {isWalletEnabled && (\n            <Details theme={theme}>\n              <div style={{ width: \"100%\" }}>\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {false && <span>Current Network: {getNetworkName(chainId)}</span>}\n                  <br />\n                  {false && (\n                    <span>\n                      Connected account: {window.ethereum.selectedAddress.substring(0, 6)}...\n                      {window.ethereum.selectedAddress.substring(window.ethereum.selectedAddress.length - 4)}\n                    </span>\n                  )}\n                  <br />\n                  {false && isWalletEnabled && (\n                    <Text color=\"#aeaeae\">\n                      {\" \"}\n                      Access token balance: {Number.parseFloat(shineBalance).toLocaleString(undefined, { maximumFractionDigits: 2 })} SHN <b style={{ color: \"#f2df96\" }}>{utils.getTier(shineBalance)}</b>\n                    </Text>\n                  )}\n\n                  <br />\n                  {console.log(\"vestedSoFar \", vestedSoFar)}\n\n                  <br />\n                  {weiRaised && (\n                    <div>\n                      <br></br>\n                      <span>Sale progress: {((weiRaised * fromFixed(rate)) / totalOffered) * 100}% </span>\n                      <ProgressBar animated striped variant=\"success\" now={((weiRaised * fromFixed(rate)) / totalOffered) * 100} label={`${((weiRaised * fromFixed(rate)) / totalOffered) * 100}%`} />\n                    </div>\n                  )}\n                  {true && (\n                    <span>\n                      Remaining Deal Balance: {Number.parseFloat(seedSaleShnBalance).toLocaleString()} {offeredTokenSymbol}\n                    </span>\n                  )}\n\n                  {false && isWalletEnabled && !(new Date().getTime() > new Date(project.technicalDetails[currentStatus].date).getTime()) && (\n                    <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                      Sale is not open yet!\n                    </Text>\n                  )}\n                  {false && isWalletEnabled && chainId !== project.technicalDetails[currentStatus].network && (\n                    <div>\n                      <Text color=\"tomato\" fontSize=\"17px\" fontWeight={800}>\n                        You are on the wrong network. To access {currentStatus} please change your network to {getNetworkName(project.technicalDetails[currentStatus].network)}.\n                      </Text>\n                      <br></br>\n                      <br></br>\n                      <br></br>\n                      <Text color=\"gold\" fontSize=\"14px\" fontWeight={500}>\n                        <i>\n                          {\" \"}\n                          {false && !project.title.includes(\"Kassandra\") && (\n                            <div>\n                              Note: if you want to access vested balances from the seed stage please click{\" \"}\n                              <b style={{ color: \"tomato\", cursor: \"pointer\" }} onClick={() => setCurrentStatus(\"seed\")}>\n                                here\n                              </b>\n                              .\n                            </div>\n                          )}\n                        </i>\n                      </Text>\n                    </div>\n                  )}\n                </Text>\n\n                <Text color=\"#aeaeae\" fontWeight={100}>\n                  {metamaskErrorCode && <ColorTitle>{metamaskErrorCode} </ColorTitle>}\n\n                  {isWalletEnabled && !isTransactionBeingProcessed && (\n                    <div>\n                      <div>\n                        <br></br>\n                        {acceptedTokenAddress == utils.ZERO_ADDRESS ? <label htmlFor=\"eth_amount\">Enter {nativeTokenName} amount:</label> : <label htmlFor=\"eth_amount\">Enter {acceptedTokenSymbol} amount:</label>}\n                        <br />\n                        <EthInput autoComplete=\"off\" type=\"number\" id=\"eth_amount\" value={amountToSpend} onChange={e => utils.handleChangeOfEthAmountToSpend(e.target.value, setAmountToSpend)} />\n                        {console.log(\"debug\", currentEthPrice, amountToSpend, Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString())}\n                        {amountToSpend && (\n                          <span>\n                            {acceptedTokenAddress == utils.ZERO_ADDRESS && (\n                              <span>\n                                {\" \"}\n                                <span> ≈ {Number.parseFloat(currentEthPrice * amountToSpend).toLocaleString()} USD</span> <br />{\" \"}\n                              </span>\n                            )}\n                            <span>\n                              <br></br>\n                              Estimated tokens to receive: {utils.estimateReceivedTokens(amountToSpend, fromFixed(rate))} {offeredTokenSymbol}\n                            </span>\n                            {false && utils.getTier(shineBalance) !== \"No Tier\" && <span>Current contribution: {contributions}</span>}\n                          </span>\n                        )}\n                        <br /> <br />\n                        {// relativeCap && shineBalance needed below because it takes few hundred miliseconds to load the state variables\n                        console.log(\"sshhnn\", shineBalance, contributions)}\n                        {relativeCap && shineBalance && amountToSpend > utils.getMaximumContribution(relativeCap, shineBalance) - contributions && utils.getTier(shineBalance) !== \"No Tier\" && (\n                          <Text color=\"tomato\">\n                            The amount that you are trying to buy exceeds the maximum contribution cap for your current tier which is {utils.getTier(shineBalance)}. Your remaining maximum contribution is:{\" \"}\n                            <span\n                              onClick={e =>\n                                setAmountToSpend(\n                                  Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001)\n                                    .toLocaleString(undefined, {\n                                      minimumFractionDigits: 5,\n                                      maximumFractionDigits: 5,\n                                    })\n                                    .replace(\",\", \"\")\n                                )\n                              }\n                              style={{ cursor: \"pointer\", color: \"#007bff\" }}\n                            >\n                              {Number.parseFloat(utils.getMaximumContribution(relativeCap, shineBalance) - contributions - 0.0001).toLocaleString(undefined, {\n                                minimumFractionDigits: 5,\n                                maximumFractionDigits: 5,\n                              })}{\" \"}\n                            </span>{\" \"}\n                            {nativeTokenName}\n                          </Text>\n                        )}\n                        <br />\n                        <br />\n                        <FlexBox>\n                          {approvalStatus &&\n                            (!approveLoading ? (\n                              <ConnectButton theme={theme} onClick={() => handleApprove()}>\n                                Approve\n                              </ConnectButton>\n                            ) : (\n                              <span style={{ paddingRight: 15 }}>\n                                <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n                                <SmallerText>Confirming...</SmallerText>\n                              </span>\n                            ))}\n\n                          <ConnectButton\n                            theme={theme}\n                            onClick={() =>\n                              handleSwapButton(acceptedTokenAddress, amountToSpend, setAmountToSpend, setShineBought, setShineBoughtAmount, setTransactionBeingProcessed, setMetamaskErrorCode, currentAccount, saleAbi, saleContractAddress, currentStatus)\n                            }\n                          >\n                            Swap\n                          </ConnectButton>\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            {false && \"Note: 25% of the bought tokens are released immediatly, 75% is vested for 100 days.\"}\n                          </Text>\n                        </FlexBox>\n                      </div>\n\n                      <br />\n                      <br />\n                    </div>\n                  )}\n                  {isWalletEnabled && vestedBalance && console.log(\"vested balances \", utils.fromWei(vestedBalance))}\n                  {vestedBalance && vestedBalance > 0 && (\n                    <div>\n                      <FlexBox>\n                        {cliffPeriod != vestingPeriod && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Cliff start time: {utils.timeConverter(cliffPeriod)}\n                          </Text>\n                        )}\n\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Unlock time: {utils.timeConverter(vestingPeriod)}\n                        </Text>\n                      </FlexBox>\n                      <br></br>\n\n                      <FlexBox>\n                        <ConnectButton theme={theme} onClick={() => utils.withdrawTokens(saleAbi, saleContractAddress, currentAccount, setTransactionBeingProcessed, setMetamaskErrorCode, setIsTokenWithdrawn, setShineBought)}>\n                          Widthdraw tokens\n                        </ConnectButton>\n                        {typeof vestedSoFar != \"undefined\" && (\n                          <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                            {\" \"}\n                            Available: {Number.parseFloat(utils.fromWei(vestedSoFar)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                          </Text>\n                        )}\n                        <Text margin=\"0 0 0 10px\" color=\"#aeaeae\">\n                          {\" \"}\n                          Remaining vest: {Number.parseFloat(utils.fromWei(vestedBalance)).toLocaleString(undefined, { maximumFractionDigits: 2 })} {offeredTokenSymbol}{\" \"}\n                        </Text>\n                      </FlexBox>\n                    </div>\n                  )}\n                  {isShineBought && !isTransactionBeingProcessed && (\n                    <div style={{ marginTop: 20 }}>\n                      <h4>\n                        You just successfully bought {Number.parseFloat(shineBoughtAmount).toLocaleString()} {offeredTokenSymbol} tokens! {false && \"(Note: 75% is vested)\"}{\" \"}\n                      </h4>\n                    </div>\n                  )}\n\n                  {isTokenWithdrawn && !isTransactionBeingProcessed && (\n                    <div>\n                      <h4>You have successfully claimed portion of your {offeredTokenSymbol} tokens!</h4>\n                    </div>\n                  )}\n\n                  {isTransactionBeingProcessed && (\n                    <div>\n                      {\" \"}\n                      <h5>Processing </h5>\n                      <PulseLoader color={\"yellow\"} loading={true} size={15} margin={2} /> <br /> <br />\n                      <h5>\n                        <i>(Can take up to few minutes, so please wait patiently)</i>\n                      </h5>\n                    </div>\n                  )}\n                </Text>\n              </div>\n            </Details>\n          )}\n          {console.log(\"current network \", chainId, project.technicalDetails[currentStatus].network)}\n\n          {console.log(\"shine balance\", shineBalance)}\n        </TokenCard>\n      </div>\n    </div>\n  );\n}\n","//note both ntt address and seed factory address have to be updates\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"components/common\";\nimport { Card, Text } from \"components/common\";\n\nimport { TableD, TableR, TableLabel } from \"components/common/Table\";\nimport { SmallerText } from \"components/common/Text\";\nimport { Slider } from \"components/common/Container/index\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nimport {\n  getOnlyUserAddress,\n  deployNewSeed,\n  getSeedSales,\n  toWei,\n  approveContract,\n  getTokenRate,\n  getTokenRatio,\n  fromFixed,\n  getCoingeckoName,\n  getNetworkName,\n  getAllowance,\n  fromWei,\n  setAccessToken,\n  timeConverter,\n  substringAddress,\n  getTokenBalance,\n  getErc20Balance,\n  getErc20Symbol,\n  getNftBalance,\n  erc721Abi,\n  erc4671Abi,\n  ZERO_ADDRESS,\n  getTokenAddressFromDealsConfig,\n  retrieveIndex,\n  getAddress,\n  getDeploymentFeeFromAbi,\n  getTokenAFee,\n  getTokenBFee,\n} from \"../../../../../src/components/templates/utils.js\";\nimport SeedFactory from \"../../../../../static/abi/SeedFactory\";\nimport Seed from \"../../../../../static/abi/Seed\";\nimport ERC20 from \"../../../../../static/abi/ShineToken\";\nimport { SeedCard } from \"./SeedCard.js\";\nimport axios from \"axios\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { Tab } from \"react-bootstrap\";\nimport { families } from \"detect.js\";\nimport { ErrorMessage } from \"formik\";\n\nexport function SeedContainer({ activeContract, setActiveContract }) {\n  const { currentAccount, setCurrentAccount, isWalletEnabled, chainId, nativeTokenName, nativeBalance, refetchData, setRefetchData, loadingIndicator, setLoadingIndicator } = useContext(WalletContext);\n  const [offeredTokenBalance, setOfferedTokenBalance] = useState();\n  const [acceptedTokenBalance, setAcceptedTokenBalance] = useState();\n  const [tokenASymbol, setTokenASymbol] = useState();\n  const [tokenBSymbol, setTokenBSymbol] = useState();\n\n  const [deploymentFee, setDeploymentFee] = useState();\n  const [defaultTokenAFee, setDefaultTokenAFee] = useState();\n  const [defaultTokenBFee, setDefaultTokenBFee] = useState();\n\n  const [createdTag, setCreatedTag] = useState();\n\n  const [salesLoading, setSalesLoading] = useState(false);\n\n  //const [userAddress, setUserAddress] = useState();\n  const [notEnoughTokensAError, setNotEnoughTokensAError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const [successMessage, setSuccessMessage] = useState([\"none\"]);\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [cardVisible, setCardVisible] = useState(false);\n  const [dealsVisible, setDealsVisible] = useState(true);\n  const [formVisible, setFormVisible] = useState(false);\n\n  const [title, setTitle] = useState(\"\");\n\n  const [nativeTokenUsed, setNativeTokenUsed] = useState(true);\n  const [isListedCustomTokenUsed, setIsListedCustomTokenUsed] = useState(true); // for example if USDC, USDT are used\n  const [selectedTokenKey, setSelectedTokenKey] = useState(\"native\");\n  const [stablesUsed, setStablesUsed] = useState(true);\n  const [maxRaise, setMaxRaise] = useState();\n  const [visibility, setVisibility] = useState(\"private\");\n\n  const [acceptedTokenAddress, setAcceptedTokenAddress] = useState();\n  const [requireKyc, setRequireKyc] = useState(false);\n\n  const [offeredTokenAddress, setOfferedTokenAddress] = useState();\n  const [tokenAmount, setTokenAMount] = useState();\n  const [rate, setRate] = useState();\n  const [convertedRate, setConvertedRate] = useState();\n  const [seedSalesData, setSeedSalesData] = useState();\n  const [seedIndex, setSeedIndex] = useState();\n  const [allowance, setAllowance] = useState();\n  const [vestingEnabled, setVestingEnabled] = useState(false);\n\n  const [accessMechanism, setAccessMechanism] = useState(\"open\");\n  const [distributionMechanism, setDistributionMechanism] = useState(\"instant\");\n  const [lockDuration, setLockDuration] = useState(0);\n\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState(\"\");\n  const [capsForWhitelistedAddresses, setcapsForWhitelistedAddresses] = useState(\"\");\n  const [whitelistError, setWhitelistError] = useState(false);\n  const [nftCap, setNftCap] = useState(0);\n  const [nttCap, setNttCap] = useState(0);\n\n  const [nftAddress, setAccessNftAddress] = useState(\"\");\n  const [nttAddress, setAccessNttAddress] = useState(\"\");\n\n  const [accessTokenAddress, setAccessTokenAddress] = useState(\"\");\n  const [accessTokenAmountTier1, setAccessTokenAmountTier1] = useState(0);\n  const [accessTokenAmountTier2, setAccessTokenAmountTier2] = useState(0);\n  const [accessTokenAmountTier3, setAccessTokenAmountTier3] = useState(0);\n  const [accessTokenAmountTier4, setAccessTokenAmountTier4] = useState(0);\n  const [tier1Cap, setTier1Cap] = useState(0); //needs to be initialized to zero as toWei fails because of undefined\n  const [tier2Cap, setTier2Cap] = useState(0);\n  const [tier3Cap, setTier3Cap] = useState(0);\n  const [tier4Cap, setTier4Cap] = useState(0);\n\n  const [startTime, setStartTime] = useState(\"0\");\n  const [endTime, setEndTime] = useState(parseInt(parseInt(Date.now() / 1000 + 60 * 60 * 3).toString())); //3hrs from now\n\n  const [cliffDuration, setCliffDuration] = useState(5184000);\n  const [vestingDuration, setVestingDuration] = useState(5184000);\n  const [percentageVested, setPercentageVested] = useState(100);\n\n  useEffect(() => {\n    if (whitelistedAddresses.split(\",\").length - 1 != capsForWhitelistedAddresses.split(\",\").length - 1) {\n      setWhitelistError(true);\n    } else {\n      setWhitelistError(false);\n    }\n  }, [whitelistedAddresses, capsForWhitelistedAddresses]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && activeContract != null && currentAccount != null && typeof seedIndex == \"undefined\") {\n      async function getIndex() {\n        //setSeedIndex(await retrieveIndex(SeedFactory.abi, seedFactoryAddress, activeContract.toLocaleLowerCase()));\n      }\n      getIndex();\n    }\n  }, [isWalletEnabled, currentAccount, activeContract]);\n  useEffect(() => {\n    if (title.length > 50) {\n      setTitleError(\"Maximum Title length is 50 charachters\");\n    } else if (title.length == 0) {\n      //setTitleError(\"Please enter value for Title\");\n    } else {\n      setTitleError(false);\n    }\n  }, [title]);\n\n  useEffect(() => {\n    if (isWalletEnabled == true && currentAccount != null) {\n      async function loadSeedSales() {\n        console.log(\"active acc dds\", activeContract, seedIndex, typeof activeContract, typeof seedIndex, activeContract);\n        setDeploymentFee(await getDeploymentFeeFromAbi(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\")));\n        setDefaultTokenAFee(await getTokenAFee(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\")));\n        setDefaultTokenBFee(await getTokenBFee(SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\")));\n        if (!activeContract) {\n          console.log(\"active acc 1\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract));\n          setSalesLoading(false);\n        } else if (activeContract) {\n          console.log(\"active acc 2\", activeContract, seedIndex, typeof activeContract, typeof seedIndex);\n          setSalesLoading(true);\n          setSeedSalesData(await getSeedSales(currentAccount, Seed.abi, SeedFactory.abi, getAddress(chainId, \"seedFactoryAddress\"), ERC20.abi, activeContract));\n          setSalesLoading(false);\n        }\n      }\n      loadSeedSales();\n    }\n  }, [isWalletEnabled, currentAccount, refetchData, chainId, seedIndex, activeContract]);\n\n  useEffect(() => {\n    if (Number(offeredTokenBalance) < Number(tokenAmount) && typeof offeredTokenAddress !== \"undefined\" && offeredTokenAddress !== \"\") {\n      setNotEnoughTokensAError(\"You don't have enough offered tokens (A) in your balance to launch a deal successfully\");\n    } else {\n      setNotEnoughTokensAError(false);\n    }\n  }, [offeredTokenBalance, offeredTokenAddress, tokenAmount]);\n\n  useEffect(() => {\n    console.log(\"allowance \", allowance, offeredTokenAddress);\n    async function loadData() {\n      if (typeof offeredTokenAddress !== \"undefined\" && offeredTokenAddress !== \"\") {\n        console.log(\"balance1, \", await getErc20Balance(currentAccount, offeredTokenAddress));\n        getAllowance(setAllowance, getAddress(chainId, \"seedFactoryAddress\"), currentAccount, ERC20.abi, offeredTokenAddress);\n        setOfferedTokenBalance(await getErc20Balance(currentAccount, offeredTokenAddress));\n        setTokenASymbol(await getErc20Symbol(offeredTokenAddress));\n      } else {\n        setOfferedTokenBalance(0);\n        setTokenASymbol(\"\");\n      }\n    }\n    loadData();\n  }, [offeredTokenAddress]);\n\n  useEffect(() => {\n    async function loadDataForAcceptedTokenAddress() {\n      console.log(\"balance2\", currentAccount, acceptedTokenAddress, typeof acceptedTokenAddress, typeof acceptedTokenAddress !== \"undefined\" && acceptedTokenAddress !== \"\");\n      if (typeof acceptedTokenAddress !== \"undefined\" && acceptedTokenAddress !== \"\") {\n        setAcceptedTokenBalance(await getErc20Balance(currentAccount, acceptedTokenAddress));\n        setTokenBSymbol(await getErc20Symbol(acceptedTokenAddress));\n      }\n    }\n    loadDataForAcceptedTokenAddress();\n  }, [acceptedTokenAddress]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${getCoingeckoName(chainId)}`)\n      .then(function(response) {\n        // handle success\n        //setConvertedRate(getTokenRate(response.data[0].current_price, rate));\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }, [rate]);\n\n  useEffect(() => {\n    async function calculateConvertedRate() {\n      if (isWalletEnabled) {\n        setConvertedRate(await getTokenRatio(tokenAmount, maxRaise));\n      }\n    }\n    calculateConvertedRate();\n  }, [tokenAmount, maxRaise]);\n\n  async function handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddressArg) {\n    let acceptedTokenAddress;\n\n    if (acceptedTokenAddressArg == \"\" || typeof acceptedTokenAddressArg == \"undefined\") {\n      acceptedTokenAddress = ZERO_ADDRESS;\n    } else {\n      acceptedTokenAddress = acceptedTokenAddressArg;\n    }\n\n    console.log(\"convertedRate\", rate, convertedRate, fromFixed(convertedRate), offeredTokenAddress, tokenAmount, acceptedTokenAddress);\n    setSuccessMessage([\"none\"]);\n    setErrorMessage();\n    let createdContract = await deployNewSeed(\n      currentAccount,\n      offeredTokenAddress,\n      acceptedTokenAddress,\n      SeedFactory.abi,\n      Seed.abi,\n      getAddress(chainId, \"seedFactoryAddress\"),\n      toWei(tokenAmount),\n      convertedRate,\n      lockDuration,\n      cliffDuration,\n      vestingDuration,\n      percentageVested,\n      startTime,\n      endTime,\n      accessTokenAddress,\n      toWei(accessTokenAmountTier1),\n      toWei(accessTokenAmountTier2),\n      toWei(accessTokenAmountTier3),\n      toWei(accessTokenAmountTier4),\n      toWei(tier1Cap),\n      toWei(tier2Cap),\n      toWei(tier3Cap),\n      toWei(tier4Cap),\n      title,\n      accessMechanism,\n      whitelistedAddresses,\n      capsForWhitelistedAddresses,\n      nftAddress,\n      toWei(nftCap),\n      requireKyc,\n      getAddress(chainId, \"nttAddress\"),\n      nttCap,\n      distributionMechanism,\n      visibility,\n      [\"none\"],\n      setLoadingIndicator,\n      [\"none\"],\n      setSuccessMessage,\n      setErrorMessage\n    );\n    setCreatedTag(createdContract);\n  }\n\n  function handleSeedClick(index, seedAddress) {\n    if (index != seedIndex) {\n      setSeedSalesData(); // this needs to be here because of caching performance issue\n      setSeedIndex(index);\n      setCardVisible(true);\n      setDealsVisible(false);\n      setActiveContract(seedAddress);\n    } else {\n      setSeedIndex();\n    }\n  }\n  async function handleLauncherApprove() {\n    await approveContract(currentAccount, ERC20.abi, offeredTokenAddress, getAddress(chainId, \"seedFactoryAddress\"));\n  }\n\n  function getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) {\n    let count = 2;\n    if (accessMechanism != \"open\") {\n      count++;\n    }\n    if (distributionMechanism != \"instant\") {\n      count++;\n    }\n    if (visibility == \"public\") {\n      count++;\n    }\n    if (requireKyc) {\n      count++;\n    }\n    return count;\n  }\n\n  function getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1) {\n    console.log(\"eligible \", accessMechanism);\n    if (accessMechanism == \"open\") {\n      return (\n        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n          <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Open Access</div>\n          {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n        </div>\n      );\n    } else if (accessMechanism == \"whitelist\") {\n      if (capPerAddressEnabled && capPerAddress > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Whitelist</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"nft-gate\") {\n      if (nftBalance > 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NFT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"ntt-gate\") {\n      if (nttBalance > 0 && hasValidNtt) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>NTT Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      console.log(\"test debug 1\", fromWei(accessTokenBalance), fromWei(tier1), fromWei(accessTokenBalance) >= fromWei(tier1), Number(fromWei(accessTokenBalance)) >= Number(fromWei(tier1)));\n      if (Number(fromWei(accessTokenBalance)) >= Number(fromWei(tier1))) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            <div style={{ background: \"gray\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>\n            <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Tiered Token Gate</div>\n            {kycEnabled ? hasValidNtt ? <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : <div style={{ background: \"red\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>KYC</div> : null}\n          </div>\n        );\n      }\n    }\n  }\n\n  function isErrorInDistributionMechanism(distributionMechanism, lockDuration, cliffDuration, vestingDuration) {\n    if (distributionMechanism == \"instant\") {\n      return false;\n    } else if (distributionMechanism == \"lock\") {\n      if (lockDuration != 0 && lockDuration != \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    } else if (distributionMechanism == \"linear-vesting\") {\n      if (cliffDuration != 0 && cliffDuration != \"\" && vestingDuration != 0 && cliffDuration != 0) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n  function isErrorInAccessMechanism(accessMechanism, whitelistedAddresses, capsForWhitelistedAddresses, nftAddress, nftCap, nttAddress, nttCap, accessTokenAddress, tier1, tier2, tier3, tier4, tier1Cap, tier2Cap, tier3Cap, tier4Cap) {\n    function checkTiersValidity(tier1, tier2, tier3, tier4) {\n      if (Number(tier1) < Number(tier2) && Number(tier2) < Number(tier3) && Number(tier3) < Number(tier4)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    function checkTierCapsValidity(tier1Cap, tier2Cap, tier3Cap, tier4Cap) {\n      if (Number(tier1Cap) < Number(tier2Cap) && Number(tier2Cap) < Number(tier3Cap) && Number(tier3Cap) < Number(tier4Cap)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    if (accessMechanism == \"open\") {\n      return false;\n    } else if (accessMechanism == \"whitelist\") {\n      if (whitelistedAddresses != \"\" && capsForWhitelistedAddresses != \"\" && whitelistedAddresses.split(\",\").length - 1 == capsForWhitelistedAddresses.split(\",\").length - 1) {\n        return false;\n      } else if (whitelistedAddresses == \"\" || capsForWhitelistedAddresses == \"\" || whitelistedAddresses.split(\",\").length - 1 != capsForWhitelistedAddresses.split(\",\").length - 1) {\n        return true;\n      }\n    } else if (accessMechanism == \"nft-gate\") {\n      if (nftAddress != \"\" && nftCap != \"\" && nftCap != 0) {\n        return false;\n      } else if (nftAddress == \"\" || nftCap == \"\" || nftCap == 0) {\n        return true;\n      }\n    } else if (accessMechanism == \"ntt-gate\") {\n      if (nttAddress != \"\" && nttCap != \"\" && nttCap != 0) {\n        return false;\n      } else if (nttAddress == \"\" || nttCap == \"\" || nttCap == 0) {\n        return true;\n      }\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      if (\n        accessTokenAddress != \"\" &&\n        tier1 != \"\" &&\n        tier1 != 0 &&\n        tier2 != \"\" &&\n        tier2 != 0 &&\n        tier3 != \"\" &&\n        tier3 != 0 &&\n        tier4 != \"\" &&\n        tier4 != 0 &&\n        tier1Cap != \"\" &&\n        tier1Cap != 0 &&\n        tier2Cap != \"\" &&\n        tier2Cap != 0 &&\n        tier3Cap != \"\" &&\n        tier3Cap != 0 &&\n        tier4Cap != \"\" &&\n        tier4Cap != 0 &&\n        checkTiersValidity(tier1, tier2, tier3, tier4) &&\n        checkTierCapsValidity(tier1Cap, tier2Cap, tier3Cap, tier4Cap)\n      ) {\n        return false;\n      } else if (\n        accessTokenAddress == \"\" ||\n        tier1 == \"\" ||\n        tier1 == 0 ||\n        tier2 == \"\" ||\n        tier2 == 0 ||\n        tier3 == \"\" ||\n        tier3 == 0 ||\n        tier4 == \"\" ||\n        tier4 == 0 ||\n        tier1Cap == \"\" ||\n        tier1Cap == 0 ||\n        tier2Cap == \"\" ||\n        tier2Cap == 0 ||\n        tier3Cap == \"\" ||\n        tier3Cap == 0 ||\n        tier4Cap == \"\" ||\n        tier4Cap == 0 ||\n        !checkTiersValidity(tier1, tier2, tier3, tier4) ||\n        !checkTierCapsValidity(tier1Cap, tier2Cap, tier3Cap, tier4Cap)\n      ) {\n        return true;\n      }\n    }\n  }\n\n  function getVisibilityStatus(visiblityStatus, currentAccount) {\n    if (visiblityStatus == true) {\n      return <div style={{ background: \"green\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Public</div>;\n    } else if (visiblityStatus == false) {\n      return <div style={{ background: \"#444444\", paddingLeft: 5, paddingRight: 5, marginBottom: 20 }}>Private</div>;\n    }\n  }\n\n  function getAccessStatus(accessMechanism) {\n    if (accessMechanism == \"open\") {\n      return <span>Open to anyone</span>;\n    } else if (accessMechanism == \"whitelist\") {\n      return <span>Whitelisted addresses</span>;\n    } else if (accessMechanism == \"nft-gate\") {\n      return <span>NFT Gated</span>;\n    } else if (accessMechanism == \"ntt-gate\") {\n      return <span>NTT Gated</span>;\n    } else if (accessMechanism == \"token-gate-tiers\") {\n      return <span>Token Gated With Tiers</span>;\n    } else {\n      return \"Uknown\";\n    }\n  }\n\n  function handleOfferedTokenAddress(data) {\n    console.log(\"data \", data.target.getAttribute(\"data-token\"));\n    let offeredTokenKey = data.target.getAttribute(\"data-token\");\n    setSelectedTokenKey(offeredTokenKey);\n    if (offeredTokenKey == \"custom\") {\n      setAcceptedTokenBalance(0);\n      setTokenBSymbol(\"\");\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(false);\n      setNativeTokenUsed(false);\n    } else if (offeredTokenKey == \"native\") {\n      setNativeTokenUsed(true);\n      setAcceptedTokenBalance(0);\n      setTokenBSymbol(\"\");\n      setAcceptedTokenAddress(\"\");\n      setIsListedCustomTokenUsed(true);\n    } else {\n      setIsListedCustomTokenUsed(true);\n      setAcceptedTokenBalance(0);\n      setTokenBSymbol(\"\");\n      setAcceptedTokenAddress(getTokenAddressFromDealsConfig(chainId, offeredTokenKey));\n      setNativeTokenUsed(false);\n    }\n  }\n\n  function handleKycCheckbox(requireKyc) {\n    setNttCap(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn);\n    setRequireKyc(!requireKyc);\n  }\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {console.log(\"isVestingenabled  \", typeof vestingEnabled, vestingEnabled)}\n      {console.log(\"converted rate \", convertedRate)}\n      {console.log(\"trx- \", successMessage)}\n      {formVisible && (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 50, alignItems: \"center\" }}>\n          <div onClick={() => setFormVisible(false)} style={{ cursor: \"pointer\", paddingBottom: 0 }}>\n            <h3>← Go Back</h3>\n          </div>\n          <div style={{ margin: \"0 auto\", width: \"70%\", marginTop: \"25px\", border: \"1px solid whitesmoke\" }}>\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                {\" \"}\n                <h2>Title</h2>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <input name=\"title\" onChange={target => typeof target.target.value !== \"undefined\" && setTitle(target.target.value)} value={title} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"80%\" }}></input>{\" \"}\n              </div>\n              <br></br>\n              <div style={{ background: \"#4f4fc8\", paddingRight:70 }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Tokens</h2>\n                </div>\n\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <label for=\"offered-erc20-token-address\">Offered Token (A) Address:</label>\n                      </TableD>\n\n                      <TableD>\n                        <label for=\"emitted-token-amount\">Offered Token (A) Amount: </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input\n                          name=\"offered-erc20-token-address\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setOfferedTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={offeredTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}\n                        ></input>{\" \"}\n                      </TableD>\n\n                      <TableD>\n                        <input\n                          name=\"accepted-token-amount\"\n                          onChange={target => typeof target.target.value !== \"undefined\" && setTokenAMount(target.target.value.toLocaleLowerCase())}\n                          value={tokenAmount}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                        ></input>{\" \"}\n                        <br></br>\n                        Balance: {offeredTokenBalance} {tokenASymbol}\n                      </TableD>\n                    </TableR>\n                    <br></br>\n                    <TableR>\n                      <TableD>\n                        <label for=\"accepted-token-address\">Accepted Token (B):</label>\n                      </TableD>\n\n                      <TableD>\n                        <label for=\"\">Accepted Token (B) Amount: </label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      {\n                        <TableD visibility={isListedCustomTokenUsed ? \"hidden\" : \"visible\"} style={{ paddingLeft: 0 }}>\n                          <input name=\"accepted-token-address\" onChange={target => setAcceptedTokenAddress(target.target.value.toLocaleLowerCase())} value={acceptedTokenAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: 300 }}></input>{\" \"}\n                        </TableD>\n                      }\n\n                      <TableD style={{ paddingLeft: 0 }}>\n                        <input name=\"max-raise\" onChange={target => setMaxRaise(target.target.value.toLocaleLowerCase())} value={maxRaise} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> <br></br>\n                        Balance: {selectedTokenKey == \"native\" ? `${parseFloat(nativeBalance).toFixed(2)} ${nativeTokenName}` : `${parseFloat(acceptedTokenBalance).toFixed(2)} ${tokenBSymbol}`}\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\n                          <TableLabel\n                            selected={selectedTokenKey == \"native\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"native\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            {nativeTokenName}\n                          </TableLabel>\n                          <TableLabel\n                            selected={selectedTokenKey == \"usdc\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"usdc\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            USDC\n                          </TableLabel>\n                          <TableLabel\n                            selected={selectedTokenKey == \"usdt\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"usdt\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            USDT\n                          </TableLabel>\n                          <TableLabel\n                            selected={selectedTokenKey == \"dai\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"dai\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            DAI\n                          </TableLabel>\n                          <TableLabel\n                            selected={selectedTokenKey == \"frax\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"frax\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            FRAX\n                          </TableLabel>\n                          {(chainId == \"0x89\" || chainId == \"0x13881\" || chainId == \"0x7a69\") && (\n                            <TableLabel\n                              selected={selectedTokenKey == \"shn\"}\n                              onClick={e => handleOfferedTokenAddress(e)}\n                              data-token=\"shn\"\n                              style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                            >\n                              SHN\n                            </TableLabel>\n                          )}\n                          <TableLabel\n                            selected={selectedTokenKey == \"custom\"}\n                            onClick={e => handleOfferedTokenAddress(e)}\n                            data-token=\"custom\"\n                            style={{ borderRight: \"1px solid gray\", cursor: \"pointer\", paddingLeft: 5, paddingRight: 5, marginBottom: 20, marginRight: 3 }}\n                          >\n                            Custom Address\n                          </TableLabel>\n                        </div>\n                      </TableD>\n                    </TableR>\n                  </table>\n\n                  <br></br>\n                </div>\n\n                <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\" }}>\n                  <label for=\"rate\">Token Rate A/B </label>\n\n                  {false && (\n                    <input\n                      name=\"rate\"\n                      onChange={target => typeof target.target.value !== \"undefined\" && setRate(target.target.value.toLocaleLowerCase())}\n                      value={rate}\n                      style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"69%\", float: \"right\" }}\n                    ></input>\n                  )}\n                  <h4>{fromFixed(convertedRate)}</h4>\n                </div>\n                <br></br>\n                {notEnoughTokensAError && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Text color=\"tomato\">{notEnoughTokensAError}</Text>\n                    <br></br>\n                  </div>\n                )}\n                {titleError && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Text color=\"tomato\">{titleError}</Text>\n                    <br></br>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Schedule</h2>\n                </div>\n\n                <div>\n                  <table>\n                    <TableR>\n                      <TableD>\n                        <label for=\"start-time\">Start Timestamp (Unix):</label> \n                      </TableD>\n                      <TableD>\n                        <label for=\"end-time\">End Timestamp: (Unix):</label>\n                      </TableD>\n                    </TableR>\n                    <TableR>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"start-time\" onChange={target => setStartTime(target.target.value.toLocaleLowerCase())} value={startTime == 0 ? \"Now\" : startTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                      <TableD>\n                        {\" \"}\n                        <input name=\"end-time\" onChange={target => setEndTime(target.target.value.toLocaleLowerCase())} value={endTime} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                      </TableD>\n                    </TableR>\n                  </table>\n                  <div style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}>\n                    You will be able to claim remaining Offered Tokens (A) after the End Timestamp, Accepted Token (B) will be sent to your address immediately.<br></br>\n                    <br></br>\n                  </div>\n                </div>\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Access</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"open\"} value=\"open\" name=\"access\" /> Open\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"whitelist\"} value=\"whitelist\" name=\"access\" /> Whitelist\n                      </td>\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"nft-gate\"} value=\"nft-gate\" name=\"access\" /> NFT Gate{\" \"}\n                      </td>\n\n                      <td>\n                        <input type=\"radio\" onChange={event => setAccessMechanism(event.target.value)} checked={accessMechanism === \"token-gate-tiers\"} value=\"token-gate-tiers\" name=\"access\" /> Token Gate{\" \"}\n                      </td>\n\n                      {false && (\n                        <td>\n                          <input type=\"checkbox\" checked={requireKyc} onChange={() => handleKycCheckbox(requireKyc)} /> Require KYC{\" \"}\n                        </td>\n                      )}\n                    </div>\n                  </TableR>\n                  {accessMechanism == \"whitelist\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD> Whitelist Addresses (comma separated) </TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input name=\"whitelist-addresses\" onChange={target => setWhitelistedAddresses(target.target.value.toLocaleLowerCase())} value={whitelistedAddresses} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>\n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>Token (B) Cap/Address (comma separated)</TableD>\n                        </TableR>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <input\n                              name=\"whitelisted-addresses-cap\"\n                              onChange={target => setcapsForWhitelistedAddresses(target.target.value.toLocaleLowerCase())}\n                              value={capsForWhitelistedAddresses}\n                              style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}\n                            ></input>\n                          </TableD>\n                        </TableR>\n                      </table>\n                      {whitelistError && (\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                          <Text color=\"tomato\"> There is a missmatch between a number of Addresses and number of Caps/Address</Text>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {accessMechanism == \"nft-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          {\" \"}\n                          <TableD>\n                            <label for=\"NFT-address\">NFT Address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNftAddress(target.target.value.toLocaleLowerCase())} value={nftAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>Token (B) Cap/NFT</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-cap\" onChange={target => setNftCap(target.target.value.toLocaleLowerCase())} value={nftCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n                  {accessMechanism == \"ntt-gate\" && (\n                    <div>\n                      <table>\n                        <br></br>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <label for=\"NFT-address\">Enter NTT address:</label>\n                          </TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NFT-address\" onChange={target => setAccessNttAddress(target.target.value.toLocaleLowerCase())} value={nttAddress} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                        <br></br>\n                        <TableR>\n                          <TableD>NTT Cap</TableD>\n                        </TableR>\n                        <TableR>\n                          <TableD>\n                            {\" \"}\n                            <input name=\"NTT-cap\" onChange={target => setNttCap(target.target.value.toLocaleLowerCase())} value={nttCap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                          </TableD>\n                        </TableR>\n                      </table>\n                    </div>\n                  )}\n\n                  {accessMechanism == \"token-gate-tiers\" && (\n                    <div style={{ paddingBottom: 20 }}>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"access-token-address\">Access Token Address: </label>\n                        <input\n                          name=\"access-token-address\"\n                          onChange={target => setAccessTokenAddress(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAddress}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", width: \"52%\", float: \"right\" }}\n                        ></input>{\" \"}\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-1-access-token\">Tier 1 needs: </label>\n                        <input\n                          name=\"tier-1-access-token\"\n                          onChange={target => setAccessTokenAmountTier1(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier1}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-1-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-1-max-contribution\" onChange={target => setTier1Cap(target.target.value.toLocaleLowerCase())} value={tier1Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-2-access-token\">Tier 2 needs: </label>\n                        <input\n                          name=\"tier-2-access-token\"\n                          onChange={target => setAccessTokenAmountTier2(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier2}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-2-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-2-max-contribution\" onChange={target => setTier2Cap(target.target.value.toLocaleLowerCase())} value={tier2Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-3-access-token\">Tier 3 needs: </label>\n                        <input\n                          name=\"tier-3-access-token\"\n                          onChange={target => setAccessTokenAmountTier3(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier3}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-3-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-3-max-contribution\" onChange={target => setTier3Cap(target.target.value.toLocaleLowerCase())} value={tier3Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n\n                        <br></br>\n                      </div>\n                      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <label for=\"tier-4-access-token\">Tier 4 needs:</label>\n                        <input\n                          name=\"tier-4-access-token\"\n                          onChange={target => setAccessTokenAmountTier4(target.target.value.toLocaleLowerCase())}\n                          value={accessTokenAmountTier4}\n                          style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}\n                        ></input>\n                        <label for=\"tier-4-max-contribution\"> Access Tokens and Token (B) Cap/Address is: </label>\n                        <input name=\"tier-4-max-contribution\" onChange={target => setTier4Cap(target.target.value.toLocaleLowerCase())} value={tier4Cap} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\", marginLeft: 20, width: \"100px\" }}></input>\n                      </div>\n                    </div>\n                  )}\n                </table>\n              </div>\n              <div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Distribution</h2>\n                </div>\n                <table>\n                  <TableR>\n                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }} onChange={event => setDistributionMechanism(event.target.value)}>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"instant\"} value=\"instant\" name=\"distribution\" /> Instant\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"lock\"} value=\"lock\" name=\"distribution\" /> Lock\n                      </TableD>\n                      <TableD>\n                        <input type=\"radio\" checked={distributionMechanism === \"linear-vesting\"} value=\"linear-vesting\" name=\"distribution\" /> Linear Vesting\n                      </TableD>\n                    </div>\n                  </TableR>\n                </table>\n                {distributionMechanism == \"instant\" && (\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    All tokens are released instantly<br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"lock\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Lock Duration (in seconds)</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"lock-duration\" onChange={target => setLockDuration(target.target.value.toLocaleLowerCase())} value={lockDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input> \n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      {percentageVested}% of the tokens are going to be locked for {lockDuration} seconds&nbsp; {percentageVested < 100 && <span>and {100 - percentageVested}% are going to be released immediatly.</span>}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n                {distributionMechanism == \"linear-vesting\" && (\n                  <div>\n                    <table>\n                      <TableR>\n                        <TableD>% Locked</TableD>\n                        <TableD>Cliff Duration (in seconds)</TableD>\n                        <TableD>Vest Duration (in seconds)</TableD>\n                      </TableR>\n                      <TableR>\n                        <TableD>\n                          {\" \"}\n                          <Slider width=\"120px\" type=\"range\" min=\"0\" max=\"100\" value={percentageVested} onChange={event => setPercentageVested(event.target.value)}></Slider>\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"cliff-timestamp\" onChange={target => setCliffDuration(target.target.value.toLocaleLowerCase())} value={cliffDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                        <TableD>\n                          {\" \"}\n                          <input name=\"vesting-duration\" onChange={target => setVestingDuration(target.target.value.toLocaleLowerCase())} value={vestingDuration} style={{ borderRadius: 6, boder: \"1px solid #3f3d56\" }}></input>{\" \"}\n                        </TableD>\n                      </TableR>\n                    </table>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\" }}>\n                      {percentageVested < 100 && <span style={{ textAlign: \"center\" }}>{100 - percentageVested}% are going to be released immediatly while</span>}\n                      <span style={{ textAlign: \"center\" }}>\n                        {percentageVested}% of the tokens are going to be locked over Cliff Duration of {cliffDuration} seconds and vested linearly over Vesting Duration of {vestingDuration} seconds.{\" \"}\n                      </span>\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n                )}\n              </div>\n              <div style={{ background: \"#4f4fc8\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 25 }}>\n                  <h2>Listing</h2>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }} onChange={event => setVisibility(event.target.value)}>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"public\"} value=\"public\" name=\"visibility\" /> True\n                  </td>\n                  <td>\n                    <input type=\"radio\" checked={visibility === \"private\"} value=\"private\" name=\"visibility\" /> False\n                  </td>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>{visibility == \"public\" ? \"Deal is going to be listed on the main page and also accessible via a generated link\" : \"Deal is only going to be accessible via a generated link\"}</div>\n              </div>\n\n              <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", alignItems: \"center\", paddingBottom: 10, paddingTop: 8 }}>\n                <div style={{ marginBottom: \"15px\" }}> You have in total {getTransactionCount(accessMechanism, distributionMechanism, visibility, requireKyc) + 1} transactions to confirm:</div>\n                <div>\n                  {\" \"}\n                  <span>- transaction to deploy the deal contract</span> {console.log(\"loading indicator 321\", loadingIndicator, loadingIndicator.includes(\"deploy-0\"))}\n                  {loadingIndicator.includes(\"deploy-0\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-0-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {accessMechanism != \"open\" && <span>- transaction to set up the access mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-1\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-1-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {requireKyc && <span>- transaction to set up the kyc module</span>}\n                  {loadingIndicator.includes(\"deploy-2\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-2-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {distributionMechanism != \"instant\" && <span>- transaction to set up the distribution mechanism</span>}\n                  {loadingIndicator.includes(\"deploy-3\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-3-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  {visibility != \"private\" && <span>- transaction to set up the deal visibility</span>}\n                  {loadingIndicator.includes(\"deploy-4\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-4-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to approve the created contract</span>\n                  {loadingIndicator.includes(\"deploy-5\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-5-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <div>\n                  <span>- transaction to send tokens to a smart contract</span>\n                  {loadingIndicator.includes(\"deploy-6\") && (\n                    <span>\n                      <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n\n                      <SmallerText>Confirming...</SmallerText>\n                    </span>\n                  )}\n                  {successMessage.includes(\"trx-6-success\") && <SmallerText color=\"green\">Success</SmallerText>}\n                </div>\n                <br></br>\n                <div>{errorMessage && <Text color=\"tomato\">{errorMessage.toString()}</Text>}</div>\n                <br></br>\n                <div style={{ textAlign: \"center\" }}>\n                  {createdTag && (\n                    <Text color=\"white\" fontWeight={300} fontSize=\"18px\">\n                      Your deal has been created. You can visit the deal at the following link <a href={`https://app.shinedao.finance/deals?tag=${createdTag}`}>https://app.shinedao.finance/deals?tag={createdTag}</a>\n                    </Text>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {false && allowance == 0 && (\n        <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: 20 }}>\n          <Button onClick={() => handleLauncherApprove()}>Approve Launcher</Button>\n          <br></br>\n          <br></br>\n        </div>\n      )}\n      <br></br>\n      <br></br>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {console.log(\"form visible\", formVisible)}\n        {typeof tokenAmount != \"undefined\" &&\n        typeof maxRaise !== \"undefined\" &&\n        maxRaise !== \"\" &&\n        typeof offeredTokenAddress !== \"undefined\" &&\n        offeredTokenAddress !== \"\" &&\n        acceptedTokenAddress !== \"\" &&\n        notEnoughTokensAError == false &&\n        titleError == false &&\n        tokenAmount != \"\" &&\n        !isErrorInAccessMechanism(\n          accessMechanism,\n          whitelistedAddresses,\n          capsForWhitelistedAddresses,\n          nftAddress,\n          nftCap,\n          nttAddress,\n          nttCap,\n          accessTokenAddress,\n          accessTokenAmountTier1,\n          accessTokenAmountTier2,\n          accessTokenAmountTier3,\n          accessTokenAmountTier4,\n          tier1Cap,\n          tier2Cap,\n          tier3Cap,\n          tier4Cap\n        ) &&\n        !isErrorInDistributionMechanism(distributionMechanism, lockDuration, cliffDuration, vestingDuration) &&\n        formVisible ? (\n          <Button onClick={() => handleNewSeedDeploy(offeredTokenAddress, acceptedTokenAddress)}>Launch Deal</Button>\n        ) : (\n          formVisible && <Text color=\"tomato\">Please enter correct value for all fields.</Text>\n        )}\n\n        {!salesLoading && !activeContract && isWalletEnabled && !formVisible && !cardVisible && <Button onClick={() => setFormVisible(true)}>New Deal</Button>}\n        {!isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n      </div>\n      {formVisible && (\n        <Text style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }} color=\"green\">\n          <br></br> Fees:<br></br>\n          <br></br> Slippage: 0.0% <br></br>\n          Deployment fee: {deploymentFee} {nativeTokenName}\n          <br></br>\n          Token A swap fee: {defaultTokenAFee / 100}%<br></br>\n          Token B swap fee: {defaultTokenBFee / 100}%\n        </Text>\n      )}\n      {false && <Button onClick={() => loadSeedSales()}>Load seed sales</Button>}\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", marginTop: 10 }}>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n          {console.log(\"seed sales data \", seedSalesData)}\n          {console.log(\"seed sales mapper  \", !activeContract, dealsVisible, !formVisible, !cardVisible, seedSalesData)}\n          {salesLoading && (\n            <div>\n              {\" \"}\n              <PulseLoader color={\"gold\"} loading={true} size={10} margin={2} />\n              <Text>Loading...</Text>\n            </div>\n          )}\n          {!activeContract &&\n            dealsVisible &&\n            !formVisible &&\n            !cardVisible &&\n            seedSalesData &&\n            seedSalesData.map(\n              (\n                {\n                  name,\n                  seedAddress,\n                  rate,\n                  offeredTokenName,\n                  offeredTokenTotalSupply,\n                  offeredTokenSymbol,\n                  acceptedTokenSymbol,\n                  acceptedTokenBalance,\n                  weiRaised,\n                  dealVisibility,\n                  startTime,\n                  endTime,\n                  acceptedTokenAddress,\n                  accessMechanism,\n                  distributionMechanism,\n                  offeredTokenAddress,\n                  percentageVested,\n                  cliffDuration,\n                  vestingDuration,\n                  cliffPeriod,\n                  vestingPeriod,\n                  vestedBalance,\n                  capPerAddressEnabled,\n                  capPerAddress,\n                  accessNFT,\n                  accessNTT,\n                  accessToken,\n                  totalOffered,\n                  tier1,\n                  tier2,\n                  tier3,\n                  tier4,\n                  tier1Cap,\n                  tier2Cap,\n                  tier3Cap,\n                  tier4Cap,\n                  accessTokenSymbol,\n                  accessTokenBalance,\n                  capForNTT,\n                  capForNFT,\n                  nftBalance,\n                  nttBalance,\n                  hasValidNtt,\n                  kycEnabled,\n                },\n                index\n              ) => {\n                if (dealVisibility === true && totalOffered != 0) {\n                  return (\n                    <Card\n                      key={index}\n                      flexDirection=\"column\"\n                      alignItems=\"flex-start\"\n                      margin=\"5px\"\n                      padding=\"0px 0px 0px 35px\"\n                      clickable=\"true\"\n                      border=\"1px solid white\"\n                      width=\"350px\"\n                      height=\"400px\"\n                      background={index == seedIndex ? \"#2f2f2f\" : \"black\"}\n                      index={index}\n                      onClick={() => handleSeedClick(index, seedAddress)}\n                    >\n                      <div>\n                        {getEligibilityStatus(accessMechanism, capPerAddressEnabled, capPerAddress, nftBalance, kycEnabled, nttBalance, hasValidNtt, accessTokenBalance, tier1)}\n                        {false && <div>{getVisibilityStatus(dealVisibility, currentAccount)} </div>}\n                      </div>\n                      <h1>{name}</h1>\n                      {false && (\n                        <div>\n                          - {offeredTokenName} - {acceptedTokenSymbol} - {fromWei(weiRaised)}\n                        </div>\n                      )}\n                      {weiRaised && (\n                        <div>\n             \n                          <span>Sale progress: {((weiRaised * fromFixed(rate)) / totalOffered) * 100}% </span>\n                          <ProgressBar style={{width:280, marginBottom:20}} animated striped variant=\"success\" now={((weiRaised * fromFixed(rate)) / totalOffered) * 100} label={`${((weiRaised * fromFixed(rate)) / totalOffered) * 100}%`} />\n                        </div>\n                      )}\n                      <div>\n                        <b>Tokens:</b>\n                        <SmallerText>\n                          {\" \"}\n                          {offeredTokenSymbol} for {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                        </SmallerText>\n                      </div>\n                      <div>\n                        {\" \"}\n                        <b>Deal size</b>{\" \"}\n                        <SmallerText>\n                          {fromWei(totalOffered)} {offeredTokenSymbol} for max {fromWei(totalOffered) / fromFixed(rate)} {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                        </SmallerText>\n                      </div>\n                      <div>\n                        {\" \"}\n                        <b>Rate</b>{\" \"}\n                        <SmallerText>\n                          {fromFixed(rate)} {offeredTokenSymbol} for 1 {acceptedTokenAddress != ZERO_ADDRESS ? acceptedTokenSymbol : nativeTokenName}\n                        </SmallerText>\n                      </div>\n                      <div>\n                        <b> Start time</b> <SmallerText>{timeConverter(startTime)}</SmallerText>\n                      </div>\n                      <div>\n                        <b>End time </b>\n                        <SmallerText> {timeConverter(endTime)}</SmallerText>\n                      </div>\n                      {false && (\n                        <div>\n                          <b>Offered Token Address</b> <SmallerText>{substringAddress(offeredTokenAddress)}</SmallerText>\n                        </div>\n                      )}\n                      {false && (\n                        <div>\n                          <b>Accepted Token Address</b>\n                          <SmallerText> {substringAddress(acceptedTokenAddress)}</SmallerText>\n                        </div>\n                      )}{\" \"}\n                      {false && (\n                        <div>\n                          <b>Visibility </b>\n                          <SmallerText> {dealVisibility ? \"Public\" : \"Private\"}</SmallerText>\n                        </div>\n                      )}\n                      <div>\n                        <b>Access Type </b>\n                        <SmallerText> {getAccessStatus(accessMechanism)}</SmallerText>\n                      </div>\n                      <div>\n                        <b>Distribution Type </b>\n                        <SmallerText> {distributionMechanism}</SmallerText>\n                      </div>\n                    </Card>\n                  );\n                }\n              }\n            )}\n          {!activeContract &&\n            dealsVisible &&\n            !formVisible &&\n            !cardVisible &&\n            seedSalesData &&\n            seedSalesData.map(({ dealVisibility, totalOffered }) => {\n              return dealVisibility === true && totalOffered != 0;\n            }).length <= 0 && <Text>There are no publicly listed deals on the selected chain. Click on the button to create a new Deal.</Text>}\n        </div>\n\n        {activeContract && seedSalesData && console.log(\"activeContract xxx\", activeContract, seedIndex, typeof seedIndex, seedSalesData, typeof seedSalesData)}\n        {activeContract && seedSalesData && (\n          <SeedCard\n            setSeedSalesData={setSeedSalesData}\n            setActiveContract={setActiveContract}\n            setCardVisible={setCardVisible}\n            setDealsVisible={setDealsVisible}\n            setRefetchData={setRefetchData}\n            refetchData={refetchData}\n            getEligibilityStatus={getEligibilityStatus}\n            seedSaleData={seedSalesData && seedSalesData[activeContract ? 0 : seedIndex]}\n          ></SeedCard>\n        )}\n      </div>\n    </div>\n  );\n}\n","// inspiration from https://janosh.dev/blog/use-query-param\nimport { useState } from \"react\";\n\nconst handleParam = (key, value, options = {}) => {\n  // Required for SSR. Do nothing if location object is not available.\n  if (typeof location !== `undefined`) {\n    // historyMethod: push or replace (https://developer.mozilla.org/docs/Web/API/History)\n    // to either add to the browser history or replace the last item\n    const { historyMethod = `replace`, nullDeletes = true } = options;\n    // Parse current query string using the browser's URLSearchParams API.\n    const params = new URLSearchParams(location.search);\n    // If the passed value is undefined, check if the URL already contains\n    // a value for it. This is important on initial page load.\n    if (value === undefined) value = params.get(key);\n    // If the passed value is null and the nullDeletes option is\n    // set to true, delete the corresponding query parameter.\n    else if (value === null && nullDeletes) params.delete(key);\n    // Else use the provided key and value to set a new query parameter.\n    else params.set(key, value);\n    // Construct URL containing the updated query parameter(s).\n    let target = location.pathname + `?` + params.toString();\n    target = target.replace(/\\/?\\?$/, ``); // remove ? if search string is empty\n    history[historyMethod + `State`]({ path: value }, ``, target); // update the browser URL\n    return value;\n  }\n};\nexport const useQueryParam = (key, value, options) => {\n  // Relies on useState to trigger component rerenders on calls to setParam.\n  const [param, setParam] = useState(handleParam(key, value, options));\n  // override allows changing options for individual setQueryParam calls\n  const setter = (newValue, override) => setParam(handleParam(key, newValue, { ...options, ...override }));\n  return [param, setter];\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, SEO, Button, Card, Text, MobileDiv } from \"components/common\";\nimport { Header } from \"components/theme\";\nimport { VeShnContainer } from \"../components/common/subpages/veShnContainer\";\nimport { StakingContainer } from \"components/common/subpages/stakingContainer\";\nimport { HorizontalRuler } from \"components/common/HorizontalRuler\";\nimport { ThemeContext } from \"providers/ThemeProvider\";\nimport { WalletContext } from \"providers/WalletProvider\";\nimport { ControllerPanel } from \"components/common/subpages/controllerPanel\";\nimport { SeedContainer } from \"components/common/subpages/seed/seedContainer\";\nimport { useQueryParam } from \"../hooks/useQueryParam\";\n\nexport default ({}) => {\n  const [activeContract, setActiveContract] = useQueryParam(`tag`);\n  const { isWalletEnabled, chainId } = useContext(WalletContext);\n\n  function isChainSupported(chainId){\n    const supportedChainsMapper = {\n      \"0x89\":\"polygon\",\n      \"0xa\":\"optimism\",\n      \"0xa4b1\":\"arbitrum\",\n      \"0x4e454152\":\"aurora\",\n      \"0x13881\":\"mumbai\",\n    }\n    if(typeof supportedChainsMapper[chainId]!=\"undefined\"){\n      return true\n    }else{\n      return false\n    }\n  }\n  return (\n    <Layout position=\"absolute\" bottom=\"4px\" width=\"100%\" height=\"60px\">\n      <SEO title=\"Deals\" description=\"Discover and launch custom token deals\" />\n      <Header />\n      <MobileDiv mobileWidth=\"100%\" width=\"90%\" background=\"\" style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\", paddingBottom: \"200px\" }}>\n        {true && !isWalletEnabled && <h3 style={{ paddingTop: 80 }}>Please connect your wallet to see and create deals.</h3>}\n    {console.log(\"chainId 23\", chainId, process.env.NODE_ENV)}\n        {isChainSupported(chainId) || (process.env.NODE_ENV == \"development\" && chainId == \"0x7a69\") ? (\n          <SeedContainer activeContract={activeContract} setActiveContract={setActiveContract}></SeedContainer>\n        ) : (\n          isWalletEnabled && (\n            <div style={{ textAlign: \"center\" }}>\n              <br></br>\n              <Text style={{ marginTop: 80 }} fontWeight=\"600\">\n                Chain unsupported\n              </Text>\n              <br></br>\n              <p style={{ marginLeft: 80, marginRight: 80 }}>Please select the supported chain from the drop-down menu.</p>\n            </div>\n          )\n        )}\n      </MobileDiv>\n    </Layout>\n  );\n};\n//0x539 - ganache\n//0x7a69 - hardhat\n//0x13881 - mumbai\n//0x89 - polygon\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}